{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIJIN\\\\Desktop\\\\webTest\\\\Bak\\\\webTest\\\\frontend\\\\src\\\\pages\\\\SensorDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, Typography, Paper, Grid, Card, CardContent, Button, Chip, CircularProgress, Divider, IconButton, Tooltip, List, ListItem, ListItemText, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { ArrowBack as ArrowBackIcon, Edit as EditIcon, History as HistoryIcon, DateRange as DateRangeIcon, ErrorOutline as ErrorOutlineIcon, Settings as SettingsIcon } from '@mui/icons-material';\nimport { SENSOR_TYPES } from '../config';\nimport TemperatureIcon from '@mui/icons-material/Thermostat';\nimport HumidityIcon from '@mui/icons-material/Opacity';\nimport LightIcon from '@mui/icons-material/WbSunny';\nimport SoilIcon from '@mui/icons-material/Terrain';\nimport { LineChart } from '@mui/x-charts/LineChart';\nimport { useSocket } from '../contexts/SocketContext';\n\n// Mock API function to get sensor details\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchSensorDetails = async id => {\n  try {\n    // 从localStorage获取传感器数据\n    const savedSensors = localStorage.getItem('smart_farm_sensors');\n    let sensors = [];\n    if (savedSensors) {\n      sensors = JSON.parse(savedSensors);\n    } else {\n      // 如果没有数据，使用默认数据\n      sensors = [{\n        id: 1,\n        name: 'Temperature Sensor 1',\n        type: 'temperature',\n        location: 'Greenhouse 1',\n        status: 'active',\n        current_value: 24.5\n      }, {\n        id: 2,\n        name: 'Humidity Sensor 1',\n        type: 'humidity',\n        location: 'Greenhouse 1',\n        status: 'active',\n        current_value: 65\n      }, {\n        id: 3,\n        name: 'Light Sensor 1',\n        type: 'light',\n        location: 'Greenhouse 2',\n        status: 'active',\n        current_value: 2500\n      }, {\n        id: 4,\n        name: 'Soil Moisture Sensor 1',\n        type: 'soil_moisture',\n        location: 'Greenhouse 1',\n        status: 'inactive',\n        current_value: 35\n      }];\n    }\n\n    // 查找匹配的传感器\n    const sensor = sensors.find(s => s.id === parseInt(id));\n    if (!sensor) {\n      throw new Error('Sensor not found');\n    }\n\n    // 添加详细信息\n    return {\n      ...sensor,\n      model: sensor.model || \"Generic Sensor\",\n      manufacturer: sensor.manufacturer || \"Unknown\",\n      mqtt_topic: sensor.mqtt_topic || `farm/sensors/${sensor.type}/${sensor.location.toLowerCase().replace(/\\s+/g, '_')}`,\n      calibration_date: sensor.calibration_date || \"2023-09-15T00:00:00Z\",\n      installation_date: sensor.installation_date || \"2023-08-01T00:00:00Z\",\n      firmware_version: sensor.firmware_version || \"1.0.2\",\n      battery_level: sensor.battery_level || (sensor.status === 'active' ? 85 : 20),\n      signal_strength: sensor.signal_strength || (sensor.status === 'active' ? -65 : -90),\n      accuracy: sensor.accuracy || 0.5,\n      history: generateMockHistory(sensor.type, 30) // 生成30天的历史数据\n    };\n  } catch (error) {\n    console.error(`Error fetching sensor details: ${error.message}`);\n    throw error;\n  }\n};\n\n// 生成模拟历史数据\nconst generateMockHistory = (sensorType, days) => {\n  const history = [];\n  const now = new Date();\n  const typeInfo = SENSOR_TYPES.find(t => t.id === sensorType) || SENSOR_TYPES[0];\n\n  // 根据传感器类型设置基准值和波动范围\n  let baseValue, fluctuation;\n  switch (sensorType) {\n    case 'temperature':\n      baseValue = 25;\n      fluctuation = 8;\n      break;\n    case 'humidity':\n      baseValue = 60;\n      fluctuation = 20;\n      break;\n    case 'light':\n      baseValue = 2000;\n      fluctuation = 1500;\n      break;\n    case 'soil_moisture':\n      baseValue = 40;\n      fluctuation = 30;\n      break;\n    default:\n      baseValue = 50;\n      fluctuation = 20;\n  }\n\n  // 生成过去几天的数据\n  for (let i = days; i >= 0; i--) {\n    const date = new Date(now);\n    date.setDate(date.getDate() - i);\n\n    // 为每天生成几个不同时间的数据点\n    for (let hour of [8, 12, 16, 20]) {\n      const dataPoint = new Date(date);\n      dataPoint.setHours(hour, 0, 0);\n\n      // 生成略有波动的值\n      const dailySin = Math.sin(i / 5) * (fluctuation / 4);\n      const hourlySin = Math.sin(hour / 4) * (fluctuation / 3);\n      const randomVariation = (Math.random() - 0.5) * (fluctuation / 5);\n      let value = baseValue + dailySin + hourlySin + randomVariation;\n\n      // 确保值不超出合理范围\n      if (sensorType === 'humidity' || sensorType === 'soil_moisture') {\n        value = Math.max(0, Math.min(100, value));\n      } else if (sensorType === 'light') {\n        value = Math.max(0, value);\n      }\n      history.push({\n        timestamp: dataPoint.toISOString(),\n        value: parseFloat(value.toFixed(1)),\n        unit: typeInfo.unit\n      });\n    }\n  }\n  return history;\n};\n\n// 获取传感器图标\nconst getSensorIcon = type => {\n  switch (type) {\n    case 'temperature':\n      return /*#__PURE__*/_jsxDEV(TemperatureIcon, {\n        color: \"error\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 32\n      }, this);\n    case 'humidity':\n      return /*#__PURE__*/_jsxDEV(HumidityIcon, {\n        color: \"primary\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }, this);\n    case 'light':\n      return /*#__PURE__*/_jsxDEV(LightIcon, {\n        color: \"warning\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 26\n      }, this);\n    case 'soil_moisture':\n      return /*#__PURE__*/_jsxDEV(SoilIcon, {\n        color: \"success\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 34\n      }, this);\n    default:\n      return null;\n  }\n};\n\n// 获取状态文本\nconst getStatusText = status => {\n  switch (status) {\n    case 'active':\n      return 'Running';\n    case 'inactive':\n      return 'Offline';\n    case 'maintenance':\n      return 'Maintenance';\n    default:\n      return 'Unknown';\n  }\n};\nconst SensorDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [sensor, setSensor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [chartData, setChartData] = useState({\n    xAxis: [],\n    series: []\n  });\n  const {\n    sensorData\n  } = useSocket();\n\n  // 加载传感器详情\n  useEffect(() => {\n    const loadSensorDetails = async () => {\n      try {\n        const data = await fetchSensorDetails(id);\n        setSensor(data);\n\n        // 准备图表数据\n        prepareChartData(data.history);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    loadSensorDetails();\n  }, [id]);\n\n  // 从Socket更新传感器值\n  useEffect(() => {\n    if (!sensor || Object.keys(sensorData).length === 0) return;\n\n    // 查找匹配的传感器数据\n    Object.values(sensorData).forEach(socketSensor => {\n      if (socketSensor.type === sensor.type && socketSensor.location.toLowerCase() === sensor.location.toLowerCase()) {\n        setSensor(prev => ({\n          ...prev,\n          current_value: socketSensor.value,\n          status: 'active'\n        }));\n      }\n    });\n  }, [sensorData, sensor]);\n\n  // 准备图表数据\n  const prepareChartData = history => {\n    if (!history || history.length === 0) return;\n\n    // 获取最近7天的数据\n    const recentHistory = history.slice(-28);\n    const xAxis = recentHistory.map(item => new Date(item.timestamp));\n    const values = recentHistory.map(item => item.value);\n    setChartData({\n      xAxis: xAxis,\n      series: [{\n        data: values,\n        label: 'Value',\n        color: getSensorColor(sensor.type)\n      }]\n    });\n  };\n\n  // 获取传感器颜色\n  const getSensorColor = type => {\n    switch (type) {\n      case 'temperature':\n        return '#f44336';\n      case 'humidity':\n        return '#2196f3';\n      case 'light':\n        return '#ff9800';\n      case 'soil_moisture':\n        return '#4caf50';\n      default:\n        return '#9e9e9e';\n    }\n  };\n\n  // 获取传感器类型信息\n  const getTypeInfo = type => {\n    return SENSOR_TYPES.find(sensor => sensor.id === type) || {\n      name: 'Unknown',\n      unit: ''\n    };\n  };\n\n  // 格式化日期\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        p: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        gutterBottom: true,\n        children: error === 'Sensor not found' ? '传感器未找到' : `加载传感器详情出错: ${error}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => navigate('/sensors'),\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 22\n        }, this),\n        children: \"\\u8FD4\\u56DE\\u4F20\\u611F\\u5668\\u5217\\u8868\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this);\n  }\n  if (!sensor) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        gutterBottom: true,\n        children: \"\\u4F20\\u611F\\u5668\\u672A\\u627E\\u5230\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => navigate('/sensors'),\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 22\n        }, this),\n        children: \"\\u8FD4\\u56DE\\u4F20\\u611F\\u5668\\u5217\\u8868\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this);\n  }\n  const typeInfo = getTypeInfo(sensor.type);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        sx: {\n          mr: 2\n        },\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 22\n        }, this),\n        onClick: () => navigate('/sensors'),\n        children: \"\\u8FD4\\u56DE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"\\u4F20\\u611F\\u5668\\u8BE6\\u60C5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [getSensorIcon(sensor.type), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  ml: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  component: \"h2\",\n                  children: sensor.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: getStatusText(sensor.status),\n                  color: sensor.status === 'active' ? 'success' : sensor.status === 'inactive' ? 'error' : 'warning',\n                  size: \"small\",\n                  sx: {\n                    mt: 0.5\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"\\u7C7B\\u578B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: typeInfo.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"\\u4F4D\\u7F6E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: sensor.location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"\\u578B\\u53F7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: sensor.model\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"\\u5236\\u9020\\u5546\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: sensor.manufacturer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"MQTT\\u4E3B\\u9898\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  sx: {\n                    wordBreak: 'break-all'\n                  },\n                  children: sensor.mqtt_topic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"\\u5F53\\u524D\\u8BFB\\u6570\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'baseline'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                component: \"p\",\n                children: sensor.current_value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"span\",\n                sx: {\n                  ml: 1\n                },\n                children: typeInfo.unit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"\\u6280\\u672F\\u4FE1\\u606F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              disablePadding: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                disablePadding: true,\n                sx: {\n                  py: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"\\u56FA\\u4EF6\\u7248\\u672C\",\n                  secondary: sensor.firmware_version\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                disablePadding: true,\n                sx: {\n                  py: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"\\u5B89\\u88C5\\u65E5\\u671F\",\n                  secondary: formatDate(sensor.installation_date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                disablePadding: true,\n                sx: {\n                  py: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"\\u6700\\u8FD1\\u6821\\u51C6\\u65E5\\u671F\",\n                  secondary: formatDate(sensor.calibration_date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                disablePadding: true,\n                sx: {\n                  py: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"\\u7CBE\\u5EA6\",\n                  secondary: `±${sensor.accuracy} ${typeInfo.unit}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                disablePadding: true,\n                sx: {\n                  py: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"\\u7535\\u6C60\\u7535\\u91CF\",\n                  secondary: `${sensor.battery_level}%`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: sensor.battery_level > 20 ? \"正常\" : \"低电量\",\n                  color: sensor.battery_level > 20 ? \"success\" : \"error\",\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                disablePadding: true,\n                sx: {\n                  py: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"\\u4FE1\\u53F7\\u5F3A\\u5EA6\",\n                  secondary: `${sensor.signal_strength} dBm`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: sensor.signal_strength > -80 ? \"良好\" : \"弱信号\",\n                  color: sensor.signal_strength > -80 ? \"success\" : \"warning\",\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"\\u5386\\u53F2\\u6570\\u636E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"\\u67E5\\u770B\\u5B8C\\u6574\\u5386\\u53F2\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(HistoryIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 466,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"\\u8C03\\u6574\\u65E5\\u671F\\u8303\\u56F4\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(DateRangeIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 471,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this), chartData.xAxis.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 350,\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                xAxis: [{\n                  data: chartData.xAxis,\n                  scaleType: 'time',\n                  tickMinStep: 3600 * 1000 * 24 // 1天\n                }],\n                series: chartData.series,\n                height: 350\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                textAlign: 'center',\n                py: 4\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                children: \"\\u6682\\u65E0\\u5386\\u53F2\\u6570\\u636E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"\\u6700\\u8FD1\\u8BFB\\u6570\\u8BB0\\u5F55\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"\\u65F6\\u95F4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 510,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"\\u6570\\u503C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"\\u5355\\u4F4D\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: sensor.history.slice(-10).reverse().map((record, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      children: new Date(record.timestamp).toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 518,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: record.value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 521,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: record.unit\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 25\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        mt: 3,\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 22\n        }, this),\n        children: \"\\u8BBE\\u7F6E\\u9608\\u503C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(ErrorOutlineIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 22\n        }, this),\n        children: \"\\u6545\\u969C\\u8BCA\\u65AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 22\n        }, this),\n        children: \"\\u7F16\\u8F91\\u4F20\\u611F\\u5668\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n};\n_s(SensorDetail, \"6605AqDjdr8q5ZciG43uAcoB6AU=\", false, function () {\n  return [useParams, useNavigate, useSocket];\n});\n_c = SensorDetail;\nexport default SensorDetail;\nvar _c;\n$RefreshReg$(_c, \"SensorDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Box","Typography","Paper","Grid","Card","CardContent","Button","Chip","CircularProgress","Divider","IconButton","Tooltip","List","ListItem","ListItemText","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","ArrowBack","ArrowBackIcon","Edit","EditIcon","History","HistoryIcon","DateRange","DateRangeIcon","ErrorOutline","ErrorOutlineIcon","Settings","SettingsIcon","SENSOR_TYPES","TemperatureIcon","HumidityIcon","LightIcon","SoilIcon","LineChart","useSocket","jsxDEV","_jsxDEV","fetchSensorDetails","id","savedSensors","localStorage","getItem","sensors","JSON","parse","name","type","location","status","current_value","sensor","find","s","parseInt","Error","model","manufacturer","mqtt_topic","toLowerCase","replace","calibration_date","installation_date","firmware_version","battery_level","signal_strength","accuracy","history","generateMockHistory","error","console","message","sensorType","days","now","Date","typeInfo","t","baseValue","fluctuation","i","date","setDate","getDate","hour","dataPoint","setHours","dailySin","Math","sin","hourlySin","randomVariation","random","value","max","min","push","timestamp","toISOString","parseFloat","toFixed","unit","getSensorIcon","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","getStatusText","SensorDetail","_s","navigate","setSensor","loading","setLoading","setError","chartData","setChartData","xAxis","series","sensorData","loadSensorDetails","data","prepareChartData","err","Object","keys","length","values","forEach","socketSensor","prev","recentHistory","slice","map","item","label","getSensorColor","getTypeInfo","formatDate","dateString","options","year","month","day","toLocaleDateString","undefined","sx","display","justifyContent","p","children","textAlign","gutterBottom","variant","onClick","startIcon","alignItems","mb","mr","component","container","spacing","xs","md","ml","size","mt","my","wordBreak","disablePadding","py","primary","secondary","title","height","width","scaleType","tickMinStep","align","reverse","record","index","scope","toLocaleString","gap","_c","$RefreshReg$"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/src/pages/SensorDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Chip,\r\n  CircularProgress,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\nimport {\r\n  ArrowBack as ArrowBackIcon,\r\n  Edit as EditIcon,\r\n  History as HistoryIcon,\r\n  DateRange as DateRangeIcon,\r\n  ErrorOutline as ErrorOutlineIcon,\r\n  Settings as SettingsIcon,\r\n} from '@mui/icons-material';\r\nimport { SENSOR_TYPES } from '../config';\r\nimport TemperatureIcon from '@mui/icons-material/Thermostat';\r\nimport HumidityIcon from '@mui/icons-material/Opacity';\r\nimport LightIcon from '@mui/icons-material/WbSunny';\r\nimport SoilIcon from '@mui/icons-material/Terrain';\r\nimport { LineChart } from '@mui/x-charts/LineChart';\r\nimport { useSocket } from '../contexts/SocketContext';\r\n\r\n// Mock API function to get sensor details\r\nconst fetchSensorDetails = async (id) => {\r\n  try {\r\n    // 从localStorage获取传感器数据\r\n    const savedSensors = localStorage.getItem('smart_farm_sensors');\r\n    let sensors = [];\r\n    \r\n    if (savedSensors) {\r\n      sensors = JSON.parse(savedSensors);\r\n    } else {\r\n      // 如果没有数据，使用默认数据\r\n      sensors = [\r\n        { id: 1, name: 'Temperature Sensor 1', type: 'temperature', location: 'Greenhouse 1', status: 'active', current_value: 24.5 },\r\n        { id: 2, name: 'Humidity Sensor 1', type: 'humidity', location: 'Greenhouse 1', status: 'active', current_value: 65 },\r\n        { id: 3, name: 'Light Sensor 1', type: 'light', location: 'Greenhouse 2', status: 'active', current_value: 2500 },\r\n        { id: 4, name: 'Soil Moisture Sensor 1', type: 'soil_moisture', location: 'Greenhouse 1', status: 'inactive', current_value: 35 },\r\n      ];\r\n    }\r\n    \r\n    // 查找匹配的传感器\r\n    const sensor = sensors.find(s => s.id === parseInt(id));\r\n    \r\n    if (!sensor) {\r\n      throw new Error('Sensor not found');\r\n    }\r\n    \r\n    // 添加详细信息\r\n    return {\r\n      ...sensor,\r\n      model: sensor.model || \"Generic Sensor\",\r\n      manufacturer: sensor.manufacturer || \"Unknown\",\r\n      mqtt_topic: sensor.mqtt_topic || `farm/sensors/${sensor.type}/${sensor.location.toLowerCase().replace(/\\s+/g, '_')}`,\r\n      calibration_date: sensor.calibration_date || \"2023-09-15T00:00:00Z\",\r\n      installation_date: sensor.installation_date || \"2023-08-01T00:00:00Z\",\r\n      firmware_version: sensor.firmware_version || \"1.0.2\",\r\n      battery_level: sensor.battery_level || (sensor.status === 'active' ? 85 : 20),\r\n      signal_strength: sensor.signal_strength || (sensor.status === 'active' ? -65 : -90),\r\n      accuracy: sensor.accuracy || 0.5,\r\n      history: generateMockHistory(sensor.type, 30) // 生成30天的历史数据\r\n    };\r\n  } catch (error) {\r\n    console.error(`Error fetching sensor details: ${error.message}`);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 生成模拟历史数据\r\nconst generateMockHistory = (sensorType, days) => {\r\n  const history = [];\r\n  const now = new Date();\r\n  const typeInfo = SENSOR_TYPES.find(t => t.id === sensorType) || SENSOR_TYPES[0];\r\n  \r\n  // 根据传感器类型设置基准值和波动范围\r\n  let baseValue, fluctuation;\r\n  switch(sensorType) {\r\n    case 'temperature':\r\n      baseValue = 25;\r\n      fluctuation = 8;\r\n      break;\r\n    case 'humidity':\r\n      baseValue = 60;\r\n      fluctuation = 20;\r\n      break;\r\n    case 'light':\r\n      baseValue = 2000;\r\n      fluctuation = 1500;\r\n      break;\r\n    case 'soil_moisture':\r\n      baseValue = 40;\r\n      fluctuation = 30;\r\n      break;\r\n    default:\r\n      baseValue = 50;\r\n      fluctuation = 20;\r\n  }\r\n  \r\n  // 生成过去几天的数据\r\n  for (let i = days; i >= 0; i--) {\r\n    const date = new Date(now);\r\n    date.setDate(date.getDate() - i);\r\n    \r\n    // 为每天生成几个不同时间的数据点\r\n    for (let hour of [8, 12, 16, 20]) {\r\n      const dataPoint = new Date(date);\r\n      dataPoint.setHours(hour, 0, 0);\r\n      \r\n      // 生成略有波动的值\r\n      const dailySin = Math.sin(i / 5) * (fluctuation / 4);\r\n      const hourlySin = Math.sin(hour / 4) * (fluctuation / 3);\r\n      const randomVariation = (Math.random() - 0.5) * (fluctuation / 5);\r\n      \r\n      let value = baseValue + dailySin + hourlySin + randomVariation;\r\n      \r\n      // 确保值不超出合理范围\r\n      if (sensorType === 'humidity' || sensorType === 'soil_moisture') {\r\n        value = Math.max(0, Math.min(100, value));\r\n      } else if (sensorType === 'light') {\r\n        value = Math.max(0, value);\r\n      }\r\n      \r\n      history.push({\r\n        timestamp: dataPoint.toISOString(),\r\n        value: parseFloat(value.toFixed(1)),\r\n        unit: typeInfo.unit\r\n      });\r\n    }\r\n  }\r\n  \r\n  return history;\r\n};\r\n\r\n// 获取传感器图标\r\nconst getSensorIcon = (type) => {\r\n  switch(type) {\r\n    case 'temperature': return <TemperatureIcon color=\"error\" fontSize=\"large\" />;\r\n    case 'humidity': return <HumidityIcon color=\"primary\" fontSize=\"large\" />;\r\n    case 'light': return <LightIcon color=\"warning\" fontSize=\"large\" />;\r\n    case 'soil_moisture': return <SoilIcon color=\"success\" fontSize=\"large\" />;\r\n    default: return null;\r\n  }\r\n};\r\n\r\n// 获取状态文本\r\nconst getStatusText = (status) => {\r\n  switch(status) {\r\n    case 'active': return 'Running';\r\n    case 'inactive': return 'Offline';\r\n    case 'maintenance': return 'Maintenance';\r\n    default: return 'Unknown';\r\n  }\r\n};\r\n\r\nconst SensorDetail = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [sensor, setSensor] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [chartData, setChartData] = useState({ xAxis: [], series: [] });\r\n  const { sensorData } = useSocket();\r\n  \r\n  // 加载传感器详情\r\n  useEffect(() => {\r\n    const loadSensorDetails = async () => {\r\n      try {\r\n        const data = await fetchSensorDetails(id);\r\n        setSensor(data);\r\n        \r\n        // 准备图表数据\r\n        prepareChartData(data.history);\r\n        \r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadSensorDetails();\r\n  }, [id]);\r\n  \r\n  // 从Socket更新传感器值\r\n  useEffect(() => {\r\n    if (!sensor || Object.keys(sensorData).length === 0) return;\r\n    \r\n    // 查找匹配的传感器数据\r\n    Object.values(sensorData).forEach(socketSensor => {\r\n      if (socketSensor.type === sensor.type && \r\n          socketSensor.location.toLowerCase() === sensor.location.toLowerCase()) {\r\n        \r\n        setSensor(prev => ({\r\n          ...prev,\r\n          current_value: socketSensor.value,\r\n          status: 'active'\r\n        }));\r\n      }\r\n    });\r\n  }, [sensorData, sensor]);\r\n  \r\n  // 准备图表数据\r\n  const prepareChartData = (history) => {\r\n    if (!history || history.length === 0) return;\r\n    \r\n    // 获取最近7天的数据\r\n    const recentHistory = history.slice(-28);\r\n    \r\n    const xAxis = recentHistory.map(item => new Date(item.timestamp));\r\n    const values = recentHistory.map(item => item.value);\r\n    \r\n    setChartData({\r\n      xAxis: xAxis,\r\n      series: [\r\n        {\r\n          data: values,\r\n          label: 'Value',\r\n          color: getSensorColor(sensor.type)\r\n        }\r\n      ]\r\n    });\r\n  };\r\n  \r\n  // 获取传感器颜色\r\n  const getSensorColor = (type) => {\r\n    switch(type) {\r\n      case 'temperature': return '#f44336';\r\n      case 'humidity': return '#2196f3';\r\n      case 'light': return '#ff9800';\r\n      case 'soil_moisture': return '#4caf50';\r\n      default: return '#9e9e9e';\r\n    }\r\n  };\r\n  \r\n  // 获取传感器类型信息\r\n  const getTypeInfo = (type) => {\r\n    return SENSOR_TYPES.find(sensor => sensor.id === type) || { name: 'Unknown', unit: '' };\r\n  };\r\n  \r\n  // 格式化日期\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n  \r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  if (error) {\r\n    return (\r\n      <Box sx={{ textAlign: 'center', p: 4 }}>\r\n        <Typography color=\"error\" gutterBottom>\r\n          {error === 'Sensor not found' ? '传感器未找到' : `加载传感器详情出错: ${error}`}\r\n        </Typography>\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          onClick={() => navigate('/sensors')}\r\n          startIcon={<ArrowBackIcon />}\r\n        >\r\n          返回传感器列表\r\n        </Button>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  if (!sensor) {\r\n    return (\r\n      <Box sx={{ textAlign: 'center', p: 4 }}>\r\n        <Typography color=\"error\" gutterBottom>传感器未找到</Typography>\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          onClick={() => navigate('/sensors')}\r\n          startIcon={<ArrowBackIcon />}\r\n        >\r\n          返回传感器列表\r\n        </Button>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  const typeInfo = getTypeInfo(sensor.type);\r\n  \r\n  return (\r\n    <Box>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <Button \r\n          variant=\"outlined\" \r\n          sx={{ mr: 2 }}\r\n          startIcon={<ArrowBackIcon />}\r\n          onClick={() => navigate('/sensors')}\r\n        >\r\n          返回\r\n        </Button>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          传感器详情\r\n        </Typography>\r\n      </Box>\r\n      \r\n      <Grid container spacing={3}>\r\n        {/* 传感器基本信息卡片 */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                {getSensorIcon(sensor.type)}\r\n                <Box sx={{ ml: 2 }}>\r\n                  <Typography variant=\"h5\" component=\"h2\">\r\n                    {sensor.name}\r\n                  </Typography>\r\n                  <Chip \r\n                    label={getStatusText(sensor.status)} \r\n                    color={sensor.status === 'active' ? 'success' : sensor.status === 'inactive' ? 'error' : 'warning'}\r\n                    size=\"small\"\r\n                    sx={{ mt: 0.5 }}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n              \r\n              <Divider sx={{ my: 2 }} />\r\n              \r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">类型</Typography>\r\n                  <Typography variant=\"body1\">{typeInfo.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">位置</Typography>\r\n                  <Typography variant=\"body1\">{sensor.location}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">型号</Typography>\r\n                  <Typography variant=\"body1\">{sensor.model}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">制造商</Typography>\r\n                  <Typography variant=\"body1\">{sensor.manufacturer}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">MQTT主题</Typography>\r\n                  <Typography variant=\"body1\" sx={{ wordBreak: 'break-all' }}>{sensor.mqtt_topic}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              \r\n              <Divider sx={{ my: 2 }} />\r\n              \r\n              <Typography variant=\"h6\" gutterBottom>当前读数</Typography>\r\n              <Box sx={{ display: 'flex', alignItems: 'baseline' }}>\r\n                <Typography variant=\"h3\" component=\"p\">\r\n                  {sensor.current_value}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"span\" sx={{ ml: 1 }}>\r\n                  {typeInfo.unit}\r\n                </Typography>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        \r\n        {/* 传感器技术信息卡片 */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                技术信息\r\n              </Typography>\r\n              \r\n              <List disablePadding>\r\n                <ListItem disablePadding sx={{ py: 1 }}>\r\n                  <ListItemText \r\n                    primary=\"固件版本\" \r\n                    secondary={sensor.firmware_version} \r\n                  />\r\n                </ListItem>\r\n                <Divider component=\"li\" />\r\n                \r\n                <ListItem disablePadding sx={{ py: 1 }}>\r\n                  <ListItemText \r\n                    primary=\"安装日期\" \r\n                    secondary={formatDate(sensor.installation_date)} \r\n                  />\r\n                </ListItem>\r\n                <Divider component=\"li\" />\r\n                \r\n                <ListItem disablePadding sx={{ py: 1 }}>\r\n                  <ListItemText \r\n                    primary=\"最近校准日期\" \r\n                    secondary={formatDate(sensor.calibration_date)} \r\n                  />\r\n                </ListItem>\r\n                <Divider component=\"li\" />\r\n                \r\n                <ListItem disablePadding sx={{ py: 1 }}>\r\n                  <ListItemText \r\n                    primary=\"精度\" \r\n                    secondary={`±${sensor.accuracy} ${typeInfo.unit}`} \r\n                  />\r\n                </ListItem>\r\n                <Divider component=\"li\" />\r\n                \r\n                <ListItem disablePadding sx={{ py: 1 }}>\r\n                  <ListItemText \r\n                    primary=\"电池电量\" \r\n                    secondary={`${sensor.battery_level}%`} \r\n                  />\r\n                  <Chip \r\n                    label={sensor.battery_level > 20 ? \"正常\" : \"低电量\"} \r\n                    color={sensor.battery_level > 20 ? \"success\" : \"error\"}\r\n                    size=\"small\"\r\n                  />\r\n                </ListItem>\r\n                <Divider component=\"li\" />\r\n                \r\n                <ListItem disablePadding sx={{ py: 1 }}>\r\n                  <ListItemText \r\n                    primary=\"信号强度\" \r\n                    secondary={`${sensor.signal_strength} dBm`} \r\n                  />\r\n                  <Chip \r\n                    label={sensor.signal_strength > -80 ? \"良好\" : \"弱信号\"} \r\n                    color={sensor.signal_strength > -80 ? \"success\" : \"warning\"}\r\n                    size=\"small\"\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        \r\n        {/* 历史数据图表 */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                <Typography variant=\"h6\">\r\n                  历史数据\r\n                </Typography>\r\n                <Box>\r\n                  <Tooltip title=\"查看完整历史\">\r\n                    <IconButton>\r\n                      <HistoryIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"调整日期范围\">\r\n                    <IconButton>\r\n                      <DateRangeIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n              </Box>\r\n              \r\n              {chartData.xAxis.length > 0 ? (\r\n                <Box sx={{ height: 350, width: '100%' }}>\r\n                  <LineChart\r\n                    xAxis={[{ \r\n                      data: chartData.xAxis,\r\n                      scaleType: 'time',\r\n                      tickMinStep: 3600 * 1000 * 24 // 1天\r\n                    }]}\r\n                    series={chartData.series}\r\n                    height={350}\r\n                  />\r\n                </Box>\r\n              ) : (\r\n                <Box sx={{ textAlign: 'center', py: 4 }}>\r\n                  <Typography color=\"textSecondary\">暂无历史数据</Typography>\r\n                </Box>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        \r\n        {/* 最近的历史数据表格 */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                最近读数记录\r\n              </Typography>\r\n              \r\n              <TableContainer>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>时间</TableCell>\r\n                      <TableCell align=\"right\">数值</TableCell>\r\n                      <TableCell align=\"right\">单位</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {sensor.history.slice(-10).reverse().map((record, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {new Date(record.timestamp).toLocaleString()}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{record.value}</TableCell>\r\n                        <TableCell align=\"right\">{record.unit}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      {/* 操作按钮 */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 3, gap: 2 }}>\r\n        <Button \r\n          variant=\"outlined\" \r\n          startIcon={<SettingsIcon />}\r\n        >\r\n          设置阈值\r\n        </Button>\r\n        <Button \r\n          variant=\"outlined\" \r\n          startIcon={<ErrorOutlineIcon />}\r\n        >\r\n          故障诊断\r\n        </Button>\r\n        <Button \r\n          variant=\"contained\" \r\n          startIcon={<EditIcon />}\r\n        >\r\n          编辑传感器\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SensorDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
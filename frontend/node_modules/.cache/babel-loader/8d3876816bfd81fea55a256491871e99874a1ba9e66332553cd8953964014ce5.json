{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.orient3d = orient3d;\nexports.orient3dfast = orient3dfast;\nvar _util = require(\"./util.js\");\nconst o3derrboundA = (7 + 56 * _util.epsilon) * _util.epsilon;\nconst o3derrboundB = (3 + 28 * _util.epsilon) * _util.epsilon;\nconst o3derrboundC = (26 + 288 * _util.epsilon) * _util.epsilon * _util.epsilon;\nconst bc = (0, _util.vec)(4);\nconst ca = (0, _util.vec)(4);\nconst ab = (0, _util.vec)(4);\nconst at_b = (0, _util.vec)(4);\nconst at_c = (0, _util.vec)(4);\nconst bt_c = (0, _util.vec)(4);\nconst bt_a = (0, _util.vec)(4);\nconst ct_a = (0, _util.vec)(4);\nconst ct_b = (0, _util.vec)(4);\nconst bct = (0, _util.vec)(8);\nconst cat = (0, _util.vec)(8);\nconst abt = (0, _util.vec)(8);\nconst u = (0, _util.vec)(4);\nconst _8 = (0, _util.vec)(8);\nconst _8b = (0, _util.vec)(8);\nconst _16 = (0, _util.vec)(8);\nconst _12 = (0, _util.vec)(12);\nlet fin = (0, _util.vec)(192);\nlet fin2 = (0, _util.vec)(192);\nfunction finadd(finlen, alen, a) {\n  finlen = (0, _util.sum)(finlen, fin, alen, a, fin2);\n  const tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n  if (xtail === 0) {\n    if (ytail === 0) {\n      a[0] = 0;\n      b[0] = 0;\n      return 1;\n    } else {\n      negate = -ytail;\n      s1 = negate * ax;\n      c = _util.splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = _util.splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      s1 = ytail * bx;\n      c = _util.splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = _util.splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    }\n  } else {\n    if (ytail === 0) {\n      s1 = xtail * ay;\n      c = _util.splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = _util.splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      negate = -xtail;\n      s1 = negate * by;\n      c = _util.splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = _util.splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    } else {\n      s1 = xtail * ay;\n      c = _util.splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = _util.splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = ytail * ax;\n      c = _util.splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = _util.splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      a[3] = u3;\n      s1 = ytail * bx;\n      c = _util.splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = _util.splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = xtail * by;\n      c = _util.splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = _util.splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      b[3] = u3;\n      return 4;\n    }\n  }\n}\nfunction tailadd(finlen, a, b, k, z) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n  s1 = a * b;\n  c = _util.splitter * a;\n  ahi = c - (c - a);\n  alo = a - ahi;\n  c = _util.splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  c = _util.splitter * k;\n  bhi = c - (c - k);\n  blo = k - bhi;\n  _i = s0 * k;\n  c = _util.splitter * s0;\n  ahi = c - (c - s0);\n  alo = s0 - ahi;\n  u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n  _j = s1 * k;\n  c = _util.splitter * s1;\n  ahi = c - (c - s1);\n  alo = s1 - ahi;\n  _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n  _k = _i + _0;\n  bvirt = _k - _i;\n  u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n  u3 = _j + _k;\n  u[2] = _k - (u3 - _j);\n  u[3] = u3;\n  finlen = finadd(finlen, 4, u);\n  if (z !== 0) {\n    c = _util.splitter * z;\n    bhi = c - (c - z);\n    blo = z - bhi;\n    _i = s0 * z;\n    c = _util.splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * z;\n    c = _util.splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n  }\n  return finlen;\n}\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n  let finlen;\n  let adxtail, bdxtail, cdxtail;\n  let adytail, bdytail, cdytail;\n  let adztail, bdztail, cdztail;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  s1 = bdx * cdy;\n  c = _util.splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = _util.splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = _util.splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = _util.splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = _util.splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = _util.splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = _util.splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = _util.splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = _util.splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = _util.splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = _util.splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = _util.splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = (0, _util.sum)((0, _util.sum)((0, _util.scale)(4, bc, adz, _8), _8, (0, _util.scale)(4, ca, bdz, _8b), _8b, _16), _16, (0, _util.scale)(4, ab, cdz, _8), _8, fin);\n  let det = (0, _util.estimate)(finlen, fin);\n  let errbound = o3derrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  bvirt = az - adz;\n  adztail = az - (adz + bvirt) + (bvirt - dz);\n  bvirt = bz - bdz;\n  bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n  bvirt = cz - cdz;\n  cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0 && adztail === 0 && bdztail === 0 && cdztail === 0) {\n    return det;\n  }\n  errbound = o3derrboundC * permanent + _util.resulterrbound * Math.abs(det);\n  det += adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) + bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) + cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n  const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n  const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n  const bctlen = (0, _util.sum)(bt_len, bt_c, ct_len, ct_b, bct);\n  finlen = finadd(finlen, (0, _util.scale)(bctlen, bct, adz, _16), _16);\n  const catlen = (0, _util.sum)(ct_len, ct_a, at_len, at_c, cat);\n  finlen = finadd(finlen, (0, _util.scale)(catlen, cat, bdz, _16), _16);\n  const abtlen = (0, _util.sum)(at_len, at_b, bt_len, bt_a, abt);\n  finlen = finadd(finlen, (0, _util.scale)(abtlen, abt, cdz, _16), _16);\n  if (adztail !== 0) {\n    finlen = finadd(finlen, (0, _util.scale)(4, bc, adztail, _12), _12);\n    finlen = finadd(finlen, (0, _util.scale)(bctlen, bct, adztail, _16), _16);\n  }\n  if (bdztail !== 0) {\n    finlen = finadd(finlen, (0, _util.scale)(4, ca, bdztail, _12), _12);\n    finlen = finadd(finlen, (0, _util.scale)(catlen, cat, bdztail, _16), _16);\n  }\n  if (cdztail !== 0) {\n    finlen = finadd(finlen, (0, _util.scale)(4, ab, cdztail, _12), _12);\n    finlen = finadd(finlen, (0, _util.scale)(abtlen, abt, cdztail, _16), _16);\n  }\n  if (adxtail !== 0) {\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n    }\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n    }\n  }\n  if (bdxtail !== 0) {\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n    }\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n    }\n  }\n  if (cdxtail !== 0) {\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n    }\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n    }\n  }\n  return fin[finlen - 1];\n}\nfunction orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  const bdxcdy = bdx * cdy;\n  const cdxbdy = cdx * bdy;\n  const cdxady = cdx * ady;\n  const adxcdy = adx * cdy;\n  const adxbdy = adx * bdy;\n  const bdxady = bdx * ady;\n  const det = adz * (bdxcdy - cdxbdy) + bdz * (cdxady - adxcdy) + cdz * (adxbdy - bdxady);\n  const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n  const errbound = o3derrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\nfunction orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  return adx * (bdy * cdz - bdz * cdy) + bdx * (cdy * adz - cdz * ady) + cdx * (ady * bdz - adz * bdy);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","orient3d","orient3dfast","_util","require","o3derrboundA","epsilon","o3derrboundB","o3derrboundC","bc","vec","ca","ab","at_b","at_c","bt_c","bt_a","ct_a","ct_b","bct","cat","abt","u","_8","_8b","_16","_12","fin","fin2","finadd","finlen","alen","a","sum","tmp","tailinit","xtail","ytail","ax","ay","bx","by","b","bvirt","c","ahi","alo","bhi","blo","_i","_j","_k","_0","s1","s0","t1","t0","u3","negate","splitter","tailadd","k","z","orient3dadapt","az","bz","cx","cy","cz","dx","dy","dz","permanent","adxtail","bdxtail","cdxtail","adytail","bdytail","cdytail","adztail","bdztail","cdztail","adx","bdx","cdx","ady","bdy","cdy","adz","bdz","cdz","scale","det","estimate","errbound","resulterrbound","Math","abs","at_len","bt_len","ct_len","bctlen","catlen","abtlen","bdxcdy","cdxbdy","cdxady","adxcdy","adxbdy","bdxady"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/node_modules/@mui/x-charts-vendor/lib-vendor/robust-predicates/esm/orient3d.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.orient3d = orient3d;\nexports.orient3dfast = orient3dfast;\nvar _util = require(\"./util.js\");\nconst o3derrboundA = (7 + 56 * _util.epsilon) * _util.epsilon;\nconst o3derrboundB = (3 + 28 * _util.epsilon) * _util.epsilon;\nconst o3derrboundC = (26 + 288 * _util.epsilon) * _util.epsilon * _util.epsilon;\nconst bc = (0, _util.vec)(4);\nconst ca = (0, _util.vec)(4);\nconst ab = (0, _util.vec)(4);\nconst at_b = (0, _util.vec)(4);\nconst at_c = (0, _util.vec)(4);\nconst bt_c = (0, _util.vec)(4);\nconst bt_a = (0, _util.vec)(4);\nconst ct_a = (0, _util.vec)(4);\nconst ct_b = (0, _util.vec)(4);\nconst bct = (0, _util.vec)(8);\nconst cat = (0, _util.vec)(8);\nconst abt = (0, _util.vec)(8);\nconst u = (0, _util.vec)(4);\nconst _8 = (0, _util.vec)(8);\nconst _8b = (0, _util.vec)(8);\nconst _16 = (0, _util.vec)(8);\nconst _12 = (0, _util.vec)(12);\nlet fin = (0, _util.vec)(192);\nlet fin2 = (0, _util.vec)(192);\nfunction finadd(finlen, alen, a) {\n  finlen = (0, _util.sum)(finlen, fin, alen, a, fin2);\n  const tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n  if (xtail === 0) {\n    if (ytail === 0) {\n      a[0] = 0;\n      b[0] = 0;\n      return 1;\n    } else {\n      negate = -ytail;\n      s1 = negate * ax;\n      c = _util.splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = _util.splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      s1 = ytail * bx;\n      c = _util.splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = _util.splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    }\n  } else {\n    if (ytail === 0) {\n      s1 = xtail * ay;\n      c = _util.splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = _util.splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      negate = -xtail;\n      s1 = negate * by;\n      c = _util.splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = _util.splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    } else {\n      s1 = xtail * ay;\n      c = _util.splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = _util.splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = ytail * ax;\n      c = _util.splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = _util.splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      a[3] = u3;\n      s1 = ytail * bx;\n      c = _util.splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = _util.splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = xtail * by;\n      c = _util.splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = _util.splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      b[3] = u3;\n      return 4;\n    }\n  }\n}\nfunction tailadd(finlen, a, b, k, z) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n  s1 = a * b;\n  c = _util.splitter * a;\n  ahi = c - (c - a);\n  alo = a - ahi;\n  c = _util.splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  c = _util.splitter * k;\n  bhi = c - (c - k);\n  blo = k - bhi;\n  _i = s0 * k;\n  c = _util.splitter * s0;\n  ahi = c - (c - s0);\n  alo = s0 - ahi;\n  u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n  _j = s1 * k;\n  c = _util.splitter * s1;\n  ahi = c - (c - s1);\n  alo = s1 - ahi;\n  _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n  _k = _i + _0;\n  bvirt = _k - _i;\n  u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n  u3 = _j + _k;\n  u[2] = _k - (u3 - _j);\n  u[3] = u3;\n  finlen = finadd(finlen, 4, u);\n  if (z !== 0) {\n    c = _util.splitter * z;\n    bhi = c - (c - z);\n    blo = z - bhi;\n    _i = s0 * z;\n    c = _util.splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * z;\n    c = _util.splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n  }\n  return finlen;\n}\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n  let finlen;\n  let adxtail, bdxtail, cdxtail;\n  let adytail, bdytail, cdytail;\n  let adztail, bdztail, cdztail;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  s1 = bdx * cdy;\n  c = _util.splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = _util.splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = _util.splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = _util.splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = _util.splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = _util.splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = _util.splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = _util.splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = _util.splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = _util.splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = _util.splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = _util.splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = (0, _util.sum)((0, _util.sum)((0, _util.scale)(4, bc, adz, _8), _8, (0, _util.scale)(4, ca, bdz, _8b), _8b, _16), _16, (0, _util.scale)(4, ab, cdz, _8), _8, fin);\n  let det = (0, _util.estimate)(finlen, fin);\n  let errbound = o3derrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  bvirt = az - adz;\n  adztail = az - (adz + bvirt) + (bvirt - dz);\n  bvirt = bz - bdz;\n  bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n  bvirt = cz - cdz;\n  cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0 && adztail === 0 && bdztail === 0 && cdztail === 0) {\n    return det;\n  }\n  errbound = o3derrboundC * permanent + _util.resulterrbound * Math.abs(det);\n  det += adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) + bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) + cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n  const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n  const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n  const bctlen = (0, _util.sum)(bt_len, bt_c, ct_len, ct_b, bct);\n  finlen = finadd(finlen, (0, _util.scale)(bctlen, bct, adz, _16), _16);\n  const catlen = (0, _util.sum)(ct_len, ct_a, at_len, at_c, cat);\n  finlen = finadd(finlen, (0, _util.scale)(catlen, cat, bdz, _16), _16);\n  const abtlen = (0, _util.sum)(at_len, at_b, bt_len, bt_a, abt);\n  finlen = finadd(finlen, (0, _util.scale)(abtlen, abt, cdz, _16), _16);\n  if (adztail !== 0) {\n    finlen = finadd(finlen, (0, _util.scale)(4, bc, adztail, _12), _12);\n    finlen = finadd(finlen, (0, _util.scale)(bctlen, bct, adztail, _16), _16);\n  }\n  if (bdztail !== 0) {\n    finlen = finadd(finlen, (0, _util.scale)(4, ca, bdztail, _12), _12);\n    finlen = finadd(finlen, (0, _util.scale)(catlen, cat, bdztail, _16), _16);\n  }\n  if (cdztail !== 0) {\n    finlen = finadd(finlen, (0, _util.scale)(4, ab, cdztail, _12), _12);\n    finlen = finadd(finlen, (0, _util.scale)(abtlen, abt, cdztail, _16), _16);\n  }\n  if (adxtail !== 0) {\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n    }\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n    }\n  }\n  if (bdxtail !== 0) {\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n    }\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n    }\n  }\n  if (cdxtail !== 0) {\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n    }\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n    }\n  }\n  return fin[finlen - 1];\n}\nfunction orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  const bdxcdy = bdx * cdy;\n  const cdxbdy = cdx * bdy;\n  const cdxady = cdx * ady;\n  const adxcdy = adx * cdy;\n  const adxbdy = adx * bdy;\n  const bdxady = bdx * ady;\n  const det = adz * (bdxcdy - cdxbdy) + bdz * (cdxady - adxcdy) + cdz * (adxbdy - bdxady);\n  const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n  const errbound = o3derrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\nfunction orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  return adx * (bdy * cdz - bdz * cdy) + bdx * (cdy * adz - cdz * ady) + cdx * (ady * bdz - adz * bdy);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAxisIndex = getAxisIndex;\nexports.getAxisValue = getAxisValue;\nvar _isBandScale = require(\"../../../isBandScale\");\nfunction getAsANumber(value) {\n  return value instanceof Date ? value.getTime() : value;\n}\n\n/**\n * For a pointer coordinate, this function returns the dataIndex associated.\n * Returns `-1` if no dataIndex matches.\n */\nfunction getAxisIndex(axisConfig, pointerValue) {\n  const {\n    scale,\n    data: axisData,\n    reverse\n  } = axisConfig;\n  if (!(0, _isBandScale.isBandScale)(scale)) {\n    const value = scale.invert(pointerValue);\n    if (axisData === undefined) {\n      return -1;\n    }\n    const valueAsNumber = getAsANumber(value);\n    const closestIndex = axisData?.findIndex((pointValue, index) => {\n      const v = getAsANumber(pointValue);\n      if (v > valueAsNumber) {\n        if (index === 0 || Math.abs(valueAsNumber - v) <= Math.abs(valueAsNumber - getAsANumber(axisData[index - 1]))) {\n          return true;\n        }\n      }\n      if (v <= valueAsNumber) {\n        if (index === axisData.length - 1 || Math.abs(getAsANumber(value) - v) < Math.abs(getAsANumber(value) - getAsANumber(axisData[index + 1]))) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return closestIndex;\n  }\n  const dataIndex = scale.bandwidth() === 0 ? Math.floor((pointerValue - Math.min(...scale.range()) + scale.step() / 2) / scale.step()) : Math.floor((pointerValue - Math.min(...scale.range())) / scale.step());\n  if (dataIndex < 0 || dataIndex >= axisData.length) {\n    return -1;\n  }\n  return reverse ? axisData.length - 1 - dataIndex : dataIndex;\n}\n\n/**\n * For a pointer coordinate, this function returns the value associated.\n * Returns `null` if the coordinate has no value associated.\n */\nfunction getAxisValue(axisConfig, pointerValue, dataIndex) {\n  const {\n    scale,\n    data: axisData\n  } = axisConfig;\n  if (!(0, _isBandScale.isBandScale)(scale)) {\n    const value = scale.invert(pointerValue);\n    if (dataIndex < 0) {\n      return value;\n    }\n    return axisData[dataIndex];\n  }\n  if (dataIndex < 0 || dataIndex >= axisData.length) {\n    return null;\n  }\n  return axisData[dataIndex];\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getAxisIndex","getAxisValue","_isBandScale","require","getAsANumber","Date","getTime","axisConfig","pointerValue","scale","data","axisData","reverse","isBandScale","invert","undefined","valueAsNumber","closestIndex","findIndex","pointValue","index","v","Math","abs","length","dataIndex","bandwidth","floor","min","range","step"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/node_modules/@mui/x-charts/internals/plugins/featurePlugins/useChartCartesianAxis/getAxisValue.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAxisIndex = getAxisIndex;\nexports.getAxisValue = getAxisValue;\nvar _isBandScale = require(\"../../../isBandScale\");\nfunction getAsANumber(value) {\n  return value instanceof Date ? value.getTime() : value;\n}\n\n/**\n * For a pointer coordinate, this function returns the dataIndex associated.\n * Returns `-1` if no dataIndex matches.\n */\nfunction getAxisIndex(axisConfig, pointerValue) {\n  const {\n    scale,\n    data: axisData,\n    reverse\n  } = axisConfig;\n  if (!(0, _isBandScale.isBandScale)(scale)) {\n    const value = scale.invert(pointerValue);\n    if (axisData === undefined) {\n      return -1;\n    }\n    const valueAsNumber = getAsANumber(value);\n    const closestIndex = axisData?.findIndex((pointValue, index) => {\n      const v = getAsANumber(pointValue);\n      if (v > valueAsNumber) {\n        if (index === 0 || Math.abs(valueAsNumber - v) <= Math.abs(valueAsNumber - getAsANumber(axisData[index - 1]))) {\n          return true;\n        }\n      }\n      if (v <= valueAsNumber) {\n        if (index === axisData.length - 1 || Math.abs(getAsANumber(value) - v) < Math.abs(getAsANumber(value) - getAsANumber(axisData[index + 1]))) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return closestIndex;\n  }\n  const dataIndex = scale.bandwidth() === 0 ? Math.floor((pointerValue - Math.min(...scale.range()) + scale.step() / 2) / scale.step()) : Math.floor((pointerValue - Math.min(...scale.range())) / scale.step());\n  if (dataIndex < 0 || dataIndex >= axisData.length) {\n    return -1;\n  }\n  return reverse ? axisData.length - 1 - dataIndex : dataIndex;\n}\n\n/**\n * For a pointer coordinate, this function returns the value associated.\n * Returns `null` if the coordinate has no value associated.\n */\nfunction getAxisValue(axisConfig, pointerValue, dataIndex) {\n  const {\n    scale,\n    data: axisData\n  } = axisConfig;\n  if (!(0, _isBandScale.isBandScale)(scale)) {\n    const value = scale.invert(pointerValue);\n    if (dataIndex < 0) {\n      return value;\n    }\n    return axisData[dataIndex];\n  }\n  if (dataIndex < 0 || dataIndex >= axisData.length) {\n    return null;\n  }\n  return axisData[dataIndex];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
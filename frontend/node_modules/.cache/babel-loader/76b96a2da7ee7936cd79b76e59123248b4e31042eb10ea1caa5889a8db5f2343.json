{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIJIN\\\\Desktop\\\\webTest\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { TOKEN_KEY, USER_KEY } from '../config';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState(null);\n\n  // Load user state from localStorage\n  useEffect(() => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    const userStr = localStorage.getItem(USER_KEY);\n    if (token && userStr) {\n      setIsAuthenticated(true);\n      try {\n        setUser(JSON.parse(userStr));\n      } catch (e) {\n        console.error('Failed to parse user data', e);\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  // Login functionality using API\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      const userData = response.data.user;\n      const token = response.data.token;\n      localStorage.setItem(TOKEN_KEY, token);\n      localStorage.setItem(USER_KEY, JSON.stringify(userData));\n      setUser(userData);\n      setIsAuthenticated(true);\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Registration functionality using API\n  const register = async userData => {\n    try {\n      const response = await authAPI.register(userData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(USER_KEY);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const value = {\n    isAuthenticated,\n    isLoading,\n    user,\n    login,\n    logout,\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"fXtsS9VlG56CFg59Ule3HyF3KXk=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","TOKEN_KEY","USER_KEY","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","user","setUser","token","localStorage","getItem","userStr","JSON","parse","e","console","error","login","email","password","response","userData","data","setItem","stringify","register","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LIJIN/Desktop/webTest/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { TOKEN_KEY, USER_KEY } from '../config';\r\nimport { authAPI } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Load user state from localStorage\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(TOKEN_KEY);\r\n    const userStr = localStorage.getItem(USER_KEY);\r\n\r\n    if (token && userStr) {\r\n      setIsAuthenticated(true);\r\n      try {\r\n        setUser(JSON.parse(userStr));\r\n      } catch (e) {\r\n        console.error('Failed to parse user data', e);\r\n      }\r\n    }\r\n    \r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  // Login functionality using API\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await authAPI.login({ email, password });\r\n      \r\n      const userData = response.data.user;\r\n      const token = response.data.token;\r\n      \r\n      localStorage.setItem(TOKEN_KEY, token);\r\n      localStorage.setItem(USER_KEY, JSON.stringify(userData));\r\n      \r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      return userData;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Registration functionality using API\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await authAPI.register(userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    localStorage.removeItem(USER_KEY);\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    isLoading,\r\n    user,\r\n    login,\r\n    logout,\r\n    register\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthProvider; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScatterSeries = useScatterSeries;\nexports.useScatterSeriesContext = useScatterSeriesContext;\nvar _createSeriesSelectorOfType = require(\"../internals/createSeriesSelectorOfType\");\nconst useSelectorSeries = (0, _createSeriesSelectorOfType.createSeriesSelectorsOfType)('scatter');\nconst useSelectorSeriesContext = (0, _createSeriesSelectorOfType.createAllSeriesSelectorOfType)('scatter');\n\n/**\n * Get access to the internal state of scatter series.\n *\n * @param {SeriesId} seriesId The id of the series to get.\n * @returns {UseScatterSeriesReturnValue} the scatter series\n */\n\n/**\n * Get access to the internal state of scatter series.\n *\n * When called without arguments, it returns all scatter series.\n *\n * @returns {UseScatterSeriesReturnValue[]} the scatter series\n */\n\n/**\n * Get access to the internal state of scatter series.\n *\n * @param {SeriesId[]} seriesIds The ids of the series to get. Order is preserved.\n * @returns {UseScatterSeriesReturnValue[]} the scatter series\n */\n\nfunction useScatterSeries(seriesIds) {\n  return useSelectorSeries(seriesIds);\n}\n\n/**\n * Get access to the internal state of scatter series.\n * The returned object contains:\n * - series: a mapping from ids to series attributes.\n * - seriesOrder: the array of series ids.\n * @returns the scatter series\n */\nfunction useScatterSeriesContext() {\n  return useSelectorSeriesContext();\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","useScatterSeries","useScatterSeriesContext","_createSeriesSelectorOfType","require","useSelectorSeries","createSeriesSelectorsOfType","useSelectorSeriesContext","createAllSeriesSelectorOfType","seriesIds"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/node_modules/@mui/x-charts/hooks/useScatterSeries.js"],"sourcesContent":["\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScatterSeries = useScatterSeries;\nexports.useScatterSeriesContext = useScatterSeriesContext;\nvar _createSeriesSelectorOfType = require(\"../internals/createSeriesSelectorOfType\");\nconst useSelectorSeries = (0, _createSeriesSelectorOfType.createSeriesSelectorsOfType)('scatter');\nconst useSelectorSeriesContext = (0, _createSeriesSelectorOfType.createAllSeriesSelectorOfType)('scatter');\n\n/**\n * Get access to the internal state of scatter series.\n *\n * @param {SeriesId} seriesId The id of the series to get.\n * @returns {UseScatterSeriesReturnValue} the scatter series\n */\n\n/**\n * Get access to the internal state of scatter series.\n *\n * When called without arguments, it returns all scatter series.\n *\n * @returns {UseScatterSeriesReturnValue[]} the scatter series\n */\n\n/**\n * Get access to the internal state of scatter series.\n *\n * @param {SeriesId[]} seriesIds The ids of the series to get. Order is preserved.\n * @returns {UseScatterSeriesReturnValue[]} the scatter series\n */\n\nfunction useScatterSeries(seriesIds) {\n  return useSelectorSeries(seriesIds);\n}\n\n/**\n * Get access to the internal state of scatter series.\n * The returned object contains:\n * - series: a mapping from ids to series attributes.\n * - seriesOrder: the array of series ids.\n * @returns the scatter series\n */\nfunction useScatterSeriesContext() {\n  return useSelectorSeriesContext();\n}"],"mappings":"AAAA,YAAY;AACZ,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB;AAC3CF,OAAO,CAACG,uBAAuB,GAAGA,uBAAuB;AACzD,IAAIC,2BAA2B,GAAGC,OAAO,CAAC,yCAAyC,CAAC;AACpF,MAAMC,iBAAiB,GAAG,CAAC,CAAC,EAAEF,2BAA2B,CAACG,2BAA2B,EAAE,SAAS,CAAC;AACjG,MAAMC,wBAAwB,GAAG,CAAC,CAAC,EAAEJ,2BAA2B,CAACK,6BAA6B,EAAE,SAAS,CAAC;;AAE1G;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASP,gBAAgBA,CAACQ,SAAS,EAAE;EACnC,OAAOJ,iBAAiB,CAACI,SAAS,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASP,uBAAuBA,CAAA,EAAG;EACjC,OAAOK,wBAAwB,CAAC,CAAC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
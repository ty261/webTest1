{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIJIN\\\\Desktop\\\\webTest\\\\Bak\\\\webTest\\\\frontend\\\\src\\\\pages\\\\ActuatorDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, Container, Typography, Button, Grid, Paper, Divider, TextField, FormControl, InputLabel, Select, MenuItem, Switch, FormControlLabel, Tab, Tabs, CircularProgress, Chip, Card, CardContent, CardHeader, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Alert, Tooltip, Slider, List, ListItem, ListItemText, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { ArrowBack as ArrowBackIcon, Save as SaveIcon, PowerSettingsNew as PowerIcon, History as HistoryIcon, Edit as EditIcon, Add as AddIcon, Delete as DeleteIcon, SettingsBackupRestore as ResetIcon, Check as CheckIcon, Close as CloseIcon, Settings as SettingsIcon, ErrorOutline as ErrorOutlineIcon, DateRange as DateRangeIcon, Opacity as HumidityIcon, Thermostat as TemperatureIcon, Air as FanIcon, WbSunny as LightIcon, WaterDrop as WaterIcon } from '@mui/icons-material';\nimport { actuatorAPI } from '../services/api';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { useSocket } from '../contexts/SocketContext';\n\n// Actuator type mapping\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ACTUATOR_TYPE_NAMES = {\n  'irrigation': 'Irrigation System',\n  'ventilation': 'Ventilation System',\n  'lighting': 'Lighting System',\n  'heating': 'Heating System',\n  'cooling': 'Cooling System',\n  'curtain': 'Curtain System',\n  'nutrient': 'Nutrient System',\n  'water_pump': 'Water Pump',\n  'fan': 'Fan',\n  'humidifier': 'Humidifier',\n  'pump': 'Pump'\n};\n\n// Actuator status styles and labels\nconst STATUS_STYLES = {\n  'on': {\n    color: 'success',\n    label: 'On'\n  },\n  'off': {\n    color: 'default',\n    label: 'Off'\n  },\n  'low': {\n    color: 'info',\n    label: 'Low'\n  },\n  'medium': {\n    color: 'primary',\n    label: 'Medium'\n  },\n  'high': {\n    color: 'warning',\n    label: 'High'\n  },\n  'auto': {\n    color: 'secondary',\n    label: 'Auto'\n  },\n  'dim': {\n    color: 'info',\n    label: 'Dim'\n  },\n  'bright': {\n    color: 'warning',\n    label: 'Bright'\n  },\n  'open': {\n    color: 'success',\n    label: 'Open'\n  },\n  'closed': {\n    color: 'default',\n    label: 'Closed'\n  },\n  'half': {\n    color: 'info',\n    label: 'Half open'\n  },\n  'error': {\n    color: 'error',\n    label: 'Error'\n  }\n};\n\n// Sensor type mapping\nconst SENSOR_TYPE_NAMES = {\n  'temperature': 'Temperature',\n  'humidity': 'Humidity',\n  'light': 'Light',\n  'soil_moisture': 'Soil Moisture',\n  'co2': 'CO2',\n  'ph': 'pH Value',\n  'water_level': 'Water Level'\n};\n\n// Condition type mapping\nconst CONDITION_TYPE_NAMES = {\n  'gt': 'Greater than',\n  'lt': 'Less than',\n  'eq': 'Equal to',\n  'gte': 'Greater than or equal to',\n  'lte': 'Less than or equal to',\n  'change': 'Change'\n};\n\n// Tab definition\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `actuator-tabpanel-${index}`,\n    \"aria-labelledby\": `actuator-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_c = TabPanel;\nconst ActuatorDetail = () => {\n  _s();\n  var _STATUS_STYLES$actuat, _STATUS_STYLES$actuat2;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [actuator, setActuator] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [tabValue, setTabValue] = useState(0);\n  const [editMode, setEditMode] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [logs, setLogs] = useState([]);\n  const [allowedStates, setAllowedStates] = useState(['on', 'off']);\n  const [autoRuleDialogOpen, setAutoRuleDialogOpen] = useState(false);\n  const [newRule, setNewRule] = useState({\n    sensor_type: '',\n    condition: 'gt',\n    value: 0,\n    action: 'on',\n    parameters: {}\n  });\n  const [saveLoading, setSaveLoading] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n  const [parameterEdit, setParameterEdit] = useState({});\n\n  // Get actuator details\n  const fetchActuatorDetail = async () => {\n    setLoading(true);\n    try {\n      const response = await actuatorAPI.getActuator(id);\n      const data = response.data.data;\n      setActuator(data);\n      setEditData({\n        name: data.name,\n        location: data.location,\n        is_active: data.is_active,\n        mode: data.mode,\n        mqtt_topic: data.mqtt_topic\n      });\n      // Get allowed states\n      const allowedStatesResponse = await actuatorAPI.getActuatorStatuses(id);\n      setAllowedStates(allowedStatesResponse.data.data || ['on', 'off']);\n\n      // Get actuator logs\n      const logsResponse = await actuatorAPI.getActuatorLogs(id);\n      setLogs(logsResponse.data.data || []);\n      setError(null);\n    } catch (err) {\n      console.error('Failed to get actuator details:', err);\n      setError('Failed to get actuator details, please try again later');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchActuatorDetail();\n  }, [id]);\n\n  // Control actuator\n  const handleControlActuator = async action => {\n    try {\n      await actuatorAPI.controlActuator(id, {\n        action\n      });\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        status: action,\n        last_control_time: new Date().toISOString()\n      }));\n      // Refresh logs\n      const logsResponse = await actuatorAPI.getActuatorLogs(id);\n      setLogs(logsResponse.data.data || []);\n    } catch (err) {\n      console.error('Failed to control actuator:', err);\n      setError('Operation failed, please try again later');\n    }\n  };\n  const handleSaveChanges = async () => {\n    setSaveLoading(true);\n    try {\n      await actuatorAPI.updateActuator(id, editData);\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        ...editData\n      }));\n      setEditMode(false);\n      setSaveSuccess(true);\n      setTimeout(() => setSaveSuccess(false), 3000);\n    } catch (err) {\n      console.error('Failed to update actuator:', err);\n      setError('Update failed, please try again later');\n    } finally {\n      setSaveLoading(false);\n    }\n  };\n  const handleAddAutoRule = async () => {\n    if (!newRule.sensor_type || !newRule.condition) {\n      setError('Please complete the automatic control rule information');\n      return;\n    }\n    try {\n      const autoRules = {\n        ...(actuator.auto_rules || {})\n      };\n      autoRules[newRule.sensor_type] = {\n        [newRule.condition]: parseFloat(newRule.value),\n        action: newRule.action,\n        parameters: newRule.parameters\n      };\n      await actuatorAPI.updateAutoRules(id, autoRules);\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        auto_rules: autoRules\n      }));\n      setAutoRuleDialogOpen(false);\n      setNewRule({\n        sensor_type: '',\n        condition: 'gt',\n        value: 0,\n        action: 'on',\n        parameters: {}\n      });\n    } catch (err) {\n      console.error('Failed to update automatic control rules:', err);\n      setError('Update rule failed, please try again later');\n    }\n  };\n  const handleRemoveAutoRule = async sensorType => {\n    try {\n      const autoRules = {\n        ...(actuator.auto_rules || {})\n      };\n      delete autoRules[sensorType];\n      await actuatorAPI.updateAutoRules(id, autoRules);\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        auto_rules: autoRules\n      }));\n    } catch (err) {\n      console.error('Failed to remove automatic control rule:', err);\n      setError('Failed to remove rule, please try again later');\n    }\n  };\n  const handleEditParameters = async () => {\n    try {\n      await actuatorAPI.updateParameters(id, parameterEdit);\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        parameters: {\n          ...prev.parameters,\n          ...parameterEdit\n        }\n      }));\n      setParameterEdit({});\n    } catch (err) {\n      console.error('Failed to update parameters:', err);\n      setError('Update parameters failed, please try again later');\n    }\n  };\n  const getParameterFields = () => {\n    if (!actuator || !actuator.parameters) return null;\n    const parameters = actuator.parameters;\n    switch (actuator.type) {\n      case 'fan':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Fan Speed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.speed || parameters.speed || 0,\n              min: 0,\n              max: parameters.max_speed || 5,\n              step: 1,\n              marks: true,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                speed: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Direction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: parameterEdit.direction || parameters.direction || 'forward',\n              onChange: e => setParameterEdit({\n                ...parameterEdit,\n                direction: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"forward\",\n                children: \"Forward\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"reverse\",\n                children: \"Reverse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'lighting':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Brightness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.brightness || parameters.brightness || 0,\n              min: 0,\n              max: 100,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                brightness: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Color Temperature (K)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.color_temp || parameters.color_temp || 3000,\n              min: 2000,\n              max: 6500,\n              step: 100,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                color_temp: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'irrigation':\n      case 'water_pump':\n      case 'pump':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Flow Rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.flow_rate || parameters.flow_rate || 100,\n              min: 10,\n              max: 100,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                flow_rate: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'humidifier':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Humidity Intensity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.intensity || parameters.intensity || 0,\n              min: 0,\n              max: parameters.max_intensity || 10,\n              step: 1,\n              marks: true,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                intensity: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      default:\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"No parameters available for this actuator type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this);\n    }\n  };\n\n  // Get rule parameter fields based on actuator type\n  const getRuleParameterFields = (actuatorType, actionValue) => {\n    switch (actuatorType) {\n      case 'fan':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Fan Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newRule.parameters.speed || '',\n              onChange: e => setNewRule({\n                ...newRule,\n                parameters: {\n                  ...newRule.parameters,\n                  speed: parseInt(e.target.value)\n                }\n              }),\n              children: [0, 1, 2, 3, 4, 5].map(speed => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: speed,\n                children: speed\n              }, speed, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      case 'lighting':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            label: \"Brightness\",\n            type: \"number\",\n            value: newRule.parameters.brightness || '',\n            onChange: e => setNewRule({\n              ...newRule,\n              parameters: {\n                ...newRule.parameters,\n                brightness: parseInt(e.target.value)\n              }\n            }),\n            InputProps: {\n              inputProps: {\n                min: 0,\n                max: 100\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      default:\n        return null;\n    }\n  };\n\n  // Tab switch handling\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  // Render auto rules\n  const renderAutoRules = () => {\n    if (!actuator || !actuator.auto_rules || Object.keys(actuator.auto_rules).length === 0) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"No automatic control rules yet, please add one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this);\n    }\n    return Object.entries(actuator.auto_rules).map(([sensorType, rule]) => {\n      var _STATUS_STYLES$action;\n      const condition = Object.keys(rule)[0];\n      if (!condition) return null;\n      const value = rule[condition];\n      const action = rule.action;\n      const parameters = rule.parameters || {};\n      return /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: `${SENSOR_TYPE_NAMES[sensorType] || sensorType} ${CONDITION_TYPE_NAMES[condition] || condition} ${value}`,\n          subheader: `Action: ${((_STATUS_STYLES$action = STATUS_STYLES[action]) === null || _STATUS_STYLES$action === void 0 ? void 0 : _STATUS_STYLES$action.label) || action}`,\n          action: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => handleRemoveAutoRule(sensorType),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), Object.keys(parameters).length > 0 && /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"Parameter Settings:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: Object.entries(parameters).map(([key, value]) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${key}: ${value}`,\n              size: \"small\",\n              sx: {\n                mr: 1,\n                mb: 1\n              }\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)]\n      }, sensorType, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  // Render operation logs\n  const renderLogs = () => {\n    if (logs.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"No operation records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this);\n    }\n    return logs.map(log => {\n      var _STATUS_STYLES$log$st, _STATUS_STYLES$log$st2, _STATUS_STYLES$log$pr, _STATUS_STYLES$log$st3;\n      const date = new Date(log.timestamp);\n      const formattedDate = date.toLocaleString();\n      return /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: log.message,\n          subheader: formattedDate,\n          avatar: /*#__PURE__*/_jsxDEV(Chip, {\n            label: ((_STATUS_STYLES$log$st = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st === void 0 ? void 0 : _STATUS_STYLES$log$st.label) || log.status,\n            color: ((_STATUS_STYLES$log$st2 = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st2 === void 0 ? void 0 : _STATUS_STYLES$log$st2.color) || 'default',\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: `Changed from ${((_STATUS_STYLES$log$pr = STATUS_STYLES[log.previous_state]) === null || _STATUS_STYLES$log$pr === void 0 ? void 0 : _STATUS_STYLES$log$pr.label) || log.previous_state} to ${((_STATUS_STYLES$log$st3 = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st3 === void 0 ? void 0 : _STATUS_STYLES$log$st3.label) || log.status}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), log.parameters && Object.keys(log.parameters).length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Parameter changes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this), Object.entries(log.parameters).map(([key, value]) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${key}: ${value}`,\n              size: \"small\",\n              sx: {\n                mr: 1,\n                mt: 1\n              }\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this)]\n      }, log.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '70vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 24\n          }, this),\n          onClick: () => navigate('/actuators'),\n          sx: {\n            mt: 2\n          },\n          children: \"Back to Actuator List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this);\n  }\n  if (!actuator) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"warning\",\n          children: \"Actuator information not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 24\n          }, this),\n          onClick: () => navigate('/actuators'),\n          sx: {\n            mt: 2\n          },\n          children: \"Back to Actuator List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 26\n            }, this),\n            onClick: () => navigate('/actuators'),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            children: actuator.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: ((_STATUS_STYLES$actuat = STATUS_STYLES[actuator.status]) === null || _STATUS_STYLES$actuat === void 0 ? void 0 : _STATUS_STYLES$actuat.label) || actuator.status,\n            color: ((_STATUS_STYLES$actuat2 = STATUS_STYLES[actuator.status]) === null || _STATUS_STYLES$actuat2 === void 0 ? void 0 : _STATUS_STYLES$actuat2.color) || 'default'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 7\n    }, this), saveSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: \"Saved successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderBottom: 1,\n        borderColor: 'divider'\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        onChange: handleTabChange,\n        \"aria-label\": \"Actuator detail tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Control Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Automatic Rules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Operation Logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 0,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Basic Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this), !editMode ? /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 28\n            }, this),\n            onClick: () => setEditMode(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 30\n              }, this),\n              onClick: () => {\n                setEditMode(false);\n                setEditData({\n                  name: actuator.name,\n                  location: actuator.location,\n                  is_active: actuator.is_active,\n                  mode: actuator.mode,\n                  mqtt_topic: actuator.mqtt_topic\n                });\n              },\n              sx: {\n                mr: 1\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 30\n              }, this),\n              variant: \"contained\",\n              onClick: handleSaveChanges,\n              disabled: saveLoading,\n              children: saveLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 34\n              }, this) : 'Save'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: editMode ?\n          /*#__PURE__*/\n          // Edit mode\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Name\",\n                value: editData.name || '',\n                onChange: e => setEditData({\n                  ...editData,\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Location\",\n                value: editData.location || '',\n                onChange: e => setEditData({\n                  ...editData,\n                  location: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Operation Mode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: editData.mode || 'manual',\n                  onChange: e => setEditData({\n                    ...editData,\n                    mode: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"manual\",\n                    children: \"Manual\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 710,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"auto\",\n                    children: \"Automatic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"MQTT Topic\",\n                value: editData.mqtt_topic || '',\n                onChange: e => setEditData({\n                  ...editData,\n                  mqtt_topic: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: editData.is_active,\n                  onChange: e => setEditData({\n                    ...editData,\n                    is_active: e.target.checked\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 23\n                }, this),\n                label: \"Enable this actuator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) :\n          /*#__PURE__*/\n          // View mode\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: ACTUATOR_TYPE_NAMES[actuator.type] || actuator.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: actuator.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: actuator.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"MQTT Topic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: actuator.mqtt_topic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Operation Mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: actuator.mode === 'auto' ? 'Automatic' : 'Manual'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: actuator.is_active ? 'Enabled' : 'Disabled'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Created At\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: new Date(actuator.created_at).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Last Updated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: new Date(actuator.updated_at).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 17\n            }, this), actuator.last_control_time && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Last Control Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: new Date(actuator.last_control_time).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Status Control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                mb: 3\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 1,\n                mb: 3\n              },\n              children: allowedStates.map(state => {\n                var _STATUS_STYLES$state, _STATUS_STYLES$state2;\n                return /*#__PURE__*/_jsxDEV(Button, {\n                  variant: actuator.status === state ? \"contained\" : \"outlined\",\n                  color: ((_STATUS_STYLES$state = STATUS_STYLES[state]) === null || _STATUS_STYLES$state === void 0 ? void 0 : _STATUS_STYLES$state.color) || 'primary',\n                  onClick: () => handleControlActuator(state),\n                  sx: {\n                    minWidth: '100px'\n                  },\n                  children: ((_STATUS_STYLES$state2 = STATUS_STYLES[state]) === null || _STATUS_STYLES$state2 === void 0 ? void 0 : _STATUS_STYLES$state2.label) || state\n                }, state, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 802,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Parameter Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 818,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                mb: 3\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 15\n            }, this), !actuator.parameters || Object.keys(actuator.parameters).length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"This actuator has no parameter settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [getParameterFields(), Object.keys(parameterEdit).length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  display: 'flex',\n                  justifyContent: 'flex-end'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  onClick: () => setParameterEdit({}),\n                  sx: {\n                    mr: 1\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 831,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: handleEditParameters,\n                  children: \"Apply Parameters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 838,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 2,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Automatic Control Rules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 860,\n              columnNumber: 26\n            }, this),\n            onClick: () => setAutoRuleDialogOpen(true),\n            children: \"Add Rule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 11\n        }, this), renderAutoRules()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: autoRuleDialogOpen,\n        onClose: () => setAutoRuleDialogOpen(false),\n        maxWidth: \"sm\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Add Automatic Control Rule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Sensor Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newRule.sensor_type || '',\n              onChange: e => setNewRule({\n                ...newRule,\n                sensor_type: e.target.value\n              }),\n              children: Object.entries(SENSOR_TYPE_NAMES).map(([key, value]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: key,\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Condition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newRule.condition || 'gt',\n              onChange: e => setNewRule({\n                ...newRule,\n                condition: e.target.value\n              }),\n              children: Object.entries(CONDITION_TYPE_NAMES).map(([key, value]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: key,\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 894,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            label: \"Value\",\n            type: \"number\",\n            value: newRule.value || '',\n            onChange: e => setNewRule({\n              ...newRule,\n              value: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newRule.action || '',\n              onChange: e => setNewRule({\n                ...newRule,\n                action: e.target.value\n              }),\n              children: allowedStates.map(state => {\n                var _STATUS_STYLES$state3;\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: state,\n                  children: ((_STATUS_STYLES$state3 = STATUS_STYLES[state]) === null || _STATUS_STYLES$state3 === void 0 ? void 0 : _STATUS_STYLES$state3.label) || state\n                }, state, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 915,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 13\n          }, this), newRule.action && getRuleParameterFields(actuator.type, newRule.action)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setAutoRuleDialogOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddAutoRule,\n            variant: \"contained\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 3,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Operation Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 11\n        }, this), renderLogs()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 600,\n    columnNumber: 5\n  }, this);\n};\n_s(ActuatorDetail, \"7vPqD9KyJfhY7f08AtNfIbLVs/U=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = ActuatorDetail;\nexport default ActuatorDetail;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ActuatorDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Box","Container","Typography","Button","Grid","Paper","Divider","TextField","FormControl","InputLabel","Select","MenuItem","Switch","FormControlLabel","Tab","Tabs","CircularProgress","Chip","Card","CardContent","CardHeader","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Alert","Tooltip","Slider","List","ListItem","ListItemText","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","ArrowBack","ArrowBackIcon","Save","SaveIcon","PowerSettingsNew","PowerIcon","History","HistoryIcon","Edit","EditIcon","Add","AddIcon","Delete","DeleteIcon","SettingsBackupRestore","ResetIcon","Check","CheckIcon","Close","CloseIcon","Settings","SettingsIcon","ErrorOutline","ErrorOutlineIcon","DateRange","DateRangeIcon","Opacity","HumidityIcon","Thermostat","TemperatureIcon","Air","FanIcon","WbSunny","LightIcon","WaterDrop","WaterIcon","actuatorAPI","LineChart","Line","XAxis","YAxis","CartesianGrid","RechartsTooltip","ResponsiveContainer","Legend","useSocket","jsxDEV","_jsxDEV","Fragment","_Fragment","ACTUATOR_TYPE_NAMES","STATUS_STYLES","color","label","SENSOR_TYPE_NAMES","CONDITION_TYPE_NAMES","TabPanel","props","children","value","index","other","role","hidden","id","sx","py","fileName","_jsxFileName","lineNumber","columnNumber","_c","ActuatorDetail","_s","_STATUS_STYLES$actuat","_STATUS_STYLES$actuat2","navigate","actuator","setActuator","loading","setLoading","error","setError","tabValue","setTabValue","editMode","setEditMode","editData","setEditData","logs","setLogs","allowedStates","setAllowedStates","autoRuleDialogOpen","setAutoRuleDialogOpen","newRule","setNewRule","sensor_type","condition","action","parameters","saveLoading","setSaveLoading","saveSuccess","setSaveSuccess","parameterEdit","setParameterEdit","fetchActuatorDetail","response","getActuator","data","name","location","is_active","mode","mqtt_topic","allowedStatesResponse","getActuatorStatuses","logsResponse","getActuatorLogs","err","console","handleControlActuator","controlActuator","prev","status","last_control_time","Date","toISOString","handleSaveChanges","updateActuator","setTimeout","handleAddAutoRule","autoRules","auto_rules","parseFloat","updateAutoRules","handleRemoveAutoRule","sensorType","handleEditParameters","updateParameters","getParameterFields","type","variant","gutterBottom","px","pb","speed","min","max","max_speed","step","marks","valueLabelDisplay","onChange","_","fullWidth","margin","direction","e","target","brightness","color_temp","flow_rate","intensity","max_intensity","getRuleParameterFields","actuatorType","actionValue","parseInt","map","InputProps","inputProps","handleTabChange","event","newValue","renderAutoRules","Object","keys","length","entries","rule","_STATUS_STYLES$action","mb","title","subheader","onClick","mt","key","size","mr","renderLogs","log","_STATUS_STYLES$log$st","_STATUS_STYLES$log$st2","_STATUS_STYLES$log$pr","_STATUS_STYLES$log$st3","date","timestamp","formattedDate","toLocaleString","message","avatar","previous_state","maxWidth","display","justifyContent","alignItems","height","severity","startIcon","container","spacing","item","xs","component","borderBottom","borderColor","p","disabled","md","control","checked","created_at","updated_at","flexWrap","gap","state","_STATUS_STYLES$state","_STATUS_STYLES$state2","minWidth","open","onClose","_STATUS_STYLES$state3","_c2","$RefreshReg$"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/src/pages/ActuatorDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { \r\n  Box, \r\n  Container, \r\n  Typography, \r\n  Button, \r\n  Grid, \r\n  Paper, \r\n  Divider, \r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  FormControlLabel,\r\n  Tab,\r\n  Tabs,\r\n  CircularProgress,\r\n  Chip,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Alert,\r\n  Tooltip,\r\n  Slider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow\r\n} from '@mui/material';\r\nimport { \r\n  ArrowBack as ArrowBackIcon,\r\n  Save as SaveIcon,\r\n  PowerSettingsNew as PowerIcon,\r\n  History as HistoryIcon,\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  SettingsBackupRestore as ResetIcon,\r\n  Check as CheckIcon,\r\n  Close as CloseIcon,\r\n  Settings as SettingsIcon,\r\n  ErrorOutline as ErrorOutlineIcon,\r\n  DateRange as DateRangeIcon,\r\n  Opacity as HumidityIcon,\r\n  Thermostat as TemperatureIcon,\r\n  Air as FanIcon,\r\n  WbSunny as LightIcon,\r\n  WaterDrop as WaterIcon\r\n} from '@mui/icons-material';\r\nimport { actuatorAPI } from '../services/api';\r\nimport { \r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, \r\n  Tooltip as RechartsTooltip, ResponsiveContainer, Legend \r\n} from 'recharts';\r\nimport { useSocket } from '../contexts/SocketContext';\r\n\r\n// Actuator type mapping\r\nconst ACTUATOR_TYPE_NAMES = {\r\n  'irrigation': 'Irrigation System',\r\n  'ventilation': 'Ventilation System',\r\n  'lighting': 'Lighting System',\r\n  'heating': 'Heating System',\r\n  'cooling': 'Cooling System', \r\n  'curtain': 'Curtain System',\r\n  'nutrient': 'Nutrient System',\r\n  'water_pump': 'Water Pump',\r\n  'fan': 'Fan',\r\n  'humidifier': 'Humidifier',\r\n  'pump': 'Pump'\r\n};\r\n\r\n// Actuator status styles and labels\r\nconst STATUS_STYLES = {\r\n  'on': { color: 'success', label: 'On' },\r\n  'off': { color: 'default', label: 'Off' },\r\n  'low': { color: 'info', label: 'Low' },\r\n  'medium': { color: 'primary', label: 'Medium' },\r\n  'high': { color: 'warning', label: 'High' },\r\n  'auto': { color: 'secondary', label: 'Auto' },\r\n  'dim': { color: 'info', label: 'Dim' },\r\n  'bright': { color: 'warning', label: 'Bright' },\r\n  'open': { color: 'success', label: 'Open' },\r\n  'closed': { color: 'default', label: 'Closed' },\r\n  'half': { color: 'info', label: 'Half open' },\r\n  'error': { color: 'error', label: 'Error' }\r\n};\r\n\r\n// Sensor type mapping\r\nconst SENSOR_TYPE_NAMES = {\r\n  'temperature': 'Temperature',\r\n  'humidity': 'Humidity',\r\n  'light': 'Light',\r\n  'soil_moisture': 'Soil Moisture',\r\n  'co2': 'CO2',\r\n  'ph': 'pH Value',\r\n  'water_level': 'Water Level'\r\n};\r\n\r\n// Condition type mapping\r\nconst CONDITION_TYPE_NAMES = {\r\n  'gt': 'Greater than',\r\n  'lt': 'Less than',\r\n  'eq': 'Equal to',\r\n  'gte': 'Greater than or equal to',\r\n  'lte': 'Less than or equal to',\r\n  'change': 'Change'\r\n};\r\n\r\n// Tab definition\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`actuator-tabpanel-${index}`}\r\n      aria-labelledby={`actuator-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ py: 3 }}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ActuatorDetail = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [actuator, setActuator] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editData, setEditData] = useState({});\r\n  const [logs, setLogs] = useState([]);\r\n  const [allowedStates, setAllowedStates] = useState(['on', 'off']);\r\n  const [autoRuleDialogOpen, setAutoRuleDialogOpen] = useState(false);\r\n  const [newRule, setNewRule] = useState({\r\n    sensor_type: '',\r\n    condition: 'gt',\r\n    value: 0,\r\n    action: 'on',\r\n    parameters: {}\r\n  });\r\n  const [saveLoading, setSaveLoading] = useState(false);\r\n  const [saveSuccess, setSaveSuccess] = useState(false);\r\n  const [parameterEdit, setParameterEdit] = useState({});\r\n\r\n  // Get actuator details\r\n  const fetchActuatorDetail = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await actuatorAPI.getActuator(id);\r\n      const data = response.data.data;\r\n      setActuator(data);\r\n      setEditData({\r\n        name: data.name,\r\n        location: data.location,\r\n        is_active: data.is_active,\r\n        mode: data.mode,\r\n        mqtt_topic: data.mqtt_topic\r\n      });\r\n      // Get allowed states\r\n      const allowedStatesResponse = await actuatorAPI.getActuatorStatuses(id);\r\n      setAllowedStates(allowedStatesResponse.data.data || ['on', 'off']);\r\n      \r\n      // Get actuator logs\r\n      const logsResponse = await actuatorAPI.getActuatorLogs(id);\r\n      setLogs(logsResponse.data.data || []);\r\n      \r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Failed to get actuator details:', err);\r\n      setError('Failed to get actuator details, please try again later');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchActuatorDetail();\r\n  }, [id]);\r\n\r\n  // Control actuator\r\n  const handleControlActuator = async (action) => {\r\n    try {\r\n      await actuatorAPI.controlActuator(id, { action });\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev, \r\n        status: action,\r\n        last_control_time: new Date().toISOString()\r\n      }));\r\n      // Refresh logs\r\n      const logsResponse = await actuatorAPI.getActuatorLogs(id);\r\n      setLogs(logsResponse.data.data || []);\r\n    } catch (err) {\r\n      console.error('Failed to control actuator:', err);\r\n      setError('Operation failed, please try again later');\r\n    }\r\n  };\r\n\r\n  const handleSaveChanges = async () => {\r\n    setSaveLoading(true);\r\n    try {\r\n      await actuatorAPI.updateActuator(id, editData);\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev,\r\n        ...editData\r\n      }));\r\n      setEditMode(false);\r\n      setSaveSuccess(true);\r\n      setTimeout(() => setSaveSuccess(false), 3000);\r\n    } catch (err) {\r\n      console.error('Failed to update actuator:', err);\r\n      setError('Update failed, please try again later');\r\n    } finally {\r\n      setSaveLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddAutoRule = async () => {\r\n    if (!newRule.sensor_type || !newRule.condition) {\r\n      setError('Please complete the automatic control rule information');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const autoRules = { ...(actuator.auto_rules || {}) };\r\n      autoRules[newRule.sensor_type] = {\r\n        [newRule.condition]: parseFloat(newRule.value),\r\n        action: newRule.action,\r\n        parameters: newRule.parameters\r\n      };\r\n\r\n      await actuatorAPI.updateAutoRules(id, autoRules);\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev,\r\n        auto_rules: autoRules\r\n      }));\r\n      setAutoRuleDialogOpen(false);\r\n      setNewRule({\r\n        sensor_type: '',\r\n        condition: 'gt',\r\n        value: 0,\r\n        action: 'on',\r\n        parameters: {}\r\n      });\r\n    } catch (err) {\r\n      console.error('Failed to update automatic control rules:', err);\r\n      setError('Update rule failed, please try again later');\r\n    }\r\n  };\r\n\r\n  const handleRemoveAutoRule = async (sensorType) => {\r\n    try {\r\n      const autoRules = { ...(actuator.auto_rules || {}) };\r\n      delete autoRules[sensorType];\r\n      \r\n      await actuatorAPI.updateAutoRules(id, autoRules);\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev,\r\n        auto_rules: autoRules\r\n      }));\r\n    } catch (err) {\r\n      console.error('Failed to remove automatic control rule:', err);\r\n      setError('Failed to remove rule, please try again later');\r\n    }\r\n  };\r\n\r\n  const handleEditParameters = async () => {\r\n    try {\r\n      await actuatorAPI.updateParameters(id, parameterEdit);\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev,\r\n        parameters: {...prev.parameters, ...parameterEdit}\r\n      }));\r\n      setParameterEdit({});\r\n    } catch (err) {\r\n      console.error('Failed to update parameters:', err);\r\n      setError('Update parameters failed, please try again later');\r\n    }\r\n  };\r\n\r\n  const getParameterFields = () => {\r\n    if (!actuator || !actuator.parameters) return null;\r\n    \r\n    const parameters = actuator.parameters;\r\n    \r\n    switch(actuator.type) {\r\n      case 'fan':\r\n        return (\r\n          <>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Fan Speed</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.speed || parameters.speed || 0}\r\n                min={0}\r\n                max={parameters.max_speed || 5}\r\n                step={1}\r\n                marks\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, speed: value})}\r\n              />\r\n            </Box>\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Direction</InputLabel>\r\n              <Select\r\n                value={parameterEdit.direction || parameters.direction || 'forward'}\r\n                onChange={(e) => setParameterEdit({...parameterEdit, direction: e.target.value})}\r\n              >\r\n                <MenuItem value=\"forward\">Forward</MenuItem>\r\n                <MenuItem value=\"reverse\">Reverse</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </>\r\n        );\r\n      case 'lighting':\r\n        return (\r\n          <>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Brightness</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.brightness || parameters.brightness || 0}\r\n                min={0}\r\n                max={100}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, brightness: value})}\r\n              />\r\n            </Box>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Color Temperature (K)</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.color_temp || parameters.color_temp || 3000}\r\n                min={2000}\r\n                max={6500}\r\n                step={100}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, color_temp: value})}\r\n              />\r\n            </Box>\r\n          </>\r\n        );\r\n      case 'irrigation':\r\n      case 'water_pump':\r\n      case 'pump':\r\n        return (\r\n          <>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Flow Rate (%)</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.flow_rate || parameters.flow_rate || 100}\r\n                min={10}\r\n                max={100}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, flow_rate: value})}\r\n              />\r\n            </Box>\r\n          </>\r\n        );\r\n      case 'humidifier':\r\n        return (\r\n          <>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Humidity Intensity</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.intensity || parameters.intensity || 0}\r\n                min={0}\r\n                max={parameters.max_intensity || 10}\r\n                step={1}\r\n                marks\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, intensity: value})}\r\n              />\r\n            </Box>\r\n          </>\r\n        );\r\n      default:\r\n        return (\r\n          <Typography variant=\"body2\">No parameters available for this actuator type</Typography>\r\n        );\r\n    }\r\n  };\r\n\r\n  // Get rule parameter fields based on actuator type\r\n  const getRuleParameterFields = (actuatorType, actionValue) => {\r\n    switch(actuatorType) {\r\n      case 'fan':\r\n        return (\r\n          <>\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Fan Speed</InputLabel>\r\n              <Select\r\n                value={newRule.parameters.speed || ''}\r\n                onChange={(e) => setNewRule({\r\n                  ...newRule, \r\n                  parameters: {...newRule.parameters, speed: parseInt(e.target.value)}\r\n                })}\r\n              >\r\n                {[0, 1, 2, 3, 4, 5].map(speed => (\r\n                  <MenuItem key={speed} value={speed}>{speed}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </>\r\n        );\r\n      case 'lighting':\r\n        return (\r\n          <>\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              label=\"Brightness\"\r\n              type=\"number\"\r\n              value={newRule.parameters.brightness || ''}\r\n              onChange={(e) => setNewRule({\r\n                ...newRule, \r\n                parameters: {...newRule.parameters, brightness: parseInt(e.target.value)}\r\n              })}\r\n              InputProps={{ inputProps: { min: 0, max: 100 } }}\r\n            />\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Tab switch handling\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  // Render auto rules\r\n  const renderAutoRules = () => {\r\n    if (!actuator || !actuator.auto_rules || Object.keys(actuator.auto_rules).length === 0) {\r\n      return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          No automatic control rules yet, please add one\r\n        </Typography>\r\n      );\r\n    }\r\n\r\n    return Object.entries(actuator.auto_rules).map(([sensorType, rule]) => {\r\n      const condition = Object.keys(rule)[0];\r\n      if (!condition) return null;\r\n      \r\n      const value = rule[condition];\r\n      const action = rule.action;\r\n      const parameters = rule.parameters || {};\r\n      \r\n      return (\r\n        <Card key={sensorType} sx={{ mb: 2 }}>\r\n          <CardHeader\r\n            title={`${SENSOR_TYPE_NAMES[sensorType] || sensorType} ${CONDITION_TYPE_NAMES[condition] || condition} ${value}`}\r\n            subheader={`Action: ${STATUS_STYLES[action]?.label || action}`}\r\n            action={\r\n              <IconButton onClick={() => handleRemoveAutoRule(sensorType)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            }\r\n          />\r\n          {Object.keys(parameters).length > 0 && (\r\n            <CardContent>\r\n              <Typography variant=\"body2\">Parameter Settings:</Typography>\r\n              <Box sx={{ mt: 1 }}>\r\n                {Object.entries(parameters).map(([key, value]) => (\r\n                  <Chip \r\n                    key={key} \r\n                    label={`${key}: ${value}`} \r\n                    size=\"small\" \r\n                    sx={{ mr: 1, mb: 1 }} \r\n                  />\r\n                ))}\r\n              </Box>\r\n            </CardContent>\r\n          )}\r\n        </Card>\r\n      );\r\n    });\r\n  };\r\n\r\n  // Render operation logs\r\n  const renderLogs = () => {\r\n    if (logs.length === 0) {\r\n      return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          No operation records\r\n        </Typography>\r\n      );\r\n    }\r\n\r\n    return logs.map(log => {\r\n      const date = new Date(log.timestamp);\r\n      const formattedDate = date.toLocaleString();\r\n      \r\n      return (\r\n        <Card key={log.id} sx={{ mb: 2 }}>\r\n          <CardHeader\r\n            title={log.message}\r\n            subheader={formattedDate}\r\n            avatar={\r\n              <Chip \r\n                label={STATUS_STYLES[log.status]?.label || log.status} \r\n                color={STATUS_STYLES[log.status]?.color || 'default'} \r\n                size=\"small\" \r\n              />\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {`Changed from ${STATUS_STYLES[log.previous_state]?.label || log.previous_state} to ${STATUS_STYLES[log.status]?.label || log.status}`}\r\n            </Typography>\r\n            {log.parameters && Object.keys(log.parameters).length > 0 && (\r\n              <Box sx={{ mt: 1 }}>\r\n                <Typography variant=\"body2\">Parameter changes:</Typography>\r\n                {Object.entries(log.parameters).map(([key, value]) => (\r\n                  <Chip \r\n                    key={key} \r\n                    label={`${key}: ${value}`} \r\n                    size=\"small\" \r\n                    sx={{ mr: 1, mt: 1 }} \r\n                  />\r\n                ))}\r\n              </Box>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '70vh' }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mt: 4 }}>\r\n          <Alert severity=\"error\">{error}</Alert>\r\n          <Button \r\n            variant=\"outlined\" \r\n            startIcon={<ArrowBackIcon />} \r\n            onClick={() => navigate('/actuators')}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Back to Actuator List\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!actuator) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mt: 4 }}>\r\n          <Alert severity=\"warning\">Actuator information not found</Alert>\r\n          <Button \r\n            variant=\"outlined\" \r\n            startIcon={<ArrowBackIcon />} \r\n            onClick={() => navigate('/actuators')}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Back to Actuator List\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box sx={{ mt: 4, mb: 2 }}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item>\r\n            <Button \r\n              variant=\"outlined\" \r\n              startIcon={<ArrowBackIcon />} \r\n              onClick={() => navigate('/actuators')}\r\n            >\r\n              Back\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Typography variant=\"h4\" component=\"h1\">\r\n              {actuator.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip \r\n              label={STATUS_STYLES[actuator.status]?.label || actuator.status} \r\n              color={STATUS_STYLES[actuator.status]?.color || 'default'} \r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      {saveSuccess && (\r\n        <Alert severity=\"success\" sx={{ mb: 2 }}>Saved successfully</Alert>\r\n      )}\r\n\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"Actuator detail tabs\">\r\n          <Tab label=\"Basic Information\" />\r\n          <Tab label=\"Control Panel\" />\r\n          <Tab label=\"Automatic Rules\" />\r\n          <Tab label=\"Operation Logs\" />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {/* Basic Info Tab */}\r\n      <TabPanel value={tabValue} index={0}>\r\n        <Paper sx={{ p: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n            <Typography variant=\"h6\">Basic Information</Typography>\r\n            {!editMode ? (\r\n              <Button \r\n                startIcon={<EditIcon />} \r\n                onClick={() => setEditMode(true)}\r\n              >\r\n                Edit\r\n              </Button>\r\n            ) : (\r\n              <Box>\r\n                <Button \r\n                  startIcon={<CloseIcon />} \r\n                  onClick={() => {\r\n                    setEditMode(false);\r\n                    setEditData({\r\n                      name: actuator.name,\r\n                      location: actuator.location,\r\n                      is_active: actuator.is_active,\r\n                      mode: actuator.mode,\r\n                      mqtt_topic: actuator.mqtt_topic\r\n                    });\r\n                  }}\r\n                  sx={{ mr: 1 }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button \r\n                  startIcon={<SaveIcon />} \r\n                  variant=\"contained\" \r\n                  onClick={handleSaveChanges}\r\n                  disabled={saveLoading}\r\n                >\r\n                  {saveLoading ? <CircularProgress size={24} /> : 'Save'}\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n\r\n          <Divider sx={{ mb: 3 }} />\r\n\r\n          <Grid container spacing={3}>\r\n            {editMode ? (\r\n              // Edit mode\r\n              <>\r\n                <Grid item xs={12} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Name\"\r\n                    value={editData.name || ''}\r\n                    onChange={(e) => setEditData({...editData, name: e.target.value})}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Location\"\r\n                    value={editData.location || ''}\r\n                    onChange={(e) => setEditData({...editData, location: e.target.value})}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Operation Mode</InputLabel>\r\n                    <Select\r\n                      value={editData.mode || 'manual'}\r\n                      onChange={(e) => setEditData({...editData, mode: e.target.value})}\r\n                    >\r\n                      <MenuItem value=\"manual\">Manual</MenuItem>\r\n                      <MenuItem value=\"auto\">Automatic</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"MQTT Topic\"\r\n                    value={editData.mqtt_topic || ''}\r\n                    onChange={(e) => setEditData({...editData, mqtt_topic: e.target.value})}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={editData.is_active}\r\n                        onChange={(e) => setEditData({...editData, is_active: e.target.checked})}\r\n                      />\r\n                    }\r\n                    label=\"Enable this actuator\"\r\n                  />\r\n                </Grid>\r\n              </>\r\n            ) : (\r\n              // View mode\r\n              <>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Type</Typography>\r\n                  <Typography variant=\"body1\">{ACTUATOR_TYPE_NAMES[actuator.type] || actuator.type}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Name</Typography>\r\n                  <Typography variant=\"body1\">{actuator.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Location</Typography>\r\n                  <Typography variant=\"body1\">{actuator.location}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">MQTT Topic</Typography>\r\n                  <Typography variant=\"body1\">{actuator.mqtt_topic}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Operation Mode</Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {actuator.mode === 'auto' ? 'Automatic' : 'Manual'}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Status</Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {actuator.is_active ? 'Enabled' : 'Disabled'}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Created At</Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {new Date(actuator.created_at).toLocaleString()}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Last Updated</Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {new Date(actuator.updated_at).toLocaleString()}\r\n                  </Typography>\r\n                </Grid>\r\n                {actuator.last_control_time && (\r\n                  <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"subtitle2\" color=\"text.secondary\">Last Control Time</Typography>\r\n                    <Typography variant=\"body1\">\r\n                      {new Date(actuator.last_control_time).toLocaleString()}\r\n                    </Typography>\r\n                  </Grid>\r\n                )}\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n      </TabPanel>\r\n\r\n      {/* Control Panel Tab */}\r\n      <TabPanel value={tabValue} index={1}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom>Status Control</Typography>\r\n              <Divider sx={{ mb: 3 }} />\r\n              \r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 3 }}>\r\n                {allowedStates.map(state => (\r\n                  <Button\r\n                    key={state}\r\n                    variant={actuator.status === state ? \"contained\" : \"outlined\"}\r\n                    color={STATUS_STYLES[state]?.color || 'primary'}\r\n                    onClick={() => handleControlActuator(state)}\r\n                    sx={{ minWidth: '100px' }}\r\n                  >\r\n                    {STATUS_STYLES[state]?.label || state}\r\n                  </Button>\r\n                ))}\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={6}>\r\n            <Paper sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom>Parameter Settings</Typography>\r\n              <Divider sx={{ mb: 3 }} />\r\n              \r\n              {!actuator.parameters || Object.keys(actuator.parameters).length === 0 ? (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  This actuator has no parameter settings\r\n                </Typography>\r\n              ) : (\r\n                <>\r\n                  {getParameterFields()}\r\n                  \r\n                  {Object.keys(parameterEdit).length > 0 && (\r\n                    <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n                      <Button \r\n                        variant=\"outlined\" \r\n                        onClick={() => setParameterEdit({})} \r\n                        sx={{ mr: 1 }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                      <Button \r\n                        variant=\"contained\" \r\n                        onClick={handleEditParameters}\r\n                      >\r\n                        Apply Parameters\r\n                      </Button>\r\n                    </Box>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      {/* Automatic Rules Tab */}\r\n      <TabPanel value={tabValue} index={2}>\r\n        <Paper sx={{ p: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n            <Typography variant=\"h6\">Automatic Control Rules</Typography>\r\n            <Button \r\n              variant=\"contained\" \r\n              startIcon={<AddIcon />} \r\n              onClick={() => setAutoRuleDialogOpen(true)}\r\n            >\r\n              Add Rule\r\n            </Button>\r\n          </Box>\r\n          <Divider sx={{ mb: 3 }} />\r\n          \r\n          {renderAutoRules()}\r\n        </Paper>\r\n        \r\n        {/* Add Auto Rule Dialog */}\r\n        <Dialog open={autoRuleDialogOpen} onClose={() => setAutoRuleDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Add Automatic Control Rule</DialogTitle>\r\n          <DialogContent>\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Sensor Type</InputLabel>\r\n              <Select\r\n                value={newRule.sensor_type || ''}\r\n                onChange={(e) => setNewRule({...newRule, sensor_type: e.target.value})}\r\n              >\r\n                {Object.entries(SENSOR_TYPE_NAMES).map(([key, value]) => (\r\n                  <MenuItem key={key} value={key}>{value}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Condition</InputLabel>\r\n              <Select\r\n                value={newRule.condition || 'gt'}\r\n                onChange={(e) => setNewRule({...newRule, condition: e.target.value})}\r\n              >\r\n                {Object.entries(CONDITION_TYPE_NAMES).map(([key, value]) => (\r\n                  <MenuItem key={key} value={key}>{value}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              label=\"Value\"\r\n              type=\"number\"\r\n              value={newRule.value || ''}\r\n              onChange={(e) => setNewRule({...newRule, value: e.target.value})}\r\n            />\r\n            \r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Action</InputLabel>\r\n              <Select\r\n                value={newRule.action || ''}\r\n                onChange={(e) => setNewRule({...newRule, action: e.target.value})}\r\n              >\r\n                {allowedStates.map(state => (\r\n                  <MenuItem key={state} value={state}>\r\n                    {STATUS_STYLES[state]?.label || state}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            {/* Show parameter settings based on actuator type and action */}\r\n            {newRule.action && getRuleParameterFields(actuator.type, newRule.action)}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAutoRuleDialogOpen(false)}>Cancel</Button>\r\n            <Button onClick={handleAddAutoRule} variant=\"contained\">Add</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </TabPanel>\r\n\r\n      {/* Operation Logs Tab */}\r\n      <TabPanel value={tabValue} index={3}>\r\n        <Paper sx={{ p: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>Operation Records</Typography>\r\n          <Divider sx={{ mb: 3 }} />\r\n          \r\n          {renderLogs()}\r\n        </Paper>\r\n      </TabPanel>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ActuatorDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = bin;\nvar _array = require(\"./array.js\");\nvar _bisect = _interopRequireDefault(require(\"./bisect.js\"));\nvar _constant = _interopRequireDefault(require(\"./constant.js\"));\nvar _extent = _interopRequireDefault(require(\"./extent.js\"));\nvar _identity = _interopRequireDefault(require(\"./identity.js\"));\nvar _nice = _interopRequireDefault(require(\"./nice.js\"));\nvar _ticks = _interopRequireWildcard(require(\"./ticks.js\"));\nvar _sturges = _interopRequireDefault(require(\"./threshold/sturges.js\"));\nfunction bin() {\n  var value = _identity.default,\n    domain = _extent.default,\n    threshold = _sturges.default;\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n    var i,\n      n = data.length,\n      x,\n      step,\n      values = new Array(n);\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n    var xz = domain(values),\n      x0 = xz[0],\n      x1 = xz[1],\n      tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1,\n        tn = +tz;\n      if (domain === _extent.default) [x0, x1] = (0, _nice.default)(x0, x1, tn);\n      tz = (0, _ticks.default)(x0, x1, tn);\n\n      // If the domain is aligned with the first tick (which it will by\n      // default), then we can use quantization rather than bisection to bin\n      // values, which is substantially faster.\n      if (tz[0] <= x0) step = (0, _ticks.tickIncrement)(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain’s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don’t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === _extent.default) {\n          const step = (0, _ticks.tickIncrement)(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    // Be careful not to mutate an array owned by the user!\n    var m = tz.length,\n      a = 0,\n      b = m;\n    while (tz[a] <= x0) ++a;\n    while (tz[b - 1] > x1) --b;\n    if (a || b < m) tz = tz.slice(a, b), m = b - a;\n    var bins = new Array(m + 1),\n      bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    if (isFinite(step)) {\n      if (step > 0) {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            bins[Math.min(m, Math.floor((x - x0) / step))].push(data[i]);\n          }\n        }\n      } else if (step < 0) {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            const j = Math.floor((x0 - x) * step);\n            bins[Math.min(m, j + (tz[j] <= x))].push(data[i]); // handle off-by-one due to rounding\n          }\n        }\n      }\n    } else {\n      for (i = 0; i < n; ++i) {\n        if ((x = values[i]) != null && x0 <= x && x <= x1) {\n          bins[(0, _bisect.default)(tz, x, 0, m)].push(data[i]);\n        }\n      }\n    }\n    return bins;\n  }\n  histogram.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : (0, _constant.default)(_), histogram) : value;\n  };\n  histogram.domain = function (_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : (0, _constant.default)([_[0], _[1]]), histogram) : domain;\n  };\n  histogram.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : (0, _constant.default)(Array.isArray(_) ? _array.slice.call(_) : _), histogram) : threshold;\n  };\n  return histogram;\n}","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","Object","defineProperty","exports","value","bin","_array","_bisect","_constant","_extent","_identity","_nice","_ticks","_sturges","domain","threshold","histogram","data","Array","isArray","from","i","n","length","x","step","values","xz","x0","x1","tz","max","tn","tickIncrement","isFinite","Math","floor","ceil","pop","m","a","b","slice","bins","min","push","j","_","arguments","thresholds","call"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/node_modules/@mui/x-charts-vendor/lib-vendor/d3-array/src/bin.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = bin;\nvar _array = require(\"./array.js\");\nvar _bisect = _interopRequireDefault(require(\"./bisect.js\"));\nvar _constant = _interopRequireDefault(require(\"./constant.js\"));\nvar _extent = _interopRequireDefault(require(\"./extent.js\"));\nvar _identity = _interopRequireDefault(require(\"./identity.js\"));\nvar _nice = _interopRequireDefault(require(\"./nice.js\"));\nvar _ticks = _interopRequireWildcard(require(\"./ticks.js\"));\nvar _sturges = _interopRequireDefault(require(\"./threshold/sturges.js\"));\nfunction bin() {\n  var value = _identity.default,\n    domain = _extent.default,\n    threshold = _sturges.default;\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n    var i,\n      n = data.length,\n      x,\n      step,\n      values = new Array(n);\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n    var xz = domain(values),\n      x0 = xz[0],\n      x1 = xz[1],\n      tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1,\n        tn = +tz;\n      if (domain === _extent.default) [x0, x1] = (0, _nice.default)(x0, x1, tn);\n      tz = (0, _ticks.default)(x0, x1, tn);\n\n      // If the domain is aligned with the first tick (which it will by\n      // default), then we can use quantization rather than bisection to bin\n      // values, which is substantially faster.\n      if (tz[0] <= x0) step = (0, _ticks.tickIncrement)(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain’s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don’t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === _extent.default) {\n          const step = (0, _ticks.tickIncrement)(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    // Be careful not to mutate an array owned by the user!\n    var m = tz.length,\n      a = 0,\n      b = m;\n    while (tz[a] <= x0) ++a;\n    while (tz[b - 1] > x1) --b;\n    if (a || b < m) tz = tz.slice(a, b), m = b - a;\n    var bins = new Array(m + 1),\n      bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    if (isFinite(step)) {\n      if (step > 0) {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            bins[Math.min(m, Math.floor((x - x0) / step))].push(data[i]);\n          }\n        }\n      } else if (step < 0) {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            const j = Math.floor((x0 - x) * step);\n            bins[Math.min(m, j + (tz[j] <= x))].push(data[i]); // handle off-by-one due to rounding\n          }\n        }\n      }\n    } else {\n      for (i = 0; i < n; ++i) {\n        if ((x = values[i]) != null && x0 <= x && x <= x1) {\n          bins[(0, _bisect.default)(tz, x, 0, m)].push(data[i]);\n        }\n      }\n    }\n    return bins;\n  }\n  histogram.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : (0, _constant.default)(_), histogram) : value;\n  };\n  histogram.domain = function (_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : (0, _constant.default)([_[0], _[1]]), histogram) : domain;\n  };\n  histogram.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : (0, _constant.default)(Array.isArray(_) ? _array.slice.call(_) : _), histogram) : threshold;\n  };\n  return histogram;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
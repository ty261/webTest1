{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIJIN\\\\Desktop\\\\webTest\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, Typography, Paper, CircularProgress, Button, Divider, Card, CardContent, CardActions, List, ListItem, ListItemIcon, ListItemText, Chip } from '@mui/material';\nimport { Thermostat as TemperatureIcon, Opacity as HumidityIcon, WbSunny as LightIcon, Terrain as SoilIcon, Power as PowerIcon, ForestOutlined as EcoIcon, Speed as SpeedIcon, Air, Opacity, WbSunny } from '@mui/icons-material';\nimport { dashboardAPI } from '../services/api';\nimport { SENSOR_TYPES, ACTUATOR_TYPES } from '../config';\nimport { useNavigate } from 'react-router-dom';\nimport { useSocket } from '../contexts/SocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    sensorData,\n    actuatorData\n  } = useSocket();\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        const response = await dashboardAPI.getSummary();\n        setDashboardData(response.data.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setError('Failed to load dashboard data. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n\n    // Refresh data every 30 seconds (可以考虑移除这个轮询，因为我们已经有实时Socket数据)\n    const interval = setInterval(fetchDashboardData, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // 当收到新的传感器数据时，更新仪表板数据\n  useEffect(() => {\n    if (!dashboardData || Object.keys(sensorData).length === 0) return;\n    const updatedReadings = {\n      ...dashboardData.sensors.latest_readings\n    };\n\n    // 更新仪表板数据中的传感器读数\n    Object.values(sensorData).forEach(sensor => {\n      if (!updatedReadings[sensor.type]) {\n        updatedReadings[sensor.type] = {\n          value: sensor.value,\n          unit: sensor.unit,\n          sensor_location: sensor.location,\n          timestamp: sensor.timestamp * 1000 // 转换为毫秒\n        };\n      } else {\n        // 只有当新数据的时间戳更晚时才更新\n        const currentTimestamp = updatedReadings[sensor.type].timestamp;\n        const newTimestamp = typeof sensor.timestamp === 'number' ? sensor.timestamp * 1000 : new Date(sensor.timestamp).getTime();\n        if (newTimestamp > currentTimestamp) {\n          updatedReadings[sensor.type] = {\n            value: sensor.value,\n            unit: sensor.unit,\n            sensor_location: sensor.location,\n            timestamp: newTimestamp\n          };\n        }\n      }\n    });\n\n    // 更新状态\n    setDashboardData(prev => ({\n      ...prev,\n      sensors: {\n        ...prev.sensors,\n        latest_readings: updatedReadings\n      }\n    }));\n  }, [sensorData, dashboardData]);\n\n  // 当收到新的执行器数据时，更新仪表板数据\n  useEffect(() => {\n    if (!dashboardData || Object.keys(actuatorData).length === 0) return;\n\n    // 制作执行器数据的深拷贝\n    const updatedActuatorStatuses = JSON.parse(JSON.stringify(dashboardData.actuators.statuses));\n    let actuatorStatusChanged = false;\n\n    // 更新执行器状态\n    Object.values(actuatorData).forEach(actuator => {\n      const actuatorType = actuator.type;\n      if (!updatedActuatorStatuses[actuatorType]) return;\n      const currentState = actuator.state.toUpperCase();\n      const prevOnCount = updatedActuatorStatuses[actuatorType].on;\n      const prevOffCount = updatedActuatorStatuses[actuatorType].off;\n\n      // 简化处理：如果收到执行器状态变更，我们只更新统计计数\n      // 在实际应用中，你可能需要跟踪每个执行器的ID并更新其特定状态\n      if (currentState === 'ON' && prevOffCount > 0) {\n        updatedActuatorStatuses[actuatorType].on += 1;\n        updatedActuatorStatuses[actuatorType].off -= 1;\n        actuatorStatusChanged = true;\n      } else if (currentState === 'OFF' && prevOnCount > 0) {\n        updatedActuatorStatuses[actuatorType].off += 1;\n        updatedActuatorStatuses[actuatorType].on -= 1;\n        actuatorStatusChanged = true;\n      }\n    });\n\n    // 只有当状态发生变化时才更新\n    if (actuatorStatusChanged) {\n      setDashboardData(prev => ({\n        ...prev,\n        actuators: {\n          ...prev.actuators,\n          statuses: updatedActuatorStatuses\n        }\n      }));\n    }\n  }, [actuatorData, dashboardData]);\n  const getSensorIcon = sensorType => {\n    switch (sensorType) {\n      case 'temperature':\n        return /*#__PURE__*/_jsxDEV(TemperatureIcon, {\n          color: \"error\",\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 16\n        }, this);\n      case 'humidity':\n        return /*#__PURE__*/_jsxDEV(HumidityIcon, {\n          color: \"primary\",\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 16\n        }, this);\n      case 'light':\n        return /*#__PURE__*/_jsxDEV(LightIcon, {\n          color: \"warning\",\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 16\n        }, this);\n      case 'soil_moisture':\n        return /*#__PURE__*/_jsxDEV(SoilIcon, {\n          color: \"success\",\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(SpeedIcon, {\n          color: \"info\",\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getActuatorIcon = actuatorType => {\n    switch (actuatorType) {\n      case 'irrigation':\n        return /*#__PURE__*/_jsxDEV(Opacity, {\n          color: \"primary\",\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 16\n        }, this);\n      case 'ventilation':\n        return /*#__PURE__*/_jsxDEV(Air, {\n          color: \"info\",\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 16\n        }, this);\n      case 'lighting':\n        return /*#__PURE__*/_jsxDEV(WbSunny, {\n          color: \"warning\",\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(PowerIcon, {\n          color: \"secondary\",\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n        p: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"error\",\n        gutterBottom: true,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: \"Welcome to your Smart Farm monitoring and control system. Here's an overview of your farm's current status.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Sensors Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: [dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.sensors.active, \" active sensors out of \", dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.sensors.total, \" total\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.sensors.latest_readings) && Object.entries(dashboardData.sensors.latest_readings).map(([type, data]) => {\n              var _SENSOR_TYPES$find;\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  variant: \"outlined\",\n                  children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        mb: 1\n                      },\n                      children: [getSensorIcon(type), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle1\",\n                        sx: {\n                          ml: 1\n                        },\n                        children: ((_SENSOR_TYPES$find = SENSOR_TYPES.find(s => s.id === type)) === null || _SENSOR_TYPES$find === void 0 ? void 0 : _SENSOR_TYPES$find.name) || type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h4\",\n                      component: \"div\",\n                      children: [data.value, \" \", data.unit]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      children: data.sensor_location\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"textSecondary\",\n                      children: [\"Last updated: \", new Date(data.timestamp).toLocaleTimeString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"small\",\n                      onClick: () => navigate('/sensors'),\n                      children: \"View All Sensors\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Actuators Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: [dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.actuators.active, \" active actuators out of \", dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.actuators.total, \" total\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              width: '100%'\n            },\n            children: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.actuators.statuses) && Object.entries(dashboardData.actuators.statuses).map(([type, data]) => {\n              var _ACTUATOR_TYPES$find;\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: getActuatorIcon(type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: ((_ACTUATOR_TYPES$find = ACTUATOR_TYPES.find(a => a.id === type)) === null || _ACTUATOR_TYPES$find === void 0 ? void 0 : _ACTUATOR_TYPES$find.name) || type,\n                  secondary: `${data.on} ON, ${data.off} OFF, ${data.error} ERROR`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Chip, {\n                    label: `${data.on} ON`,\n                    size: \"small\",\n                    color: \"success\",\n                    variant: \"outlined\",\n                    sx: {\n                      mr: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: `${data.off} OFF`,\n                    size: \"small\",\n                    color: \"default\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => navigate('/actuators'),\n              children: \"Manage Actuators\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Recent Alerts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(TemperatureIcon, {\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Temperature Alert\",\n                secondary: \"Greenhouse 1 temperature above threshold (30\\xB0C)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: \"10 min ago\",\n                size: \"small\",\n                color: \"error\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(SoilIcon, {\n                  color: \"warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Soil Moisture Alert\",\n                secondary: \"Field 2 soil moisture below threshold (15%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: \"25 min ago\",\n                size: \"small\",\n                color: \"warning\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(EcoIcon, {\n                  color: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"System Notification\",\n                secondary: \"Irrigation system in Zone 3 activated automatically\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: \"45 min ago\",\n                size: \"small\",\n                color: \"info\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              onClick: () => navigate('/alerts'),\n              children: \"View All Alerts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"fQRdgJLSxoECl8UVvH1Q2wtDrWQ=\", false, function () {\n  return [useNavigate, useSocket];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Grid","Typography","Paper","CircularProgress","Button","Divider","Card","CardContent","CardActions","List","ListItem","ListItemIcon","ListItemText","Chip","Thermostat","TemperatureIcon","Opacity","HumidityIcon","WbSunny","LightIcon","Terrain","SoilIcon","Power","PowerIcon","ForestOutlined","EcoIcon","Speed","SpeedIcon","Air","dashboardAPI","SENSOR_TYPES","ACTUATOR_TYPES","useNavigate","useSocket","jsxDEV","_jsxDEV","Dashboard","_s","navigate","dashboardData","setDashboardData","loading","setLoading","error","setError","sensorData","actuatorData","fetchDashboardData","response","getSummary","data","console","interval","setInterval","clearInterval","Object","keys","length","updatedReadings","sensors","latest_readings","values","forEach","sensor","type","value","unit","sensor_location","location","timestamp","currentTimestamp","newTimestamp","Date","getTime","prev","updatedActuatorStatuses","JSON","parse","stringify","actuators","statuses","actuatorStatusChanged","actuator","actuatorType","currentState","state","toUpperCase","prevOnCount","on","prevOffCount","off","getSensorIcon","sensorType","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","getActuatorIcon","sx","display","alignItems","justifyContent","height","p","children","flexDirection","variant","gutterBottom","onClick","window","reload","component","mb","container","spacing","item","xs","md","active","total","my","entries","map","_SENSOR_TYPES$find","sm","ml","find","s","id","name","toLocaleTimeString","size","width","_ACTUATOR_TYPES$find","primary","a","secondary","label","mr","mt","_c","$RefreshReg$"],"sources":["C:/Users/LIJIN/Desktop/webTest/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  CircularProgress,\r\n  Button,\r\n  Divider,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Chip,\r\n} from '@mui/material';\r\nimport {\r\n  Thermostat as TemperatureIcon,\r\n  Opacity as HumidityIcon,\r\n  WbSunny as LightIcon,\r\n  Terrain as SoilIcon,\r\n  Power as PowerIcon,\r\n  ForestOutlined as EcoIcon,\r\n  Speed as SpeedIcon,\r\n  Air,\r\n  Opacity,\r\n  WbSunny,\r\n} from '@mui/icons-material';\r\nimport { dashboardAPI } from '../services/api';\r\nimport { SENSOR_TYPES, ACTUATOR_TYPES } from '../config';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSocket } from '../contexts/SocketContext';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { sensorData, actuatorData } = useSocket();\r\n  \r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        const response = await dashboardAPI.getSummary();\r\n        setDashboardData(response.data.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching dashboard data:', error);\r\n        setError('Failed to load dashboard data. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchDashboardData();\r\n    \r\n    // Refresh data every 30 seconds (可以考虑移除这个轮询，因为我们已经有实时Socket数据)\r\n    const interval = setInterval(fetchDashboardData, 30000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  \r\n  // 当收到新的传感器数据时，更新仪表板数据\r\n  useEffect(() => {\r\n    if (!dashboardData || Object.keys(sensorData).length === 0) return;\r\n\r\n    const updatedReadings = { ...dashboardData.sensors.latest_readings };\r\n    \r\n    // 更新仪表板数据中的传感器读数\r\n    Object.values(sensorData).forEach(sensor => {\r\n      if (!updatedReadings[sensor.type]) {\r\n        updatedReadings[sensor.type] = {\r\n          value: sensor.value,\r\n          unit: sensor.unit,\r\n          sensor_location: sensor.location,\r\n          timestamp: sensor.timestamp * 1000 // 转换为毫秒\r\n        };\r\n      } else {\r\n        // 只有当新数据的时间戳更晚时才更新\r\n        const currentTimestamp = updatedReadings[sensor.type].timestamp;\r\n        const newTimestamp = typeof sensor.timestamp === 'number' ? sensor.timestamp * 1000 : new Date(sensor.timestamp).getTime();\r\n        \r\n        if (newTimestamp > currentTimestamp) {\r\n          updatedReadings[sensor.type] = {\r\n            value: sensor.value,\r\n            unit: sensor.unit,\r\n            sensor_location: sensor.location,\r\n            timestamp: newTimestamp\r\n          };\r\n        }\r\n      }\r\n    });\r\n    \r\n    // 更新状态\r\n    setDashboardData(prev => ({\r\n      ...prev,\r\n      sensors: {\r\n        ...prev.sensors,\r\n        latest_readings: updatedReadings\r\n      }\r\n    }));\r\n  }, [sensorData, dashboardData]);\r\n  \r\n  // 当收到新的执行器数据时，更新仪表板数据\r\n  useEffect(() => {\r\n    if (!dashboardData || Object.keys(actuatorData).length === 0) return;\r\n    \r\n    // 制作执行器数据的深拷贝\r\n    const updatedActuatorStatuses = JSON.parse(JSON.stringify(dashboardData.actuators.statuses));\r\n    let actuatorStatusChanged = false;\r\n    \r\n    // 更新执行器状态\r\n    Object.values(actuatorData).forEach(actuator => {\r\n      const actuatorType = actuator.type;\r\n      if (!updatedActuatorStatuses[actuatorType]) return;\r\n      \r\n      const currentState = actuator.state.toUpperCase();\r\n      const prevOnCount = updatedActuatorStatuses[actuatorType].on;\r\n      const prevOffCount = updatedActuatorStatuses[actuatorType].off;\r\n      \r\n      // 简化处理：如果收到执行器状态变更，我们只更新统计计数\r\n      // 在实际应用中，你可能需要跟踪每个执行器的ID并更新其特定状态\r\n      if (currentState === 'ON' && prevOffCount > 0) {\r\n        updatedActuatorStatuses[actuatorType].on += 1;\r\n        updatedActuatorStatuses[actuatorType].off -= 1;\r\n        actuatorStatusChanged = true;\r\n      } else if (currentState === 'OFF' && prevOnCount > 0) {\r\n        updatedActuatorStatuses[actuatorType].off += 1;\r\n        updatedActuatorStatuses[actuatorType].on -= 1;\r\n        actuatorStatusChanged = true;\r\n      }\r\n    });\r\n    \r\n    // 只有当状态发生变化时才更新\r\n    if (actuatorStatusChanged) {\r\n      setDashboardData(prev => ({\r\n        ...prev,\r\n        actuators: {\r\n          ...prev.actuators,\r\n          statuses: updatedActuatorStatuses\r\n        }\r\n      }));\r\n    }\r\n  }, [actuatorData, dashboardData]);\r\n  \r\n  const getSensorIcon = (sensorType) => {\r\n    switch (sensorType) {\r\n      case 'temperature':\r\n        return <TemperatureIcon color=\"error\" fontSize=\"large\" />;\r\n      case 'humidity':\r\n        return <HumidityIcon color=\"primary\" fontSize=\"large\" />;\r\n      case 'light':\r\n        return <LightIcon color=\"warning\" fontSize=\"large\" />;\r\n      case 'soil_moisture':\r\n        return <SoilIcon color=\"success\" fontSize=\"large\" />;\r\n      default:\r\n        return <SpeedIcon color=\"info\" fontSize=\"large\" />;\r\n    }\r\n  };\r\n  \r\n  const getActuatorIcon = (actuatorType) => {\r\n    switch (actuatorType) {\r\n      case 'irrigation':\r\n        return <Opacity color=\"primary\" fontSize=\"small\" />;\r\n      case 'ventilation':\r\n        return <Air color=\"info\" fontSize=\"small\" />;\r\n      case 'lighting':\r\n        return <WbSunny color=\"warning\" fontSize=\"small\" />;\r\n      default:\r\n        return <PowerIcon color=\"secondary\" fontSize=\"small\" />;\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          height: '100%',\r\n          p: 4,\r\n        }}\r\n      >\r\n        <CircularProgress color=\"primary\" />\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  if (error) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          height: '100%',\r\n          p: 4,\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" color=\"error\" gutterBottom>\r\n          {error}\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => window.location.reload()}\r\n        >\r\n          Retry\r\n        </Button>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Dashboard\r\n      </Typography>\r\n      \r\n      <Box sx={{ mb: 4 }}>\r\n        <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\r\n          Welcome to your Smart Farm monitoring and control system. Here's an overview of your farm's current status.\r\n        </Typography>\r\n      </Box>\r\n      \r\n      <Grid container spacing={3}>\r\n        {/* Sensors Overview */}\r\n        <Grid item xs={12} md={6}>\r\n          <Paper sx={{ p: 2, height: '100%' }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Sensors Overview\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" gutterBottom>\r\n              {dashboardData?.sensors.active} active sensors out of {dashboardData?.sensors.total} total\r\n            </Typography>\r\n            <Divider sx={{ my: 2 }} />\r\n            \r\n            <Grid container spacing={2}>\r\n              {dashboardData?.sensors.latest_readings && \r\n                Object.entries(dashboardData.sensors.latest_readings).map(([type, data]) => (\r\n                  <Grid item xs={12} sm={6} key={type}>\r\n                    <Card variant=\"outlined\">\r\n                      <CardContent>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                          {getSensorIcon(type)}\r\n                          <Typography variant=\"subtitle1\" sx={{ ml: 1 }}>\r\n                            {SENSOR_TYPES.find(s => s.id === type)?.name || type}\r\n                          </Typography>\r\n                        </Box>\r\n                        \r\n                        <Typography variant=\"h4\" component=\"div\">\r\n                          {data.value} {data.unit}\r\n                        </Typography>\r\n                        \r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          {data.sensor_location}\r\n                        </Typography>\r\n                        \r\n                        <Typography variant=\"caption\" color=\"textSecondary\">\r\n                          Last updated: {new Date(data.timestamp).toLocaleTimeString()}\r\n                        </Typography>\r\n                      </CardContent>\r\n                      <CardActions>\r\n                        <Button \r\n                          size=\"small\" \r\n                          onClick={() => navigate('/sensors')}\r\n                        >\r\n                          View All Sensors\r\n                        </Button>\r\n                      </CardActions>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        \r\n        {/* Actuators Overview */}\r\n        <Grid item xs={12} md={6}>\r\n          <Paper sx={{ p: 2, height: '100%' }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Actuators Overview\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" gutterBottom>\r\n              {dashboardData?.actuators.active} active actuators out of {dashboardData?.actuators.total} total\r\n            </Typography>\r\n            <Divider sx={{ my: 2 }} />\r\n            \r\n            <List sx={{ width: '100%' }}>\r\n              {dashboardData?.actuators.statuses && \r\n                Object.entries(dashboardData.actuators.statuses).map(([type, data]) => (\r\n                  <ListItem key={type}>\r\n                    <ListItemIcon>\r\n                      {getActuatorIcon(type)}\r\n                    </ListItemIcon>\r\n                    <ListItemText \r\n                      primary={ACTUATOR_TYPES.find(a => a.id === type)?.name || type}\r\n                      secondary={`${data.on} ON, ${data.off} OFF, ${data.error} ERROR`}\r\n                    />\r\n                    <Box>\r\n                      <Chip \r\n                        label={`${data.on} ON`} \r\n                        size=\"small\" \r\n                        color=\"success\" \r\n                        variant=\"outlined\"\r\n                        sx={{ mr: 1 }}\r\n                      />\r\n                      <Chip \r\n                        label={`${data.off} OFF`} \r\n                        size=\"small\" \r\n                        color=\"default\" \r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Box>\r\n                  </ListItem>\r\n                ))}\r\n            </List>\r\n            \r\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick={() => navigate('/actuators')}\r\n              >\r\n                Manage Actuators\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n        \r\n        {/* Recent Alerts */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Recent Alerts\r\n            </Typography>\r\n            <Divider sx={{ my: 2 }} />\r\n            \r\n            <List sx={{ width: '100%' }}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <TemperatureIcon color=\"error\" />\r\n                </ListItemIcon>\r\n                <ListItemText \r\n                  primary=\"Temperature Alert\"\r\n                  secondary=\"Greenhouse 1 temperature above threshold (30°C)\"\r\n                />\r\n                <Chip \r\n                  label=\"10 min ago\" \r\n                  size=\"small\" \r\n                  color=\"error\" \r\n                  variant=\"outlined\"\r\n                />\r\n              </ListItem>\r\n              \r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <SoilIcon color=\"warning\" />\r\n                </ListItemIcon>\r\n                <ListItemText \r\n                  primary=\"Soil Moisture Alert\"\r\n                  secondary=\"Field 2 soil moisture below threshold (15%)\"\r\n                />\r\n                <Chip \r\n                  label=\"25 min ago\" \r\n                  size=\"small\" \r\n                  color=\"warning\" \r\n                  variant=\"outlined\"\r\n                />\r\n              </ListItem>\r\n              \r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <EcoIcon color=\"success\" />\r\n                </ListItemIcon>\r\n                <ListItemText \r\n                  primary=\"System Notification\"\r\n                  secondary=\"Irrigation system in Zone 3 activated automatically\"\r\n                />\r\n                <Chip \r\n                  label=\"45 min ago\" \r\n                  size=\"small\" \r\n                  color=\"info\" \r\n                  variant=\"outlined\"\r\n                />\r\n              </ListItem>\r\n            </List>\r\n            \r\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n              <Button \r\n                variant=\"outlined\" \r\n                color=\"primary\"\r\n                onClick={() => navigate('/alerts')}\r\n              >\r\n                View All Alerts\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,IAAI,EACJC,UAAU,EACVC,KAAK,EACLC,gBAAgB,EAChBC,MAAM,EACNC,OAAO,EACPC,IAAI,EACJC,WAAW,EACXC,WAAW,EACXC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,YAAY,EACZC,IAAI,QACC,eAAe;AACtB,SACEC,UAAU,IAAIC,eAAe,EAC7BC,OAAO,IAAIC,YAAY,EACvBC,OAAO,IAAIC,SAAS,EACpBC,OAAO,IAAIC,QAAQ,EACnBC,KAAK,IAAIC,SAAS,EAClBC,cAAc,IAAIC,OAAO,EACzBC,KAAK,IAAIC,SAAS,EAClBC,GAAG,EACHZ,OAAO,EACPE,OAAO,QACF,qBAAqB;AAC5B,SAASW,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,EAAEC,cAAc,QAAQ,WAAW;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC4C,OAAO,EAAEC,UAAU,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC8C,KAAK,EAAEC,QAAQ,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEgD,UAAU;IAAEC;EAAa,CAAC,GAAGb,SAAS,CAAC,CAAC;EAEhDnC,SAAS,CAAC,MAAM;IACd,MAAMiD,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMnB,YAAY,CAACoB,UAAU,CAAC,CAAC;QAChDT,gBAAgB,CAACQ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;QACpCR,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdQ,OAAO,CAACR,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDC,QAAQ,CAAC,wDAAwD,CAAC;QAClEF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,kBAAkB,CAAC,CAAC;;IAEpB;IACA,MAAMK,QAAQ,GAAGC,WAAW,CAACN,kBAAkB,EAAE,KAAK,CAAC;IAEvD,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAtD,SAAS,CAAC,MAAM;IACd,IAAI,CAACyC,aAAa,IAAIgB,MAAM,CAACC,IAAI,CAACX,UAAU,CAAC,CAACY,MAAM,KAAK,CAAC,EAAE;IAE5D,MAAMC,eAAe,GAAG;MAAE,GAAGnB,aAAa,CAACoB,OAAO,CAACC;IAAgB,CAAC;;IAEpE;IACAL,MAAM,CAACM,MAAM,CAAChB,UAAU,CAAC,CAACiB,OAAO,CAACC,MAAM,IAAI;MAC1C,IAAI,CAACL,eAAe,CAACK,MAAM,CAACC,IAAI,CAAC,EAAE;QACjCN,eAAe,CAACK,MAAM,CAACC,IAAI,CAAC,GAAG;UAC7BC,KAAK,EAAEF,MAAM,CAACE,KAAK;UACnBC,IAAI,EAAEH,MAAM,CAACG,IAAI;UACjBC,eAAe,EAAEJ,MAAM,CAACK,QAAQ;UAChCC,SAAS,EAAEN,MAAM,CAACM,SAAS,GAAG,IAAI,CAAC;QACrC,CAAC;MACH,CAAC,MAAM;QACL;QACA,MAAMC,gBAAgB,GAAGZ,eAAe,CAACK,MAAM,CAACC,IAAI,CAAC,CAACK,SAAS;QAC/D,MAAME,YAAY,GAAG,OAAOR,MAAM,CAACM,SAAS,KAAK,QAAQ,GAAGN,MAAM,CAACM,SAAS,GAAG,IAAI,GAAG,IAAIG,IAAI,CAACT,MAAM,CAACM,SAAS,CAAC,CAACI,OAAO,CAAC,CAAC;QAE1H,IAAIF,YAAY,GAAGD,gBAAgB,EAAE;UACnCZ,eAAe,CAACK,MAAM,CAACC,IAAI,CAAC,GAAG;YAC7BC,KAAK,EAAEF,MAAM,CAACE,KAAK;YACnBC,IAAI,EAAEH,MAAM,CAACG,IAAI;YACjBC,eAAe,EAAEJ,MAAM,CAACK,QAAQ;YAChCC,SAAS,EAAEE;UACb,CAAC;QACH;MACF;IACF,CAAC,CAAC;;IAEF;IACA/B,gBAAgB,CAACkC,IAAI,KAAK;MACxB,GAAGA,IAAI;MACPf,OAAO,EAAE;QACP,GAAGe,IAAI,CAACf,OAAO;QACfC,eAAe,EAAEF;MACnB;IACF,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACb,UAAU,EAAEN,aAAa,CAAC,CAAC;;EAE/B;EACAzC,SAAS,CAAC,MAAM;IACd,IAAI,CAACyC,aAAa,IAAIgB,MAAM,CAACC,IAAI,CAACV,YAAY,CAAC,CAACW,MAAM,KAAK,CAAC,EAAE;;IAE9D;IACA,MAAMkB,uBAAuB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACvC,aAAa,CAACwC,SAAS,CAACC,QAAQ,CAAC,CAAC;IAC5F,IAAIC,qBAAqB,GAAG,KAAK;;IAEjC;IACA1B,MAAM,CAACM,MAAM,CAACf,YAAY,CAAC,CAACgB,OAAO,CAACoB,QAAQ,IAAI;MAC9C,MAAMC,YAAY,GAAGD,QAAQ,CAAClB,IAAI;MAClC,IAAI,CAACW,uBAAuB,CAACQ,YAAY,CAAC,EAAE;MAE5C,MAAMC,YAAY,GAAGF,QAAQ,CAACG,KAAK,CAACC,WAAW,CAAC,CAAC;MACjD,MAAMC,WAAW,GAAGZ,uBAAuB,CAACQ,YAAY,CAAC,CAACK,EAAE;MAC5D,MAAMC,YAAY,GAAGd,uBAAuB,CAACQ,YAAY,CAAC,CAACO,GAAG;;MAE9D;MACA;MACA,IAAIN,YAAY,KAAK,IAAI,IAAIK,YAAY,GAAG,CAAC,EAAE;QAC7Cd,uBAAuB,CAACQ,YAAY,CAAC,CAACK,EAAE,IAAI,CAAC;QAC7Cb,uBAAuB,CAACQ,YAAY,CAAC,CAACO,GAAG,IAAI,CAAC;QAC9CT,qBAAqB,GAAG,IAAI;MAC9B,CAAC,MAAM,IAAIG,YAAY,KAAK,KAAK,IAAIG,WAAW,GAAG,CAAC,EAAE;QACpDZ,uBAAuB,CAACQ,YAAY,CAAC,CAACO,GAAG,IAAI,CAAC;QAC9Cf,uBAAuB,CAACQ,YAAY,CAAC,CAACK,EAAE,IAAI,CAAC;QAC7CP,qBAAqB,GAAG,IAAI;MAC9B;IACF,CAAC,CAAC;;IAEF;IACA,IAAIA,qBAAqB,EAAE;MACzBzC,gBAAgB,CAACkC,IAAI,KAAK;QACxB,GAAGA,IAAI;QACPK,SAAS,EAAE;UACT,GAAGL,IAAI,CAACK,SAAS;UACjBC,QAAQ,EAAEL;QACZ;MACF,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAAC7B,YAAY,EAAEP,aAAa,CAAC,CAAC;EAEjC,MAAMoD,aAAa,GAAIC,UAAU,IAAK;IACpC,QAAQA,UAAU;MAChB,KAAK,aAAa;QAChB,oBAAOzD,OAAA,CAACpB,eAAe;UAAC8E,KAAK,EAAC,OAAO;UAACC,QAAQ,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC3D,KAAK,UAAU;QACb,oBAAO/D,OAAA,CAAClB,YAAY;UAAC4E,KAAK,EAAC,SAAS;UAACC,QAAQ,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC1D,KAAK,OAAO;QACV,oBAAO/D,OAAA,CAAChB,SAAS;UAAC0E,KAAK,EAAC,SAAS;UAACC,QAAQ,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACvD,KAAK,eAAe;QAClB,oBAAO/D,OAAA,CAACd,QAAQ;UAACwE,KAAK,EAAC,SAAS;UAACC,QAAQ,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACtD;QACE,oBAAO/D,OAAA,CAACR,SAAS;UAACkE,KAAK,EAAC,MAAM;UAACC,QAAQ,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IACtD;EACF,CAAC;EAED,MAAMC,eAAe,GAAIhB,YAAY,IAAK;IACxC,QAAQA,YAAY;MAClB,KAAK,YAAY;QACf,oBAAOhD,OAAA,CAACnB,OAAO;UAAC6E,KAAK,EAAC,SAAS;UAACC,QAAQ,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACrD,KAAK,aAAa;QAChB,oBAAO/D,OAAA,CAACP,GAAG;UAACiE,KAAK,EAAC,MAAM;UAACC,QAAQ,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC9C,KAAK,UAAU;QACb,oBAAO/D,OAAA,CAACjB,OAAO;UAAC2E,KAAK,EAAC,SAAS;UAACC,QAAQ,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACrD;QACE,oBAAO/D,OAAA,CAACZ,SAAS;UAACsE,KAAK,EAAC,WAAW;UAACC,QAAQ,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAC3D;EACF,CAAC;EAED,IAAIzD,OAAO,EAAE;IACX,oBACEN,OAAA,CAACpC,GAAG;MACFqG,EAAE,EAAE;QACFC,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,MAAM,EAAE,MAAM;QACdC,CAAC,EAAE;MACL,CAAE;MAAAC,QAAA,eAEFvE,OAAA,CAAChC,gBAAgB;QAAC0F,KAAK,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAEV;EAEA,IAAIvD,KAAK,EAAE;IACT,oBACER,OAAA,CAACpC,GAAG;MACFqG,EAAE,EAAE;QACFC,OAAO,EAAE,MAAM;QACfM,aAAa,EAAE,QAAQ;QACvBL,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,MAAM,EAAE,MAAM;QACdC,CAAC,EAAE;MACL,CAAE;MAAAC,QAAA,gBAEFvE,OAAA,CAAClC,UAAU;QAAC2G,OAAO,EAAC,IAAI;QAACf,KAAK,EAAC,OAAO;QAACgB,YAAY;QAAAH,QAAA,EAChD/D;MAAK;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACb/D,OAAA,CAAC/B,MAAM;QACLwG,OAAO,EAAC,WAAW;QACnBf,KAAK,EAAC,SAAS;QACfiB,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAAC3C,QAAQ,CAAC4C,MAAM,CAAC,CAAE;QAAAN,QAAA,EACzC;MAED;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,oBACE/D,OAAA,CAACpC,GAAG;IAAA2G,QAAA,gBACFvE,OAAA,CAAClC,UAAU;MAAC2G,OAAO,EAAC,IAAI;MAACK,SAAS,EAAC,IAAI;MAACJ,YAAY;MAAAH,QAAA,EAAC;IAErD;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEb/D,OAAA,CAACpC,GAAG;MAACqG,EAAE,EAAE;QAAEc,EAAE,EAAE;MAAE,CAAE;MAAAR,QAAA,eACjBvE,OAAA,CAAClC,UAAU;QAAC2G,OAAO,EAAC,WAAW;QAACf,KAAK,EAAC,eAAe;QAACgB,YAAY;QAAAH,QAAA,EAAC;MAEnE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAEN/D,OAAA,CAACnC,IAAI;MAACmH,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAV,QAAA,gBAEzBvE,OAAA,CAACnC,IAAI;QAACqH,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eACvBvE,OAAA,CAACjC,KAAK;UAACkG,EAAE,EAAE;YAAEK,CAAC,EAAE,CAAC;YAAED,MAAM,EAAE;UAAO,CAAE;UAAAE,QAAA,gBAClCvE,OAAA,CAAClC,UAAU;YAAC2G,OAAO,EAAC,IAAI;YAACC,YAAY;YAAAH,QAAA,EAAC;UAEtC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACb/D,OAAA,CAAClC,UAAU;YAAC2G,OAAO,EAAC,WAAW;YAACf,KAAK,EAAC,eAAe;YAACgB,YAAY;YAAAH,QAAA,GAC/DnE,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEoB,OAAO,CAAC6D,MAAM,EAAC,yBAAuB,EAACjF,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEoB,OAAO,CAAC8D,KAAK,EAAC,QACtF;UAAA;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACb/D,OAAA,CAAC9B,OAAO;YAAC+F,EAAE,EAAE;cAAEsB,EAAE,EAAE;YAAE;UAAE;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAE1B/D,OAAA,CAACnC,IAAI;YAACmH,SAAS;YAACC,OAAO,EAAE,CAAE;YAAAV,QAAA,EACxB,CAAAnE,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEoB,OAAO,CAACC,eAAe,KACrCL,MAAM,CAACoE,OAAO,CAACpF,aAAa,CAACoB,OAAO,CAACC,eAAe,CAAC,CAACgE,GAAG,CAAC,CAAC,CAAC5D,IAAI,EAAEd,IAAI,CAAC;cAAA,IAAA2E,kBAAA;cAAA,oBACrE1F,OAAA,CAACnC,IAAI;gBAACqH,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACQ,EAAE,EAAE,CAAE;gBAAApB,QAAA,eACvBvE,OAAA,CAAC7B,IAAI;kBAACsG,OAAO,EAAC,UAAU;kBAAAF,QAAA,gBACtBvE,OAAA,CAAC5B,WAAW;oBAAAmG,QAAA,gBACVvE,OAAA,CAACpC,GAAG;sBAACqG,EAAE,EAAE;wBAAEC,OAAO,EAAE,MAAM;wBAAEC,UAAU,EAAE,QAAQ;wBAAEY,EAAE,EAAE;sBAAE,CAAE;sBAAAR,QAAA,GACvDf,aAAa,CAAC3B,IAAI,CAAC,eACpB7B,OAAA,CAAClC,UAAU;wBAAC2G,OAAO,EAAC,WAAW;wBAACR,EAAE,EAAE;0BAAE2B,EAAE,EAAE;wBAAE,CAAE;wBAAArB,QAAA,EAC3C,EAAAmB,kBAAA,GAAA/F,YAAY,CAACkG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKlE,IAAI,CAAC,cAAA6D,kBAAA,uBAArCA,kBAAA,CAAuCM,IAAI,KAAInE;sBAAI;wBAAA+B,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC1C,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACV,CAAC,eAEN/D,OAAA,CAAClC,UAAU;sBAAC2G,OAAO,EAAC,IAAI;sBAACK,SAAS,EAAC,KAAK;sBAAAP,QAAA,GACrCxD,IAAI,CAACe,KAAK,EAAC,GAAC,EAACf,IAAI,CAACgB,IAAI;oBAAA;sBAAA6B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACb,CAAC,eAEb/D,OAAA,CAAClC,UAAU;sBAAC2G,OAAO,EAAC,OAAO;sBAACf,KAAK,EAAC,eAAe;sBAAAa,QAAA,EAC9CxD,IAAI,CAACiB;oBAAe;sBAAA4B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACX,CAAC,eAEb/D,OAAA,CAAClC,UAAU;sBAAC2G,OAAO,EAAC,SAAS;sBAACf,KAAK,EAAC,eAAe;sBAAAa,QAAA,GAAC,gBACpC,EAAC,IAAIlC,IAAI,CAACtB,IAAI,CAACmB,SAAS,CAAC,CAAC+D,kBAAkB,CAAC,CAAC;oBAAA;sBAAArC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAClD,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF,CAAC,eACd/D,OAAA,CAAC3B,WAAW;oBAAAkG,QAAA,eACVvE,OAAA,CAAC/B,MAAM;sBACLiI,IAAI,EAAC,OAAO;sBACZvB,OAAO,EAAEA,CAAA,KAAMxE,QAAQ,CAAC,UAAU,CAAE;sBAAAoE,QAAA,EACrC;oBAED;sBAAAX,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC,GA9BsBlC,IAAI;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA+B7B,CAAC;YAAA,CACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGP/D,OAAA,CAACnC,IAAI;QAACqH,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eACvBvE,OAAA,CAACjC,KAAK;UAACkG,EAAE,EAAE;YAAEK,CAAC,EAAE,CAAC;YAAED,MAAM,EAAE;UAAO,CAAE;UAAAE,QAAA,gBAClCvE,OAAA,CAAClC,UAAU;YAAC2G,OAAO,EAAC,IAAI;YAACC,YAAY;YAAAH,QAAA,EAAC;UAEtC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACb/D,OAAA,CAAClC,UAAU;YAAC2G,OAAO,EAAC,WAAW;YAACf,KAAK,EAAC,eAAe;YAACgB,YAAY;YAAAH,QAAA,GAC/DnE,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEwC,SAAS,CAACyC,MAAM,EAAC,2BAAyB,EAACjF,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEwC,SAAS,CAAC0C,KAAK,EAAC,QAC5F;UAAA;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACb/D,OAAA,CAAC9B,OAAO;YAAC+F,EAAE,EAAE;cAAEsB,EAAE,EAAE;YAAE;UAAE;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAE1B/D,OAAA,CAAC1B,IAAI;YAAC2F,EAAE,EAAE;cAAEkC,KAAK,EAAE;YAAO,CAAE;YAAA5B,QAAA,EACzB,CAAAnE,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEwC,SAAS,CAACC,QAAQ,KAChCzB,MAAM,CAACoE,OAAO,CAACpF,aAAa,CAACwC,SAAS,CAACC,QAAQ,CAAC,CAAC4C,GAAG,CAAC,CAAC,CAAC5D,IAAI,EAAEd,IAAI,CAAC;cAAA,IAAAqF,oBAAA;cAAA,oBAChEpG,OAAA,CAACzB,QAAQ;gBAAAgG,QAAA,gBACPvE,OAAA,CAACxB,YAAY;kBAAA+F,QAAA,EACVP,eAAe,CAACnC,IAAI;gBAAC;kBAAA+B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC,eACf/D,OAAA,CAACvB,YAAY;kBACX4H,OAAO,EAAE,EAAAD,oBAAA,GAAAxG,cAAc,CAACiG,IAAI,CAACS,CAAC,IAAIA,CAAC,CAACP,EAAE,KAAKlE,IAAI,CAAC,cAAAuE,oBAAA,uBAAvCA,oBAAA,CAAyCJ,IAAI,KAAInE,IAAK;kBAC/D0E,SAAS,EAAE,GAAGxF,IAAI,CAACsC,EAAE,QAAQtC,IAAI,CAACwC,GAAG,SAASxC,IAAI,CAACP,KAAK;gBAAS;kBAAAoD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClE,CAAC,eACF/D,OAAA,CAACpC,GAAG;kBAAA2G,QAAA,gBACFvE,OAAA,CAACtB,IAAI;oBACH8H,KAAK,EAAE,GAAGzF,IAAI,CAACsC,EAAE,KAAM;oBACvB6C,IAAI,EAAC,OAAO;oBACZxC,KAAK,EAAC,SAAS;oBACfe,OAAO,EAAC,UAAU;oBAClBR,EAAE,EAAE;sBAAEwC,EAAE,EAAE;oBAAE;kBAAE;oBAAA7C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACf,CAAC,eACF/D,OAAA,CAACtB,IAAI;oBACH8H,KAAK,EAAE,GAAGzF,IAAI,CAACwC,GAAG,MAAO;oBACzB2C,IAAI,EAAC,OAAO;oBACZxC,KAAK,EAAC,SAAS;oBACfe,OAAO,EAAC;kBAAU;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA,GAtBOlC,IAAI;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAuBT,CAAC;YAAA,CACZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eAEP/D,OAAA,CAACpC,GAAG;YAACqG,EAAE,EAAE;cAAEyC,EAAE,EAAE,CAAC;cAAExC,OAAO,EAAE,MAAM;cAAEE,cAAc,EAAE;YAAW,CAAE;YAAAG,QAAA,eAC9DvE,OAAA,CAAC/B,MAAM;cACLwG,OAAO,EAAC,WAAW;cACnBf,KAAK,EAAC,SAAS;cACfiB,OAAO,EAAEA,CAAA,KAAMxE,QAAQ,CAAC,YAAY,CAAE;cAAAoE,QAAA,EACvC;YAED;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGP/D,OAAA,CAACnC,IAAI;QAACqH,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAZ,QAAA,eAChBvE,OAAA,CAACjC,KAAK;UAACkG,EAAE,EAAE;YAAEK,CAAC,EAAE;UAAE,CAAE;UAAAC,QAAA,gBAClBvE,OAAA,CAAClC,UAAU;YAAC2G,OAAO,EAAC,IAAI;YAACC,YAAY;YAAAH,QAAA,EAAC;UAEtC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACb/D,OAAA,CAAC9B,OAAO;YAAC+F,EAAE,EAAE;cAAEsB,EAAE,EAAE;YAAE;UAAE;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAE1B/D,OAAA,CAAC1B,IAAI;YAAC2F,EAAE,EAAE;cAAEkC,KAAK,EAAE;YAAO,CAAE;YAAA5B,QAAA,gBAC1BvE,OAAA,CAACzB,QAAQ;cAAAgG,QAAA,gBACPvE,OAAA,CAACxB,YAAY;gBAAA+F,QAAA,eACXvE,OAAA,CAACpB,eAAe;kBAAC8E,KAAK,EAAC;gBAAO;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrB,CAAC,eACf/D,OAAA,CAACvB,YAAY;gBACX4H,OAAO,EAAC,mBAAmB;gBAC3BE,SAAS,EAAC;cAAiD;gBAAA3C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5D,CAAC,eACF/D,OAAA,CAACtB,IAAI;gBACH8H,KAAK,EAAC,YAAY;gBAClBN,IAAI,EAAC,OAAO;gBACZxC,KAAK,EAAC,OAAO;gBACbe,OAAO,EAAC;cAAU;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC,eAEX/D,OAAA,CAACzB,QAAQ;cAAAgG,QAAA,gBACPvE,OAAA,CAACxB,YAAY;gBAAA+F,QAAA,eACXvE,OAAA,CAACd,QAAQ;kBAACwE,KAAK,EAAC;gBAAS;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACf/D,OAAA,CAACvB,YAAY;gBACX4H,OAAO,EAAC,qBAAqB;gBAC7BE,SAAS,EAAC;cAA6C;gBAAA3C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxD,CAAC,eACF/D,OAAA,CAACtB,IAAI;gBACH8H,KAAK,EAAC,YAAY;gBAClBN,IAAI,EAAC,OAAO;gBACZxC,KAAK,EAAC,SAAS;gBACfe,OAAO,EAAC;cAAU;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC,eAEX/D,OAAA,CAACzB,QAAQ;cAAAgG,QAAA,gBACPvE,OAAA,CAACxB,YAAY;gBAAA+F,QAAA,eACXvE,OAAA,CAACV,OAAO;kBAACoE,KAAK,EAAC;gBAAS;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACf,CAAC,eACf/D,OAAA,CAACvB,YAAY;gBACX4H,OAAO,EAAC,qBAAqB;gBAC7BE,SAAS,EAAC;cAAqD;gBAAA3C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChE,CAAC,eACF/D,OAAA,CAACtB,IAAI;gBACH8H,KAAK,EAAC,YAAY;gBAClBN,IAAI,EAAC,OAAO;gBACZxC,KAAK,EAAC,MAAM;gBACZe,OAAO,EAAC;cAAU;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eAEP/D,OAAA,CAACpC,GAAG;YAACqG,EAAE,EAAE;cAAEyC,EAAE,EAAE,CAAC;cAAExC,OAAO,EAAE,MAAM;cAAEE,cAAc,EAAE;YAAW,CAAE;YAAAG,QAAA,eAC9DvE,OAAA,CAAC/B,MAAM;cACLwG,OAAO,EAAC,UAAU;cAClBf,KAAK,EAAC,SAAS;cACfiB,OAAO,EAAEA,CAAA,KAAMxE,QAAQ,CAAC,SAAS,CAAE;cAAAoE,QAAA,EACpC;YAED;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC7D,EAAA,CAlXID,SAAS;EAAA,QACIJ,WAAW,EAISC,SAAS;AAAA;AAAA6G,EAAA,GAL1C1G,SAAS;AAoXf,eAAeA,SAAS;AAAC,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
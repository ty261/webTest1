{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getExtremumY = exports.getExtremumX = void 0;\nconst getExtremumX = params => {\n  const {\n    axis\n  } = params;\n  const minX = Math.min(...(axis.data ?? []));\n  const maxX = Math.max(...(axis.data ?? []));\n  return [minX, maxX];\n};\nexports.getExtremumX = getExtremumX;\nfunction getSeriesExtremums(getValues, data, stackedData, filter) {\n  return stackedData.reduce((seriesAcc, stackedValue, index) => {\n    if (data[index] === null) {\n      return seriesAcc;\n    }\n    const [base, value] = getValues(stackedValue);\n    if (filter && (!filter({\n      y: base,\n      x: null\n    }, index) || !filter({\n      y: value,\n      x: null\n    }, index))) {\n      return seriesAcc;\n    }\n    return [Math.min(base, value, seriesAcc[0]), Math.max(base, value, seriesAcc[1])];\n  }, [Infinity, -Infinity]);\n}\nconst getExtremumY = params => {\n  const {\n    series,\n    axis,\n    isDefaultAxis,\n    getFilters\n  } = params;\n  return Object.keys(series).filter(seriesId => {\n    const yAxisId = series[seriesId].yAxisId;\n    return yAxisId === axis.id || isDefaultAxis && yAxisId === undefined;\n  }).reduce((acc, seriesId) => {\n    const {\n      area,\n      stackedData,\n      data\n    } = series[seriesId];\n    const isArea = area !== undefined;\n    const filter = getFilters?.({\n      currentAxisId: axis.id,\n      isDefaultAxis,\n      seriesXAxisId: series[seriesId].xAxisId,\n      seriesYAxisId: series[seriesId].yAxisId\n    });\n\n    // Since this series is not used to display an area, we do not consider the base (the d[0]).\n    const getValues = isArea && axis.scaleType !== 'log' && typeof series[seriesId].baseline !== 'string' ? d => d : d => [d[1], d[1]];\n    const seriesExtremums = getSeriesExtremums(getValues, data, stackedData, filter);\n    const [seriesMin, seriesMax] = seriesExtremums;\n    return [Math.min(seriesMin, acc[0]), Math.max(seriesMax, acc[1])];\n  }, [Infinity, -Infinity]);\n};\nexports.getExtremumY = getExtremumY;","map":{"version":3,"names":["Object","defineProperty","exports","value","getExtremumY","getExtremumX","params","axis","minX","Math","min","data","maxX","max","getSeriesExtremums","getValues","stackedData","filter","reduce","seriesAcc","stackedValue","index","base","y","x","Infinity","series","isDefaultAxis","getFilters","keys","seriesId","yAxisId","id","undefined","acc","area","isArea","currentAxisId","seriesXAxisId","xAxisId","seriesYAxisId","scaleType","baseline","d","seriesExtremums","seriesMin","seriesMax"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/node_modules/@mui/x-charts/LineChart/seriesConfig/extremums.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getExtremumY = exports.getExtremumX = void 0;\nconst getExtremumX = params => {\n  const {\n    axis\n  } = params;\n  const minX = Math.min(...(axis.data ?? []));\n  const maxX = Math.max(...(axis.data ?? []));\n  return [minX, maxX];\n};\nexports.getExtremumX = getExtremumX;\nfunction getSeriesExtremums(getValues, data, stackedData, filter) {\n  return stackedData.reduce((seriesAcc, stackedValue, index) => {\n    if (data[index] === null) {\n      return seriesAcc;\n    }\n    const [base, value] = getValues(stackedValue);\n    if (filter && (!filter({\n      y: base,\n      x: null\n    }, index) || !filter({\n      y: value,\n      x: null\n    }, index))) {\n      return seriesAcc;\n    }\n    return [Math.min(base, value, seriesAcc[0]), Math.max(base, value, seriesAcc[1])];\n  }, [Infinity, -Infinity]);\n}\nconst getExtremumY = params => {\n  const {\n    series,\n    axis,\n    isDefaultAxis,\n    getFilters\n  } = params;\n  return Object.keys(series).filter(seriesId => {\n    const yAxisId = series[seriesId].yAxisId;\n    return yAxisId === axis.id || isDefaultAxis && yAxisId === undefined;\n  }).reduce((acc, seriesId) => {\n    const {\n      area,\n      stackedData,\n      data\n    } = series[seriesId];\n    const isArea = area !== undefined;\n    const filter = getFilters?.({\n      currentAxisId: axis.id,\n      isDefaultAxis,\n      seriesXAxisId: series[seriesId].xAxisId,\n      seriesYAxisId: series[seriesId].yAxisId\n    });\n\n    // Since this series is not used to display an area, we do not consider the base (the d[0]).\n    const getValues = isArea && axis.scaleType !== 'log' && typeof series[seriesId].baseline !== 'string' ? d => d : d => [d[1], d[1]];\n    const seriesExtremums = getSeriesExtremums(getValues, data, stackedData, filter);\n    const [seriesMin, seriesMax] = seriesExtremums;\n    return [Math.min(seriesMin, acc[0]), Math.max(seriesMax, acc[1])];\n  }, [Infinity, -Infinity]);\n};\nexports.getExtremumY = getExtremumY;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
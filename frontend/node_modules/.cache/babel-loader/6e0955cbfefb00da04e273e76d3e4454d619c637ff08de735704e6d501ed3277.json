{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\\\u684C\\u9762\\\\webTest\\\\frontend\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useMemo } from 'react';\nimport { createTheme, ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// Theme configuration\nconst lightTheme = {\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#2e7d32' // Green, representing agriculture\n    },\n    secondary: {\n      main: '#0288d1' // Blue, representing water resources\n    },\n    background: {\n      default: '#f5f5f5',\n      paper: '#ffffff'\n    }\n  }\n};\nconst darkTheme = {\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#4caf50' // Lighter green\n    },\n    secondary: {\n      main: '#29b6f6' // Lighter blue\n    },\n    background: {\n      default: '#121212',\n      paper: '#1e1e1e'\n    }\n  }\n};\n\n// Theme provider component\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Get theme mode from localStorage, default is light\n  const [mode, setMode] = useState(localStorage.getItem('themeMode') || 'light');\n\n  // Toggle theme function\n  const toggleTheme = () => {\n    const newMode = mode === 'light' ? 'dark' : 'light';\n    setMode(newMode);\n    localStorage.setItem('themeMode', newMode);\n  };\n\n  // Create theme based on mode\n  const theme = useMemo(() => createTheme(mode === 'light' ? lightTheme : darkTheme), [mode]);\n\n  // Context value\n  const value = {\n    mode,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: theme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use theme context\n_s(ThemeProvider, \"PnKhGmNN+YmSrwvqd1mpvUSF9cQ=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useMemo","createTheme","ThemeProvider","MuiThemeProvider","jsxDEV","_jsxDEV","ThemeContext","lightTheme","palette","mode","primary","main","secondary","background","default","paper","darkTheme","children","_s","setMode","localStorage","getItem","toggleTheme","newMode","setItem","theme","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/桌面/webTest/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useMemo } from 'react';\r\nimport { createTheme, ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\r\n\r\n// Create context\r\nconst ThemeContext = createContext();\r\n\r\n// Theme configuration\r\nconst lightTheme = {\r\n  palette: {\r\n    mode: 'light',\r\n    primary: {\r\n      main: '#2e7d32', // Green, representing agriculture\r\n    },\r\n    secondary: {\r\n      main: '#0288d1', // Blue, representing water resources\r\n    },\r\n    background: {\r\n      default: '#f5f5f5',\r\n      paper: '#ffffff',\r\n    },\r\n  },\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#4caf50', // Lighter green\r\n    },\r\n    secondary: {\r\n      main: '#29b6f6', // Lighter blue\r\n    },\r\n    background: {\r\n      default: '#121212',\r\n      paper: '#1e1e1e',\r\n    },\r\n  },\r\n};\r\n\r\n// Theme provider component\r\nexport const ThemeProvider = ({ children }) => {\r\n  // Get theme mode from localStorage, default is light\r\n  const [mode, setMode] = useState(localStorage.getItem('themeMode') || 'light');\r\n  \r\n  // Toggle theme function\r\n  const toggleTheme = () => {\r\n    const newMode = mode === 'light' ? 'dark' : 'light';\r\n    setMode(newMode);\r\n    localStorage.setItem('themeMode', newMode);\r\n  };\r\n  \r\n  // Create theme based on mode\r\n  const theme = useMemo(\r\n    () => createTheme(mode === 'light' ? lightTheme : darkTheme),\r\n    [mode]\r\n  );\r\n  \r\n  // Context value\r\n  const value = {\r\n    mode,\r\n    toggleTheme,\r\n  };\r\n  \r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      <MuiThemeProvider theme={theme}>\r\n        {children}\r\n      </MuiThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use theme context\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default ThemeProvider; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3E,SAASC,WAAW,EAAEC,aAAa,IAAIC,gBAAgB,QAAQ,sBAAsB;;AAErF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGT,aAAa,CAAC,CAAC;;AAEpC;AACA,MAAMU,UAAU,GAAG;EACjBC,OAAO,EAAE;IACPC,IAAI,EAAE,OAAO;IACbC,OAAO,EAAE;MACPC,IAAI,EAAE,SAAS,CAAE;IACnB,CAAC;IACDC,SAAS,EAAE;MACTD,IAAI,EAAE,SAAS,CAAE;IACnB,CAAC;IACDE,UAAU,EAAE;MACVC,OAAO,EAAE,SAAS;MAClBC,KAAK,EAAE;IACT;EACF;AACF,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBR,OAAO,EAAE;IACPC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;MACPC,IAAI,EAAE,SAAS,CAAE;IACnB,CAAC;IACDC,SAAS,EAAE;MACTD,IAAI,EAAE,SAAS,CAAE;IACnB,CAAC;IACDE,UAAU,EAAE;MACVC,OAAO,EAAE,SAAS;MAClBC,KAAK,EAAE;IACT;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMb,aAAa,GAAGA,CAAC;EAAEe;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAM,CAACT,IAAI,EAAEU,OAAO,CAAC,GAAGrB,QAAQ,CAACsB,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC;;EAE9E;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAGd,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACnDU,OAAO,CAACI,OAAO,CAAC;IAChBH,YAAY,CAACI,OAAO,CAAC,WAAW,EAAED,OAAO,CAAC;EAC5C,CAAC;;EAED;EACA,MAAME,KAAK,GAAGzB,OAAO,CACnB,MAAMC,WAAW,CAACQ,IAAI,KAAK,OAAO,GAAGF,UAAU,GAAGS,SAAS,CAAC,EAC5D,CAACP,IAAI,CACP,CAAC;;EAED;EACA,MAAMiB,KAAK,GAAG;IACZjB,IAAI;IACJa;EACF,CAAC;EAED,oBACEjB,OAAA,CAACC,YAAY,CAACqB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAT,QAAA,eAClCZ,OAAA,CAACF,gBAAgB;MAACsB,KAAK,EAAEA,KAAM;MAAAR,QAAA,EAC5BA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAE5B,CAAC;;AAED;AAAAb,EAAA,CAhCahB,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AAiC1B,OAAO,MAAM+B,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGpC,UAAU,CAACO,YAAY,CAAC;EAExC,IAAI,CAAC6B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EAEA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CARWD,QAAQ;AAUrB,eAAe/B,aAAa;AAAC,IAAA8B,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.epsilon = void 0;\nexports.estimate = estimate;\nexports.negate = negate;\nexports.resulterrbound = void 0;\nexports.scale = scale;\nexports.splitter = void 0;\nexports.sum = sum;\nexports.sum_three = sum_three;\nexports.vec = vec;\nconst epsilon = exports.epsilon = 1.1102230246251565e-16;\nconst splitter = exports.splitter = 134217729;\nconst resulterrbound = exports.resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nfunction sum(elen, e, flen, f, h) {\n  let Q, Qnew, hh, bvirt;\n  let enow = e[0];\n  let fnow = f[0];\n  let eindex = 0;\n  let findex = 0;\n  if (fnow > enow === fnow > -enow) {\n    Q = enow;\n    enow = e[++eindex];\n  } else {\n    Q = fnow;\n    fnow = f[++findex];\n  }\n  let hindex = 0;\n  if (eindex < elen && findex < flen) {\n    if (fnow > enow === fnow > -enow) {\n      Qnew = enow + Q;\n      hh = Q - (Qnew - enow);\n      enow = e[++eindex];\n    } else {\n      Qnew = fnow + Q;\n      hh = Q - (Qnew - fnow);\n      fnow = f[++findex];\n    }\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n    while (eindex < elen && findex < flen) {\n      if (fnow > enow === fnow > -enow) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n      } else {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n      }\n      Q = Qnew;\n      if (hh !== 0) {\n        h[hindex++] = hh;\n      }\n    }\n  }\n  while (eindex < elen) {\n    Qnew = Q + enow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (enow - bvirt);\n    enow = e[++eindex];\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  while (findex < flen) {\n    Qnew = Q + fnow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n    fnow = f[++findex];\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n  return hindex;\n}\nfunction sum_three(alen, a, blen, b, clen, c, tmp, out) {\n  return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nfunction scale(elen, e, b, h) {\n  let Q, sum, hh, product1, product0;\n  let bvirt, c, ahi, alo, bhi, blo;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  let enow = e[0];\n  Q = enow * b;\n  c = splitter * enow;\n  ahi = c - (c - enow);\n  alo = enow - ahi;\n  hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n  let hindex = 0;\n  if (hh !== 0) {\n    h[hindex++] = hh;\n  }\n  for (let i = 1; i < elen; i++) {\n    enow = e[i];\n    product1 = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n    sum = Q + product0;\n    bvirt = sum - Q;\n    hh = Q - (sum - bvirt) + (product0 - bvirt);\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n    Q = product1 + sum;\n    hh = sum - (Q - product1);\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n  return hindex;\n}\nfunction negate(elen, e) {\n  for (let i = 0; i < elen; i++) e[i] = -e[i];\n  return elen;\n}\nfunction estimate(elen, e) {\n  let Q = e[0];\n  for (let i = 1; i < elen; i++) Q += e[i];\n  return Q;\n}\nfunction vec(n) {\n  return new Float64Array(n);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","epsilon","estimate","negate","resulterrbound","scale","splitter","sum","sum_three","vec","elen","e","flen","f","h","Q","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","alen","a","blen","b","clen","c","tmp","out","product1","product0","ahi","alo","bhi","blo","i","n","Float64Array"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/node_modules/@mui/x-charts-vendor/lib-vendor/robust-predicates/esm/util.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.epsilon = void 0;\nexports.estimate = estimate;\nexports.negate = negate;\nexports.resulterrbound = void 0;\nexports.scale = scale;\nexports.splitter = void 0;\nexports.sum = sum;\nexports.sum_three = sum_three;\nexports.vec = vec;\nconst epsilon = exports.epsilon = 1.1102230246251565e-16;\nconst splitter = exports.splitter = 134217729;\nconst resulterrbound = exports.resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nfunction sum(elen, e, flen, f, h) {\n  let Q, Qnew, hh, bvirt;\n  let enow = e[0];\n  let fnow = f[0];\n  let eindex = 0;\n  let findex = 0;\n  if (fnow > enow === fnow > -enow) {\n    Q = enow;\n    enow = e[++eindex];\n  } else {\n    Q = fnow;\n    fnow = f[++findex];\n  }\n  let hindex = 0;\n  if (eindex < elen && findex < flen) {\n    if (fnow > enow === fnow > -enow) {\n      Qnew = enow + Q;\n      hh = Q - (Qnew - enow);\n      enow = e[++eindex];\n    } else {\n      Qnew = fnow + Q;\n      hh = Q - (Qnew - fnow);\n      fnow = f[++findex];\n    }\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n    while (eindex < elen && findex < flen) {\n      if (fnow > enow === fnow > -enow) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n      } else {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n      }\n      Q = Qnew;\n      if (hh !== 0) {\n        h[hindex++] = hh;\n      }\n    }\n  }\n  while (eindex < elen) {\n    Qnew = Q + enow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (enow - bvirt);\n    enow = e[++eindex];\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  while (findex < flen) {\n    Qnew = Q + fnow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n    fnow = f[++findex];\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n  return hindex;\n}\nfunction sum_three(alen, a, blen, b, clen, c, tmp, out) {\n  return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nfunction scale(elen, e, b, h) {\n  let Q, sum, hh, product1, product0;\n  let bvirt, c, ahi, alo, bhi, blo;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  let enow = e[0];\n  Q = enow * b;\n  c = splitter * enow;\n  ahi = c - (c - enow);\n  alo = enow - ahi;\n  hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n  let hindex = 0;\n  if (hh !== 0) {\n    h[hindex++] = hh;\n  }\n  for (let i = 1; i < elen; i++) {\n    enow = e[i];\n    product1 = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n    sum = Q + product0;\n    bvirt = sum - Q;\n    hh = Q - (sum - bvirt) + (product0 - bvirt);\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n    Q = product1 + sum;\n    hh = sum - (Q - product1);\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n  return hindex;\n}\nfunction negate(elen, e) {\n  for (let i = 0; i < elen; i++) e[i] = -e[i];\n  return elen;\n}\nfunction estimate(elen, e) {\n  let Q = e[0];\n  for (let i = 1; i < elen; i++) Q += e[i];\n  return Q;\n}\nfunction vec(n) {\n  return new Float64Array(n);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
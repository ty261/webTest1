{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIJIN\\\\Desktop\\\\webTest\\\\frontend\\\\src\\\\pages\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Typography, Paper, Grid, Button, TextField, FormControl, InputLabel, Select, MenuItem, Switch, FormControlLabel, Tab, Tabs, Divider, CircularProgress, Alert, Card, CardContent, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@mui/material';\nimport { Save as SaveIcon, Delete as DeleteIcon, Settings as SettingsIcon, Language as LanguageIcon, Notifications as NotificationIcon, DataUsage as DataUsageIcon, Security as SecurityIcon, CloudUpload as CloudUploadIcon, WifiTethering as WifiIcon } from '@mui/icons-material';\nimport { settingsAPI } from '../services/api';\nimport PropTypes from 'prop-types';\n\n// Mock system settings data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockSettings = {\n  general: {\n    farm_name: 'Smart Farm Demo System',\n    language: 'en_US',\n    time_zone: 'Asia/Shanghai',\n    auto_update: true,\n    units: {\n      temperature: 'celsius',\n      weight: 'kg',\n      distance: 'm'\n    }\n  },\n  data_management: {\n    data_retention_days: 90,\n    backup_enabled: true,\n    backup_frequency: 'daily',\n    backup_time: '02:00',\n    auto_delete_old_data: true\n  },\n  network: {\n    api_url: 'http://localhost:5000/api',\n    mqtt_broker: 'mqtt://localhost:1883',\n    mqtt_username: 'farm_user',\n    mqtt_client_id: 'farm_web_client',\n    connection_timeout: 30\n  },\n  notification: {\n    enable_email: true,\n    email_server: 'smtp.example.com',\n    email_port: 587,\n    email_username: 'notifications@example.com',\n    admin_email: 'admin@example.com',\n    enable_sms: false,\n    sms_api_key: ''\n  },\n  security: {\n    session_timeout: 30,\n    two_factor_auth: false,\n    user_activity_log: true,\n    login_limit: true,\n    max_login_attempts: 5\n  }\n};\n\n// TabPanel component\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `settings-tabpanel-${index}`,\n    \"aria-labelledby\": `settings-tab-${index}`,\n    ...other,\n    style: {\n      height: '100%'\n    },\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        height: '100%',\n        overflow: 'auto'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\nconst Settings = () => {\n  _s();\n  // State management\n  const [settings, setSettings] = useState(mockSettings);\n  const [editedSettings, setEditedSettings] = useState(mockSettings);\n  const [tabValue, setTabValue] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  // Load settings\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        // In actual project, call API\n        // const response = await settingsAPI.getAll();\n        // setSettings(response.data.data);\n\n        // Use mock data\n        setSettings(mockSettings);\n        setEditedSettings(mockSettings);\n      } catch (err) {\n        console.error('Failed to get system settings:', err);\n        setError('Failed to load settings, please try again later');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSettings();\n  }, []);\n\n  // Handle tab change\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  // Update settings\n  const handleSaveSettings = async () => {\n    setSaving(true);\n    setError(null);\n    try {\n      // In actual project, call API\n      // await settingsAPI.update(editedSettings);\n\n      // Update local state\n      setSettings(editedSettings);\n      setSuccess('Settings saved successfully');\n\n      // Clear success message after 5 seconds\n      setTimeout(() => {\n        setSuccess(null);\n      }, 5000);\n    } catch (err) {\n      console.error('Failed to save system settings:', err);\n      setError('Save failed, please try again later');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // Handle form data changes\n  const handleGeneralChange = (field, value) => {\n    setEditedSettings({\n      ...editedSettings,\n      general: {\n        ...editedSettings.general,\n        [field]: value\n      }\n    });\n  };\n  const handleUnitsChange = (field, value) => {\n    setEditedSettings({\n      ...editedSettings,\n      general: {\n        ...editedSettings.general,\n        units: {\n          ...editedSettings.general.units,\n          [field]: value\n        }\n      }\n    });\n  };\n  const handleDataChange = (field, value) => {\n    setEditedSettings({\n      ...editedSettings,\n      data_management: {\n        ...editedSettings.data_management,\n        [field]: value\n      }\n    });\n  };\n  const handleNetworkChange = (field, value) => {\n    setEditedSettings({\n      ...editedSettings,\n      network: {\n        ...editedSettings.network,\n        [field]: value\n      }\n    });\n  };\n  const handleNotificationChange = (field, value) => {\n    setEditedSettings({\n      ...editedSettings,\n      notification: {\n        ...editedSettings.notification,\n        [field]: value\n      }\n    });\n  };\n  const handleSecurityChange = (field, value) => {\n    setEditedSettings({\n      ...editedSettings,\n      security: {\n        ...editedSettings.security,\n        [field]: value\n      }\n    });\n  };\n\n  // Reset to default settings\n  const handleResetSettings = () => {\n    setEditedSettings(settings);\n  };\n\n  // Render general settings tab\n  const renderGeneralSettings = () => {\n    var _editedSettings$gener, _editedSettings$gener2, _editedSettings$gener3, _editedSettings$gener4, _editedSettings$gener5, _editedSettings$gener6, _editedSettings$gener7, _editedSettings$gener8, _editedSettings$gener9, _editedSettings$gener10;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Basic Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Farm Name\",\n            value: ((_editedSettings$gener = editedSettings.general) === null || _editedSettings$gener === void 0 ? void 0 : _editedSettings$gener.farm_name) || '',\n            onChange: e => handleGeneralChange('farm_name', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: ((_editedSettings$gener2 = editedSettings.general) === null || _editedSettings$gener2 === void 0 ? void 0 : _editedSettings$gener2.language) || 'en_US',\n              label: \"Language\",\n              onChange: e => handleGeneralChange('language', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"zh_CN\",\n                children: \"Chinese (Simplified)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"en_US\",\n                children: \"English\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Time Zone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: ((_editedSettings$gener3 = editedSettings.general) === null || _editedSettings$gener3 === void 0 ? void 0 : _editedSettings$gener3.time_zone) || 'Asia/Shanghai',\n              label: \"Time Zone\",\n              onChange: e => handleGeneralChange('time_zone', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Asia/Shanghai\",\n                children: \"China Standard Time (GMT+8)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"UTC\",\n                children: \"Coordinated Universal Time (UTC)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"America/New_York\",\n                children: \"US Eastern Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Unit Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Temperature Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: ((_editedSettings$gener4 = editedSettings.general) === null || _editedSettings$gener4 === void 0 ? void 0 : (_editedSettings$gener5 = _editedSettings$gener4.units) === null || _editedSettings$gener5 === void 0 ? void 0 : _editedSettings$gener5.temperature) || 'celsius',\n              label: \"Temperature Unit\",\n              onChange: e => handleUnitsChange('temperature', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"celsius\",\n                children: \"Celsius (\\xB0C)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"fahrenheit\",\n                children: \"Fahrenheit (\\xB0F)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Weight Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: ((_editedSettings$gener6 = editedSettings.general) === null || _editedSettings$gener6 === void 0 ? void 0 : (_editedSettings$gener7 = _editedSettings$gener6.units) === null || _editedSettings$gener7 === void 0 ? void 0 : _editedSettings$gener7.weight) || 'kg',\n              label: \"Weight Unit\",\n              onChange: e => handleUnitsChange('weight', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"kg\",\n                children: \"Kilograms (kg)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"lb\",\n                children: \"Pounds (lb)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Distance Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: ((_editedSettings$gener8 = editedSettings.general) === null || _editedSettings$gener8 === void 0 ? void 0 : (_editedSettings$gener9 = _editedSettings$gener8.units) === null || _editedSettings$gener9 === void 0 ? void 0 : _editedSettings$gener9.distance) || 'm',\n              label: \"Distance Unit\",\n              onChange: e => handleUnitsChange('distance', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"m\",\n                children: \"Meters (m)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"ft\",\n                children: \"Feet (ft)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: ((_editedSettings$gener10 = editedSettings.general) === null || _editedSettings$gener10 === void 0 ? void 0 : _editedSettings$gener10.auto_update) || false,\n              onChange: e => handleGeneralChange('auto_update', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this),\n            label: \"Automatic System Updates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render data management tab\n  const renderDataSettings = () => {\n    var _editedSettings$data_, _editedSettings$data_2, _editedSettings$data_3, _editedSettings$data_4, _editedSettings$data_5, _editedSettings$data_6;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Data Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"number\",\n            label: \"Data Retention Days\",\n            value: ((_editedSettings$data_ = editedSettings.data_management) === null || _editedSettings$data_ === void 0 ? void 0 : _editedSettings$data_.data_retention_days) || 90,\n            onChange: e => handleDataChange('data_retention_days', parseInt(e.target.value)),\n            InputProps: {\n              inputProps: {\n                min: 1,\n                max: 365\n              }\n            },\n            helperText: \"Set data retention period. Data older than this will be automatically cleaned up.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: ((_editedSettings$data_2 = editedSettings.data_management) === null || _editedSettings$data_2 === void 0 ? void 0 : _editedSettings$data_2.backup_enabled) || false,\n              onChange: e => handleDataChange('backup_enabled', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this),\n            label: \"Enable Automatic Backup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), ((_editedSettings$data_3 = editedSettings.data_management) === null || _editedSettings$data_3 === void 0 ? void 0 : _editedSettings$data_3.backup_enabled) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Backup Frequency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: ((_editedSettings$data_4 = editedSettings.data_management) === null || _editedSettings$data_4 === void 0 ? void 0 : _editedSettings$data_4.backup_frequency) || 'daily',\n                label: \"Backup Frequency\",\n                onChange: e => handleDataChange('backup_frequency', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"daily\",\n                  children: \"Daily\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"weekly\",\n                  children: \"Weekly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"monthly\",\n                  children: \"Monthly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Backup Time\",\n              type: \"time\",\n              value: ((_editedSettings$data_5 = editedSettings.data_management) === null || _editedSettings$data_5 === void 0 ? void 0 : _editedSettings$data_5.backup_time) || '02:00',\n              onChange: e => handleDataChange('backup_time', e.target.value),\n              InputLabelProps: {\n                shrink: true\n              },\n              inputProps: {\n                step: 300\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: ((_editedSettings$data_6 = editedSettings.data_management) === null || _editedSettings$data_6 === void 0 ? void 0 : _editedSettings$data_6.auto_delete_old_data) || false,\n              onChange: e => handleDataChange('auto_delete_old_data', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this),\n            label: \"Automatically Delete Expired Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'flex-start',\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 28\n              }, this),\n              children: \"Backup Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render network settings tab\n  const renderNetworkSettings = () => {\n    var _editedSettings$netwo, _editedSettings$netwo2, _editedSettings$netwo3, _editedSettings$netwo4, _editedSettings$netwo5;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Network Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"API Server URL\",\n            value: ((_editedSettings$netwo = editedSettings.network) === null || _editedSettings$netwo === void 0 ? void 0 : _editedSettings$netwo.api_url) || '',\n            onChange: e => handleNetworkChange('api_url', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"MQTT Broker Address\",\n            value: ((_editedSettings$netwo2 = editedSettings.network) === null || _editedSettings$netwo2 === void 0 ? void 0 : _editedSettings$netwo2.mqtt_broker) || '',\n            onChange: e => handleNetworkChange('mqtt_broker', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"MQTT Username\",\n            value: ((_editedSettings$netwo3 = editedSettings.network) === null || _editedSettings$netwo3 === void 0 ? void 0 : _editedSettings$netwo3.mqtt_username) || '',\n            onChange: e => handleNetworkChange('mqtt_username', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"MQTT Client ID\",\n            value: ((_editedSettings$netwo4 = editedSettings.network) === null || _editedSettings$netwo4 === void 0 ? void 0 : _editedSettings$netwo4.mqtt_client_id) || '',\n            onChange: e => handleNetworkChange('mqtt_client_id', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"number\",\n            label: \"Connection Timeout (sec)\",\n            value: ((_editedSettings$netwo5 = editedSettings.network) === null || _editedSettings$netwo5 === void 0 ? void 0 : _editedSettings$netwo5.connection_timeout) || 30,\n            onChange: e => handleNetworkChange('connection_timeout', parseInt(e.target.value)),\n            InputProps: {\n              inputProps: {\n                min: 5,\n                max: 300\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'flex-start',\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(WifiIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 28\n              }, this),\n              children: \"Test Connection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render notification settings tab\n  const renderNotificationSettings = () => {\n    var _editedSettings$notif, _editedSettings$notif2, _editedSettings$notif3, _editedSettings$notif4, _editedSettings$notif5, _editedSettings$notif6, _editedSettings$notif7, _editedSettings$notif8, _editedSettings$notif9;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Notification Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: ((_editedSettings$notif = editedSettings.notification) === null || _editedSettings$notif === void 0 ? void 0 : _editedSettings$notif.enable_email) || false,\n              onChange: e => handleNotificationChange('enable_email', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this),\n            label: \"Enable Email Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), ((_editedSettings$notif2 = editedSettings.notification) === null || _editedSettings$notif2 === void 0 ? void 0 : _editedSettings$notif2.enable_email) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"SMTP Server\",\n              value: ((_editedSettings$notif3 = editedSettings.notification) === null || _editedSettings$notif3 === void 0 ? void 0 : _editedSettings$notif3.email_server) || '',\n              onChange: e => handleNotificationChange('email_server', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"SMTP Port\",\n              type: \"number\",\n              value: ((_editedSettings$notif4 = editedSettings.notification) === null || _editedSettings$notif4 === void 0 ? void 0 : _editedSettings$notif4.email_port) || 587,\n              onChange: e => handleNotificationChange('email_port', parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Email Username\",\n              value: ((_editedSettings$notif5 = editedSettings.notification) === null || _editedSettings$notif5 === void 0 ? void 0 : _editedSettings$notif5.email_username) || '',\n              onChange: e => handleNotificationChange('email_username', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Admin Email\",\n              value: ((_editedSettings$notif6 = editedSettings.notification) === null || _editedSettings$notif6 === void 0 ? void 0 : _editedSettings$notif6.admin_email) || '',\n              onChange: e => handleNotificationChange('admin_email', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: ((_editedSettings$notif7 = editedSettings.notification) === null || _editedSettings$notif7 === void 0 ? void 0 : _editedSettings$notif7.enable_sms) || false,\n              onChange: e => handleNotificationChange('enable_sms', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this),\n            label: \"Enable SMS Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), ((_editedSettings$notif8 = editedSettings.notification) === null || _editedSettings$notif8 === void 0 ? void 0 : _editedSettings$notif8.enable_sms) && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"SMS API Key\",\n            value: ((_editedSettings$notif9 = editedSettings.notification) === null || _editedSettings$notif9 === void 0 ? void 0 : _editedSettings$notif9.sms_api_key) || '',\n            onChange: e => handleNotificationChange('sms_api_key', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'flex-start',\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              children: \"Send Test Notification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render security settings tab\n  const renderSecuritySettings = () => {\n    var _editedSettings$secur, _editedSettings$secur2, _editedSettings$secur3, _editedSettings$secur4, _editedSettings$secur5, _editedSettings$secur6;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Security Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"number\",\n            label: \"Session Timeout (minutes)\",\n            value: ((_editedSettings$secur = editedSettings.security) === null || _editedSettings$secur === void 0 ? void 0 : _editedSettings$secur.session_timeout) || 30,\n            onChange: e => handleSecurityChange('session_timeout', parseInt(e.target.value)),\n            InputProps: {\n              inputProps: {\n                min: 5,\n                max: 1440\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: ((_editedSettings$secur2 = editedSettings.security) === null || _editedSettings$secur2 === void 0 ? void 0 : _editedSettings$secur2.two_factor_auth) || false,\n              onChange: e => handleSecurityChange('two_factor_auth', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 17\n            }, this),\n            label: \"Enable Two-Factor Authentication\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: ((_editedSettings$secur3 = editedSettings.security) === null || _editedSettings$secur3 === void 0 ? void 0 : _editedSettings$secur3.user_activity_log) || true,\n              onChange: e => handleSecurityChange('user_activity_log', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 17\n            }, this),\n            label: \"Log User Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: ((_editedSettings$secur4 = editedSettings.security) === null || _editedSettings$secur4 === void 0 ? void 0 : _editedSettings$secur4.login_limit) || true,\n              onChange: e => handleSecurityChange('login_limit', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this),\n            label: \"Limit Failed Login Attempts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 11\n        }, this), ((_editedSettings$secur5 = editedSettings.security) === null || _editedSettings$secur5 === void 0 ? void 0 : _editedSettings$secur5.login_limit) && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"number\",\n            label: \"Max Failed Attempts\",\n            value: ((_editedSettings$secur6 = editedSettings.security) === null || _editedSettings$secur6 === void 0 ? void 0 : _editedSettings$secur6.max_login_attempts) || 5,\n            onChange: e => handleSecurityChange('max_login_attempts', parseInt(e.target.value)),\n            InputProps: {\n              inputProps: {\n                min: 3,\n                max: 10\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"System Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabChange,\n          variant: \"scrollable\",\n          scrollButtons: \"auto\",\n          \"aria-label\": \"System settings tabs\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 24\n            }, this),\n            label: \"Basic Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(DataUsageIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 24\n            }, this),\n            label: \"Data Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(WifiIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 24\n            }, this),\n            label: \"Network Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(NotificationIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 24\n            }, this),\n            label: \"Notification Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(SecurityIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 24\n            }, this),\n            label: \"Security Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          overflow: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 0,\n          children: renderGeneralSettings()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 1,\n          children: renderDataSettings()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 2,\n          children: renderNetworkSettings()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 3,\n          children: renderNotificationSettings()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 4,\n          children: renderSecuritySettings()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          borderTop: 1,\n          borderColor: 'divider',\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            mr: 2\n          },\n          onClick: handleResetSettings,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSaveSettings,\n          disabled: saving,\n          children: saving ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 23\n          }, this) : 'Save Settings'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 696,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"eSk+Hzg2zNXo9tyGbqWucAvktrE=\");\n_c2 = Settings;\nexport default Settings;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Typography","Paper","Grid","Button","TextField","FormControl","InputLabel","Select","MenuItem","Switch","FormControlLabel","Tab","Tabs","Divider","CircularProgress","Alert","Card","CardContent","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Save","SaveIcon","Delete","DeleteIcon","Settings","SettingsIcon","Language","LanguageIcon","Notifications","NotificationIcon","DataUsage","DataUsageIcon","Security","SecurityIcon","CloudUpload","CloudUploadIcon","WifiTethering","WifiIcon","settingsAPI","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","mockSettings","general","farm_name","language","time_zone","auto_update","units","temperature","weight","distance","data_management","data_retention_days","backup_enabled","backup_frequency","backup_time","auto_delete_old_data","network","api_url","mqtt_broker","mqtt_username","mqtt_client_id","connection_timeout","notification","enable_email","email_server","email_port","email_username","admin_email","enable_sms","sms_api_key","security","session_timeout","two_factor_auth","user_activity_log","login_limit","max_login_attempts","TabPanel","props","children","value","index","other","role","hidden","id","style","height","sx","p","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","number","isRequired","_s","settings","setSettings","editedSettings","setEditedSettings","tabValue","setTabValue","loading","setLoading","saving","setSaving","error","setError","success","setSuccess","fetchSettings","err","console","handleTabChange","event","newValue","handleSaveSettings","setTimeout","handleGeneralChange","field","handleUnitsChange","handleDataChange","handleNetworkChange","handleNotificationChange","handleSecurityChange","handleResetSettings","renderGeneralSettings","_editedSettings$gener","_editedSettings$gener2","_editedSettings$gener3","_editedSettings$gener4","_editedSettings$gener5","_editedSettings$gener6","_editedSettings$gener7","_editedSettings$gener8","_editedSettings$gener9","_editedSettings$gener10","variant","gutterBottom","mb","container","spacing","item","xs","md","fullWidth","label","onChange","e","target","control","checked","renderDataSettings","_editedSettings$data_","_editedSettings$data_2","_editedSettings$data_3","_editedSettings$data_4","_editedSettings$data_5","_editedSettings$data_6","type","parseInt","InputProps","inputProps","min","max","helperText","InputLabelProps","shrink","step","display","justifyContent","mt","color","startIcon","renderNetworkSettings","_editedSettings$netwo","_editedSettings$netwo2","_editedSettings$netwo3","_editedSettings$netwo4","_editedSettings$netwo5","renderNotificationSettings","_editedSettings$notif","_editedSettings$notif2","_editedSettings$notif3","_editedSettings$notif4","_editedSettings$notif5","_editedSettings$notif6","_editedSettings$notif7","_editedSettings$notif8","_editedSettings$notif9","renderSecuritySettings","_editedSettings$secur","_editedSettings$secur2","_editedSettings$secur3","_editedSettings$secur4","_editedSettings$secur5","_editedSettings$secur6","alignItems","flexDirection","component","severity","flexGrow","borderBottom","borderColor","scrollButtons","icon","borderTop","mr","onClick","disabled","size","_c2","$RefreshReg$"],"sources":["C:/Users/LIJIN/Desktop/webTest/frontend/src/pages/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  FormControlLabel,\r\n  Tab,\r\n  Tabs,\r\n  Divider,\r\n  CircularProgress,\r\n  Alert,\r\n  Card,\r\n  CardContent,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton\r\n} from '@mui/material';\r\nimport {\r\n  Save as SaveIcon,\r\n  Delete as DeleteIcon,\r\n  Settings as SettingsIcon,\r\n  Language as LanguageIcon,\r\n  Notifications as NotificationIcon,\r\n  DataUsage as DataUsageIcon,\r\n  Security as SecurityIcon,\r\n  CloudUpload as CloudUploadIcon,\r\n  WifiTethering as WifiIcon\r\n} from '@mui/icons-material';\r\nimport { settingsAPI } from '../services/api';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Mock system settings data\r\nconst mockSettings = {\r\n  general: {\r\n    farm_name: 'Smart Farm Demo System',\r\n    language: 'en_US',\r\n    time_zone: 'Asia/Shanghai',\r\n    auto_update: true,\r\n    units: {\r\n      temperature: 'celsius',\r\n      weight: 'kg',\r\n      distance: 'm'\r\n    }\r\n  },\r\n  data_management: {\r\n    data_retention_days: 90,\r\n    backup_enabled: true,\r\n    backup_frequency: 'daily',\r\n    backup_time: '02:00',\r\n    auto_delete_old_data: true\r\n  },\r\n  network: {\r\n    api_url: 'http://localhost:5000/api',\r\n    mqtt_broker: 'mqtt://localhost:1883',\r\n    mqtt_username: 'farm_user',\r\n    mqtt_client_id: 'farm_web_client',\r\n    connection_timeout: 30\r\n  },\r\n  notification: {\r\n    enable_email: true,\r\n    email_server: 'smtp.example.com',\r\n    email_port: 587,\r\n    email_username: 'notifications@example.com',\r\n    admin_email: 'admin@example.com',\r\n    enable_sms: false,\r\n    sms_api_key: ''\r\n  },\r\n  security: {\r\n    session_timeout: 30,\r\n    two_factor_auth: false,\r\n    user_activity_log: true,\r\n    login_limit: true,\r\n    max_login_attempts: 5\r\n  }\r\n};\r\n\r\n// TabPanel component\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`settings-tabpanel-${index}`}\r\n      aria-labelledby={`settings-tab-${index}`}\r\n      {...other}\r\n      style={{ height: '100%' }}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3, height: '100%', overflow: 'auto' }}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Settings = () => {\r\n  // State management\r\n  const [settings, setSettings] = useState(mockSettings);\r\n  const [editedSettings, setEditedSettings] = useState(mockSettings);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  \r\n  // Load settings\r\n  useEffect(() => {\r\n    const fetchSettings = async () => {\r\n      try {\r\n        // In actual project, call API\r\n        // const response = await settingsAPI.getAll();\r\n        // setSettings(response.data.data);\r\n        \r\n        // Use mock data\r\n        setSettings(mockSettings);\r\n        setEditedSettings(mockSettings);\r\n      } catch (err) {\r\n        console.error('Failed to get system settings:', err);\r\n        setError('Failed to load settings, please try again later');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchSettings();\r\n  }, []);\r\n  \r\n  // Handle tab change\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n  \r\n  // Update settings\r\n  const handleSaveSettings = async () => {\r\n    setSaving(true);\r\n    setError(null);\r\n    try {\r\n      // In actual project, call API\r\n      // await settingsAPI.update(editedSettings);\r\n      \r\n      // Update local state\r\n      setSettings(editedSettings);\r\n      setSuccess('Settings saved successfully');\r\n      \r\n      // Clear success message after 5 seconds\r\n      setTimeout(() => {\r\n        setSuccess(null);\r\n      }, 5000);\r\n    } catch (err) {\r\n      console.error('Failed to save system settings:', err);\r\n      setError('Save failed, please try again later');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n  \r\n  // Handle form data changes\r\n  const handleGeneralChange = (field, value) => {\r\n    setEditedSettings({\r\n      ...editedSettings,\r\n      general: {\r\n        ...editedSettings.general,\r\n        [field]: value\r\n      }\r\n    });\r\n  };\r\n  \r\n  const handleUnitsChange = (field, value) => {\r\n    setEditedSettings({\r\n      ...editedSettings,\r\n      general: {\r\n        ...editedSettings.general,\r\n        units: {\r\n          ...editedSettings.general.units,\r\n          [field]: value\r\n        }\r\n      }\r\n    });\r\n  };\r\n  \r\n  const handleDataChange = (field, value) => {\r\n    setEditedSettings({\r\n      ...editedSettings,\r\n      data_management: {\r\n        ...editedSettings.data_management,\r\n        [field]: value\r\n      }\r\n    });\r\n  };\r\n  \r\n  const handleNetworkChange = (field, value) => {\r\n    setEditedSettings({\r\n      ...editedSettings,\r\n      network: {\r\n        ...editedSettings.network,\r\n        [field]: value\r\n      }\r\n    });\r\n  };\r\n  \r\n  const handleNotificationChange = (field, value) => {\r\n    setEditedSettings({\r\n      ...editedSettings,\r\n      notification: {\r\n        ...editedSettings.notification,\r\n        [field]: value\r\n      }\r\n    });\r\n  };\r\n  \r\n  const handleSecurityChange = (field, value) => {\r\n    setEditedSettings({\r\n      ...editedSettings,\r\n      security: {\r\n        ...editedSettings.security,\r\n        [field]: value\r\n      }\r\n    });\r\n  };\r\n\r\n  // Reset to default settings\r\n  const handleResetSettings = () => {\r\n    setEditedSettings(settings);\r\n  };\r\n\r\n  // Render general settings tab\r\n  const renderGeneralSettings = () => {\r\n    return (\r\n      <Paper sx={{ p: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>Basic Settings</Typography>\r\n        <Divider sx={{ mb: 3 }} />\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Farm Name\"\r\n              value={editedSettings.general?.farm_name || ''}\r\n              onChange={(e) => handleGeneralChange('farm_name', e.target.value)}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Language</InputLabel>\r\n              <Select\r\n                value={editedSettings.general?.language || 'en_US'}\r\n                label=\"Language\"\r\n                onChange={(e) => handleGeneralChange('language', e.target.value)}\r\n              >\r\n                <MenuItem value=\"zh_CN\">Chinese (Simplified)</MenuItem>\r\n                <MenuItem value=\"en_US\">English</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Time Zone</InputLabel>\r\n              <Select\r\n                value={editedSettings.general?.time_zone || 'Asia/Shanghai'}\r\n                label=\"Time Zone\"\r\n                onChange={(e) => handleGeneralChange('time_zone', e.target.value)}\r\n              >\r\n                <MenuItem value=\"Asia/Shanghai\">China Standard Time (GMT+8)</MenuItem>\r\n                <MenuItem value=\"UTC\">Coordinated Universal Time (UTC)</MenuItem>\r\n                <MenuItem value=\"America/New_York\">US Eastern Time</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Unit Settings</Typography>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={4}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Temperature Unit</InputLabel>\r\n              <Select\r\n                value={editedSettings.general?.units?.temperature || 'celsius'}\r\n                label=\"Temperature Unit\"\r\n                onChange={(e) => handleUnitsChange('temperature', e.target.value)}\r\n              >\r\n                <MenuItem value=\"celsius\">Celsius (°C)</MenuItem>\r\n                <MenuItem value=\"fahrenheit\">Fahrenheit (°F)</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={4}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Weight Unit</InputLabel>\r\n              <Select\r\n                value={editedSettings.general?.units?.weight || 'kg'}\r\n                label=\"Weight Unit\"\r\n                onChange={(e) => handleUnitsChange('weight', e.target.value)}\r\n              >\r\n                <MenuItem value=\"kg\">Kilograms (kg)</MenuItem>\r\n                <MenuItem value=\"lb\">Pounds (lb)</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={4}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Distance Unit</InputLabel>\r\n              <Select\r\n                value={editedSettings.general?.units?.distance || 'm'}\r\n                label=\"Distance Unit\"\r\n                onChange={(e) => handleUnitsChange('distance', e.target.value)}\r\n              >\r\n                <MenuItem value=\"m\">Meters (m)</MenuItem>\r\n                <MenuItem value=\"ft\">Feet (ft)</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={editedSettings.general?.auto_update || false}\r\n                  onChange={(e) => handleGeneralChange('auto_update', e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Automatic System Updates\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  // Render data management tab\r\n  const renderDataSettings = () => {\r\n    return (\r\n      <Paper sx={{ p: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>Data Management</Typography>\r\n        <Divider sx={{ mb: 3 }} />\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              type=\"number\"\r\n              label=\"Data Retention Days\"\r\n              value={editedSettings.data_management?.data_retention_days || 90}\r\n              onChange={(e) => handleDataChange('data_retention_days', parseInt(e.target.value))}\r\n              InputProps={{ inputProps: { min: 1, max: 365 } }}\r\n              helperText=\"Set data retention period. Data older than this will be automatically cleaned up.\"\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={editedSettings.data_management?.backup_enabled || false}\r\n                  onChange={(e) => handleDataChange('backup_enabled', e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Enable Automatic Backup\"\r\n            />\r\n          </Grid>\r\n          \r\n          {editedSettings.data_management?.backup_enabled && (\r\n            <>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Backup Frequency</InputLabel>\r\n                  <Select\r\n                    value={editedSettings.data_management?.backup_frequency || 'daily'}\r\n                    label=\"Backup Frequency\"\r\n                    onChange={(e) => handleDataChange('backup_frequency', e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"daily\">Daily</MenuItem>\r\n                    <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                    <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Backup Time\"\r\n                  type=\"time\"\r\n                  value={editedSettings.data_management?.backup_time || '02:00'}\r\n                  onChange={(e) => handleDataChange('backup_time', e.target.value)}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputProps={{ step: 300 }}\r\n                />\r\n              </Grid>\r\n            </>\r\n          )}\r\n          \r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={editedSettings.data_management?.auto_delete_old_data || false}\r\n                  onChange={(e) => handleDataChange('auto_delete_old_data', e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Automatically Delete Expired Data\"\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'flex-start', mt: 2 }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                startIcon={<CloudUploadIcon />}\r\n              >\r\n                Backup Now\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  // Render network settings tab\r\n  const renderNetworkSettings = () => {\r\n    return (\r\n      <Paper sx={{ p: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>Network Settings</Typography>\r\n        <Divider sx={{ mb: 3 }} />\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"API Server URL\"\r\n              value={editedSettings.network?.api_url || ''}\r\n              onChange={(e) => handleNetworkChange('api_url', e.target.value)}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"MQTT Broker Address\"\r\n              value={editedSettings.network?.mqtt_broker || ''}\r\n              onChange={(e) => handleNetworkChange('mqtt_broker', e.target.value)}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"MQTT Username\"\r\n              value={editedSettings.network?.mqtt_username || ''}\r\n              onChange={(e) => handleNetworkChange('mqtt_username', e.target.value)}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"MQTT Client ID\"\r\n              value={editedSettings.network?.mqtt_client_id || ''}\r\n              onChange={(e) => handleNetworkChange('mqtt_client_id', e.target.value)}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              type=\"number\"\r\n              label=\"Connection Timeout (sec)\"\r\n              value={editedSettings.network?.connection_timeout || 30}\r\n              onChange={(e) => handleNetworkChange('connection_timeout', parseInt(e.target.value))}\r\n              InputProps={{ inputProps: { min: 5, max: 300 } }}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'flex-start', mt: 2 }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                startIcon={<WifiIcon />}\r\n              >\r\n                Test Connection\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  // Render notification settings tab\r\n  const renderNotificationSettings = () => {\r\n    return (\r\n      <Paper sx={{ p: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>Notification Settings</Typography>\r\n        <Divider sx={{ mb: 3 }} />\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={editedSettings.notification?.enable_email || false}\r\n                  onChange={(e) => handleNotificationChange('enable_email', e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Enable Email Notifications\"\r\n            />\r\n          </Grid>\r\n          \r\n          {editedSettings.notification?.enable_email && (\r\n            <>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"SMTP Server\"\r\n                  value={editedSettings.notification?.email_server || ''}\r\n                  onChange={(e) => handleNotificationChange('email_server', e.target.value)}\r\n                />\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"SMTP Port\"\r\n                  type=\"number\"\r\n                  value={editedSettings.notification?.email_port || 587}\r\n                  onChange={(e) => handleNotificationChange('email_port', parseInt(e.target.value))}\r\n                />\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Email Username\"\r\n                  value={editedSettings.notification?.email_username || ''}\r\n                  onChange={(e) => handleNotificationChange('email_username', e.target.value)}\r\n                />\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Admin Email\"\r\n                  value={editedSettings.notification?.admin_email || ''}\r\n                  onChange={(e) => handleNotificationChange('admin_email', e.target.value)}\r\n                />\r\n              </Grid>\r\n            </>\r\n          )}\r\n          \r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={editedSettings.notification?.enable_sms || false}\r\n                  onChange={(e) => handleNotificationChange('enable_sms', e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Enable SMS Notifications\"\r\n            />\r\n          </Grid>\r\n          \r\n          {editedSettings.notification?.enable_sms && (\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"SMS API Key\"\r\n                value={editedSettings.notification?.sms_api_key || ''}\r\n                onChange={(e) => handleNotificationChange('sms_api_key', e.target.value)}\r\n              />\r\n            </Grid>\r\n          )}\r\n          \r\n          <Grid item xs={12}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'flex-start', mt: 2 }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n              >\r\n                Send Test Notification\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  };\r\n  \r\n  // Render security settings tab\r\n  const renderSecuritySettings = () => {\r\n    return (\r\n      <Paper sx={{ p: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>Security Settings</Typography>\r\n        <Divider sx={{ mb: 3 }} />\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              type=\"number\"\r\n              label=\"Session Timeout (minutes)\"\r\n              value={editedSettings.security?.session_timeout || 30}\r\n              onChange={(e) => handleSecurityChange('session_timeout', parseInt(e.target.value))}\r\n              InputProps={{ inputProps: { min: 5, max: 1440 } }}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={editedSettings.security?.two_factor_auth || false}\r\n                  onChange={(e) => handleSecurityChange('two_factor_auth', e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Enable Two-Factor Authentication\"\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={editedSettings.security?.user_activity_log || true}\r\n                  onChange={(e) => handleSecurityChange('user_activity_log', e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Log User Activity\"\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={editedSettings.security?.login_limit || true}\r\n                  onChange={(e) => handleSecurityChange('login_limit', e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Limit Failed Login Attempts\"\r\n            />\r\n          </Grid>\r\n          \r\n          {editedSettings.security?.login_limit && (\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Max Failed Attempts\"\r\n                value={editedSettings.security?.max_login_attempts || 5}\r\n                onChange={(e) => handleSecurityChange('max_login_attempts', parseInt(e.target.value))}\r\n                InputProps={{ inputProps: { min: 3, max: 10 } }}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        System Settings\r\n      </Typography>\r\n      \r\n      {/* Alert messages */}\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      {success && (\r\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n          {success}\r\n        </Alert>\r\n      )}\r\n      \r\n      {/* Tabs */}\r\n      <Paper sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <Tabs \r\n            value={tabValue} \r\n            onChange={handleTabChange}\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            aria-label=\"System settings tabs\"\r\n          >\r\n            <Tab icon={<SettingsIcon />} label=\"Basic Settings\" />\r\n            <Tab icon={<DataUsageIcon />} label=\"Data Management\" />\r\n            <Tab icon={<WifiIcon />} label=\"Network Settings\" />\r\n            <Tab icon={<NotificationIcon />} label=\"Notification Settings\" />\r\n            <Tab icon={<SecurityIcon />} label=\"Security Settings\" />\r\n          </Tabs>\r\n        </Box>\r\n        \r\n        {/* Tab content */}\r\n        <Box sx={{ flexGrow: 1, overflow: 'hidden' }}>\r\n          <TabPanel value={tabValue} index={0}>\r\n            {renderGeneralSettings()}\r\n          </TabPanel>\r\n          <TabPanel value={tabValue} index={1}>\r\n            {renderDataSettings()}\r\n          </TabPanel>\r\n          <TabPanel value={tabValue} index={2}>\r\n            {renderNetworkSettings()}\r\n          </TabPanel>\r\n          <TabPanel value={tabValue} index={3}>\r\n            {renderNotificationSettings()}\r\n          </TabPanel>\r\n          <TabPanel value={tabValue} index={4}>\r\n            {renderSecuritySettings()}\r\n          </TabPanel>\r\n        </Box>\r\n        \r\n        {/* Action buttons */}\r\n        <Box sx={{ p: 2, borderTop: 1, borderColor: 'divider', display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Button \r\n            variant=\"outlined\" \r\n            sx={{ mr: 2 }}\r\n            onClick={handleResetSettings}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            onClick={handleSaveSettings}\r\n            disabled={saving}\r\n          >\r\n            {saving ? <CircularProgress size={24} /> : 'Save Settings'}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Settings; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transition = void 0;\nvar _d3Timer = require(\"@mui/x-charts-vendor/d3-timer\");\n/**\n * A resumable transition class inspired by d3-transition.\n * Allows for starting, and stopping and resuming transitions.\n *\n * The transition is started automatically.\n * A transition cannot be restarted after it has finished.\n * Resuming a transition will continue from the point it was stopped, i.e., easing will continue from the point it was\n * stopped.\n */\nclass Transition {\n  /**\n   * Create a new ResumableTransition.\n   * @param duration Duration in milliseconds\n   * @param easingFn The easing function\n   * @param onTick Callback function called on each animation frame with the eased time in range [0, 1].\n   */\n  constructor(duration, easingFn, onTick) {\n    this.duration = void 0;\n    this.elapsed = 0;\n    this.easingFn = void 0;\n    this.timer = null;\n    this.onTickCallback = void 0;\n    this.duration = duration;\n    this.easingFn = easingFn;\n    this.onTickCallback = onTick;\n    this.resume();\n  }\n  get running() {\n    return this.timer !== null;\n  }\n  timerCallback(elapsed) {\n    this.elapsed = Math.min(elapsed, this.duration);\n    const t = this.duration === 0 ? 1 : this.elapsed / this.duration;\n    const easedT = this.easingFn(t);\n\n    // Call the tick callback with the current value\n    this.onTickCallback(easedT);\n    if (this.elapsed >= this.duration) {\n      this.stop();\n    }\n  }\n\n  /**\n   * Resume the transition\n   */\n  resume() {\n    if (this.running || this.elapsed >= this.duration) {\n      return this;\n    }\n\n    /* If we're resuming the transition, then subtract elapsed to continue the easing. */\n    const time = (0, _d3Timer.now)() - this.elapsed;\n    this.timer = (0, _d3Timer.timer)(elapsed => this.timerCallback(elapsed), 0, time);\n    (0, _d3Timer.timerFlush)();\n    return this;\n  }\n\n  /**\n   * Stops the transition.\n   */\n  stop() {\n    if (!this.running) {\n      return this;\n    }\n    if (this.timer) {\n      this.timer.stop();\n      this.timer = null;\n    }\n    return this;\n  }\n\n  /**\n   * Immediately finishes the transition and calls the tick callback with the final value.\n   */\n  finish() {\n    this.stop();\n    (0, _d3Timer.timeout)(() => this.timerCallback(this.duration));\n    (0, _d3Timer.timerFlush)();\n    return this;\n  }\n}\nexports.Transition = Transition;","map":{"version":3,"names":["Object","defineProperty","exports","value","Transition","_d3Timer","require","constructor","duration","easingFn","onTick","elapsed","timer","onTickCallback","resume","running","timerCallback","Math","min","t","easedT","stop","time","now","timerFlush","finish","timeout"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/node_modules/@mui/x-charts/internals/animation/Transition.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transition = void 0;\nvar _d3Timer = require(\"@mui/x-charts-vendor/d3-timer\");\n/**\n * A resumable transition class inspired by d3-transition.\n * Allows for starting, and stopping and resuming transitions.\n *\n * The transition is started automatically.\n * A transition cannot be restarted after it has finished.\n * Resuming a transition will continue from the point it was stopped, i.e., easing will continue from the point it was\n * stopped.\n */\nclass Transition {\n  /**\n   * Create a new ResumableTransition.\n   * @param duration Duration in milliseconds\n   * @param easingFn The easing function\n   * @param onTick Callback function called on each animation frame with the eased time in range [0, 1].\n   */\n  constructor(duration, easingFn, onTick) {\n    this.duration = void 0;\n    this.elapsed = 0;\n    this.easingFn = void 0;\n    this.timer = null;\n    this.onTickCallback = void 0;\n    this.duration = duration;\n    this.easingFn = easingFn;\n    this.onTickCallback = onTick;\n    this.resume();\n  }\n  get running() {\n    return this.timer !== null;\n  }\n  timerCallback(elapsed) {\n    this.elapsed = Math.min(elapsed, this.duration);\n    const t = this.duration === 0 ? 1 : this.elapsed / this.duration;\n    const easedT = this.easingFn(t);\n\n    // Call the tick callback with the current value\n    this.onTickCallback(easedT);\n    if (this.elapsed >= this.duration) {\n      this.stop();\n    }\n  }\n\n  /**\n   * Resume the transition\n   */\n  resume() {\n    if (this.running || this.elapsed >= this.duration) {\n      return this;\n    }\n\n    /* If we're resuming the transition, then subtract elapsed to continue the easing. */\n    const time = (0, _d3Timer.now)() - this.elapsed;\n    this.timer = (0, _d3Timer.timer)(elapsed => this.timerCallback(elapsed), 0, time);\n    (0, _d3Timer.timerFlush)();\n    return this;\n  }\n\n  /**\n   * Stops the transition.\n   */\n  stop() {\n    if (!this.running) {\n      return this;\n    }\n    if (this.timer) {\n      this.timer.stop();\n      this.timer = null;\n    }\n    return this;\n  }\n\n  /**\n   * Immediately finishes the transition and calls the tick callback with the final value.\n   */\n  finish() {\n    this.stop();\n    (0, _d3Timer.timeout)(() => this.timerCallback(this.duration));\n    (0, _d3Timer.timerFlush)();\n    return this;\n  }\n}\nexports.Transition = Transition;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,IAAIC,QAAQ,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,UAAU,CAAC;EACf;AACF;AACA;AACA;AACA;AACA;EACEG,WAAWA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IACtC,IAAI,CAACF,QAAQ,GAAG,KAAK,CAAC;IACtB,IAAI,CAACG,OAAO,GAAG,CAAC;IAChB,IAAI,CAACF,QAAQ,GAAG,KAAK,CAAC;IACtB,IAAI,CAACG,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,cAAc,GAAG,KAAK,CAAC;IAC5B,IAAI,CAACL,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACI,cAAc,GAAGH,MAAM;IAC5B,IAAI,CAACI,MAAM,CAAC,CAAC;EACf;EACA,IAAIC,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACH,KAAK,KAAK,IAAI;EAC5B;EACAI,aAAaA,CAACL,OAAO,EAAE;IACrB,IAAI,CAACA,OAAO,GAAGM,IAAI,CAACC,GAAG,CAACP,OAAO,EAAE,IAAI,CAACH,QAAQ,CAAC;IAC/C,MAAMW,CAAC,GAAG,IAAI,CAACX,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAACG,OAAO,GAAG,IAAI,CAACH,QAAQ;IAChE,MAAMY,MAAM,GAAG,IAAI,CAACX,QAAQ,CAACU,CAAC,CAAC;;IAE/B;IACA,IAAI,CAACN,cAAc,CAACO,MAAM,CAAC;IAC3B,IAAI,IAAI,CAACT,OAAO,IAAI,IAAI,CAACH,QAAQ,EAAE;MACjC,IAAI,CAACa,IAAI,CAAC,CAAC;IACb;EACF;;EAEA;AACF;AACA;EACEP,MAAMA,CAAA,EAAG;IACP,IAAI,IAAI,CAACC,OAAO,IAAI,IAAI,CAACJ,OAAO,IAAI,IAAI,CAACH,QAAQ,EAAE;MACjD,OAAO,IAAI;IACb;;IAEA;IACA,MAAMc,IAAI,GAAG,CAAC,CAAC,EAAEjB,QAAQ,CAACkB,GAAG,EAAE,CAAC,GAAG,IAAI,CAACZ,OAAO;IAC/C,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEP,QAAQ,CAACO,KAAK,EAAED,OAAO,IAAI,IAAI,CAACK,aAAa,CAACL,OAAO,CAAC,EAAE,CAAC,EAAEW,IAAI,CAAC;IACjF,CAAC,CAAC,EAAEjB,QAAQ,CAACmB,UAAU,EAAE,CAAC;IAC1B,OAAO,IAAI;EACb;;EAEA;AACF;AACA;EACEH,IAAIA,CAAA,EAAG;IACL,IAAI,CAAC,IAAI,CAACN,OAAO,EAAE;MACjB,OAAO,IAAI;IACb;IACA,IAAI,IAAI,CAACH,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,CAACS,IAAI,CAAC,CAAC;MACjB,IAAI,CAACT,KAAK,GAAG,IAAI;IACnB;IACA,OAAO,IAAI;EACb;;EAEA;AACF;AACA;EACEa,MAAMA,CAAA,EAAG;IACP,IAAI,CAACJ,IAAI,CAAC,CAAC;IACX,CAAC,CAAC,EAAEhB,QAAQ,CAACqB,OAAO,EAAE,MAAM,IAAI,CAACV,aAAa,CAAC,IAAI,CAACR,QAAQ,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAEH,QAAQ,CAACmB,UAAU,EAAE,CAAC;IAC1B,OAAO,IAAI;EACb;AACF;AACAtB,OAAO,CAACE,UAAU,GAAGA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
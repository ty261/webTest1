{"ast":null,"code":"\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLegend = useLegend;\nvar _useChartSeries = require(\"../internals/plugins/corePlugins/useChartSeries\");\nvar _useSeries = require(\"./useSeries\");\nvar _useStore = require(\"../internals/store/useStore\");\nvar _useSelector = require(\"../internals/store/useSelector\");\nfunction getSeriesToDisplay(series, seriesConfig) {\n  return Object.keys(series).flatMap(seriesType => {\n    const getter = seriesConfig[seriesType].legendGetter;\n    return getter === undefined ? [] : getter(series[seriesType]);\n  });\n}\n\n/**\n * Get the legend items to display.\n *\n * This hook is used by the `ChartsLegend` component. And will return the legend items formatted for display.\n *\n * An alternative is to use the `useSeries` hook and format the legend items yourself.\n *\n * @returns legend data\n */\nfunction useLegend() {\n  const series = (0, _useSeries.useSeries)();\n  const store = (0, _useStore.useStore)();\n  const seriesConfig = (0, _useSelector.useSelector)(store, _useChartSeries.selectorChartSeriesConfig);\n  return {\n    items: getSeriesToDisplay(series, seriesConfig)\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","useLegend","_useChartSeries","require","_useSeries","_useStore","_useSelector","getSeriesToDisplay","series","seriesConfig","keys","flatMap","seriesType","getter","legendGetter","undefined","useSeries","store","useStore","useSelector","selectorChartSeriesConfig","items"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/node_modules/@mui/x-charts/hooks/useLegend.js"],"sourcesContent":["\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLegend = useLegend;\nvar _useChartSeries = require(\"../internals/plugins/corePlugins/useChartSeries\");\nvar _useSeries = require(\"./useSeries\");\nvar _useStore = require(\"../internals/store/useStore\");\nvar _useSelector = require(\"../internals/store/useSelector\");\nfunction getSeriesToDisplay(series, seriesConfig) {\n  return Object.keys(series).flatMap(seriesType => {\n    const getter = seriesConfig[seriesType].legendGetter;\n    return getter === undefined ? [] : getter(series[seriesType]);\n  });\n}\n\n/**\n * Get the legend items to display.\n *\n * This hook is used by the `ChartsLegend` component. And will return the legend items formatted for display.\n *\n * An alternative is to use the `useSeries` hook and format the legend items yourself.\n *\n * @returns legend data\n */\nfunction useLegend() {\n  const series = (0, _useSeries.useSeries)();\n  const store = (0, _useStore.useStore)();\n  const seriesConfig = (0, _useSelector.useSelector)(store, _useChartSeries.selectorChartSeriesConfig);\n  return {\n    items: getSeriesToDisplay(series, seriesConfig)\n  };\n}"],"mappings":"AAAA,YAAY;AACZ,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,SAAS,GAAGA,SAAS;AAC7B,IAAIC,eAAe,GAAGC,OAAO,CAAC,iDAAiD,CAAC;AAChF,IAAIC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACvC,IAAIE,SAAS,GAAGF,OAAO,CAAC,6BAA6B,CAAC;AACtD,IAAIG,YAAY,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AAC5D,SAASI,kBAAkBA,CAACC,MAAM,EAAEC,YAAY,EAAE;EAChD,OAAOZ,MAAM,CAACa,IAAI,CAACF,MAAM,CAAC,CAACG,OAAO,CAACC,UAAU,IAAI;IAC/C,MAAMC,MAAM,GAAGJ,YAAY,CAACG,UAAU,CAAC,CAACE,YAAY;IACpD,OAAOD,MAAM,KAAKE,SAAS,GAAG,EAAE,GAAGF,MAAM,CAACL,MAAM,CAACI,UAAU,CAAC,CAAC;EAC/D,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASX,SAASA,CAAA,EAAG;EACnB,MAAMO,MAAM,GAAG,CAAC,CAAC,EAAEJ,UAAU,CAACY,SAAS,EAAE,CAAC;EAC1C,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAEZ,SAAS,CAACa,QAAQ,EAAE,CAAC;EACvC,MAAMT,YAAY,GAAG,CAAC,CAAC,EAAEH,YAAY,CAACa,WAAW,EAAEF,KAAK,EAAEf,eAAe,CAACkB,yBAAyB,CAAC;EACpG,OAAO;IACLC,KAAK,EAAEd,kBAAkB,CAACC,MAAM,EAAEC,YAAY;EAChD,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
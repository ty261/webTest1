{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIJIN\\\\Desktop\\\\webTest\\\\Bak\\\\webTest\\\\frontend\\\\src\\\\pages\\\\ActuatorDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, Container, Typography, Button, Grid, Paper, Divider, TextField, FormControl, InputLabel, Select, MenuItem, Switch, FormControlLabel, Tab, Tabs, CircularProgress, Chip, Card, CardContent, CardHeader, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Alert, Tooltip, Slider, List, ListItem, ListItemText, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { ArrowBack as ArrowBackIcon, Save as SaveIcon, PowerSettingsNew as PowerIcon, History as HistoryIcon, Edit as EditIcon, Add as AddIcon, Delete as DeleteIcon, SettingsBackupRestore as ResetIcon, Check as CheckIcon, Close as CloseIcon, Settings as SettingsIcon, ErrorOutline as ErrorOutlineIcon, DateRange as DateRangeIcon, Opacity as HumidityIcon, Thermostat as TemperatureIcon, Air as FanIcon, WbSunny as LightIcon, WaterDrop as WaterIcon } from '@mui/icons-material';\nimport { actuatorAPI } from '../services/api';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { useSocket } from '../contexts/SocketContext';\n\n// Actuator type mapping\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ACTUATOR_TYPE_NAMES = {\n  'irrigation': 'Irrigation System',\n  'ventilation': 'Ventilation System',\n  'lighting': 'Lighting System',\n  'heating': 'Heating System',\n  'cooling': 'Cooling System',\n  'curtain': 'Curtain System',\n  'nutrient': 'Nutrient System',\n  'water_pump': 'Water Pump',\n  'fan': 'Fan',\n  'humidifier': 'Humidifier',\n  'pump': 'Pump'\n};\n\n// Actuator status styles and labels\nconst STATUS_STYLES = {\n  'on': {\n    color: 'success',\n    label: 'On'\n  },\n  'off': {\n    color: 'default',\n    label: 'Off'\n  },\n  'low': {\n    color: 'info',\n    label: 'Low'\n  },\n  'medium': {\n    color: 'primary',\n    label: 'Medium'\n  },\n  'high': {\n    color: 'warning',\n    label: 'High'\n  },\n  'auto': {\n    color: 'secondary',\n    label: 'Auto'\n  },\n  'dim': {\n    color: 'info',\n    label: 'Dim'\n  },\n  'bright': {\n    color: 'warning',\n    label: 'Bright'\n  },\n  'open': {\n    color: 'success',\n    label: 'Open'\n  },\n  'closed': {\n    color: 'default',\n    label: 'Closed'\n  },\n  'half': {\n    color: 'info',\n    label: 'Half open'\n  },\n  'error': {\n    color: 'error',\n    label: 'Error'\n  }\n};\n\n// Sensor type mapping\nconst SENSOR_TYPE_NAMES = {\n  'temperature': 'Temperature',\n  'humidity': 'Humidity',\n  'light': 'Light',\n  'soil_moisture': 'Soil Moisture',\n  'co2': 'CO2',\n  'ph': 'pH Value',\n  'water_level': 'Water Level'\n};\n\n// Condition type mapping\nconst CONDITION_TYPE_NAMES = {\n  'gt': 'Greater than',\n  'lt': 'Less than',\n  'eq': 'Equal to',\n  'gte': 'Greater than or equal to',\n  'lte': 'Less than or equal to',\n  'change': 'Change'\n};\n\n// Tab definition\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `actuator-tabpanel-${index}`,\n    \"aria-labelledby\": `actuator-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n// Get actuator icon based on type\n_c = TabPanel;\nconst getActuatorIcon = type => {\n  switch (type) {\n    case 'fan':\n      return /*#__PURE__*/_jsxDEV(FanIcon, {\n        color: \"info\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 24\n      }, this);\n    case 'lighting':\n      return /*#__PURE__*/_jsxDEV(LightIcon, {\n        color: \"warning\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }, this);\n    case 'humidifier':\n      return /*#__PURE__*/_jsxDEV(HumidityIcon, {\n        color: \"primary\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 31\n      }, this);\n    case 'irrigation':\n    case 'water_pump':\n    case 'pump':\n      return /*#__PURE__*/_jsxDEV(WaterIcon, {\n        color: \"primary\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this);\n    case 'heating':\n      return /*#__PURE__*/_jsxDEV(TemperatureIcon, {\n        color: \"error\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 28\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(SettingsIcon, {\n        color: \"action\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this);\n  }\n};\n\n// Format date string\nconst formatDate = dateString => {\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\n// Generate mock historical data for demo purposes\nconst generateMockHistory = (actuatorType, days) => {\n  const history = [];\n  const now = new Date();\n  for (let i = days; i >= 0; i--) {\n    const date = new Date(now);\n    date.setDate(date.getDate() - i);\n\n    // Generate history points throughout the day\n    for (let hour of [8, 12, 16, 20]) {\n      const dataPoint = new Date(date);\n      dataPoint.setHours(hour, 0, 0);\n\n      // Each day has a 80% chance of being turned on at some point\n      const isOn = Math.random() < 0.8;\n\n      // For fans, generate speed data\n      let parameters = {};\n      if (actuatorType === 'fan') {\n        parameters.speed = Math.floor(Math.random() * 5) + 1;\n      } else if (actuatorType === 'lighting') {\n        parameters.brightness = Math.floor(Math.random() * 100);\n      } else if (actuatorType === 'irrigation' || actuatorType === 'pump' || actuatorType === 'water_pump') {\n        parameters.flow_rate = Math.floor(Math.random() * 90) + 10;\n      }\n      history.push({\n        timestamp: dataPoint.toISOString(),\n        status: isOn ? 'on' : 'off',\n        parameters: parameters\n      });\n    }\n  }\n  return history;\n};\nconst ActuatorDetail = () => {\n  _s();\n  var _STATUS_STYLES$actuat, _STATUS_STYLES$actuat2, _STATUS_STYLES$actuat3;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [actuator, setActuator] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [tabValue, setTabValue] = useState(0);\n  const [editMode, setEditMode] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [logs, setLogs] = useState([]);\n  const [allowedStates, setAllowedStates] = useState(['on', 'off']);\n  const [autoRuleDialogOpen, setAutoRuleDialogOpen] = useState(false);\n  const [newRule, setNewRule] = useState({\n    sensor_type: '',\n    condition: 'gt',\n    value: 0,\n    action: 'on',\n    parameters: {}\n  });\n  const [saveLoading, setSaveLoading] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n  const [parameterEdit, setParameterEdit] = useState({});\n  const [chartData, setChartData] = useState([]);\n  const [historyData, setHistoryData] = useState([]);\n  const [statistics, setStatistics] = useState({\n    onTime: 0,\n    offTime: 0,\n    activationsToday: 0,\n    averageActivationDuration: 0,\n    lastActivation: null\n  });\n  const {\n    actuatorData\n  } = useSocket() || {\n    actuatorData: {}\n  };\n\n  // Get actuator details\n  const fetchActuatorDetail = async () => {\n    setLoading(true);\n    try {\n      const response = await actuatorAPI.getActuator(id);\n\n      // Check if response is valid\n      if (!response || !response.success) {\n        throw new Error((response === null || response === void 0 ? void 0 : response.message) || 'Failed to fetch actuator data');\n      }\n      const data = response.data;\n\n      // Verify data is not null or undefined\n      if (!data) {\n        throw new Error('Actuator data is empty');\n      }\n      console.log('Actuator data loaded:', data);\n      setActuator(data);\n      setEditData({\n        name: data.name || '',\n        location: data.location || '',\n        is_active: data.is_active || false,\n        mode: data.mode || 'manual',\n        mqtt_topic: data.mqtt_topic || ''\n      });\n      try {\n        // Get allowed states\n        const allowedStatesResponse = await actuatorAPI.getActuatorStatuses(id);\n        if (allowedStatesResponse && allowedStatesResponse.success) {\n          setAllowedStates(allowedStatesResponse.data || ['on', 'off']);\n        }\n      } catch (statesErr) {\n        console.error('Failed to get actuator status options:', statesErr);\n        // Don't fail - just use defaults\n        setAllowedStates(['on', 'off']);\n      }\n      try {\n        // Get actuator logs\n        const logsResponse = await actuatorAPI.getActuatorLogs(id);\n        if (logsResponse && logsResponse.success) {\n          setLogs(logsResponse.data || []);\n        }\n      } catch (logsErr) {\n        console.error('Failed to get actuator logs:', logsErr);\n        // Don't fail - just use empty logs\n        setLogs([]);\n      }\n\n      // Generate historical data for chart visualization\n      const mockHistory = data.history || generateMockHistory(data.type, 30);\n      setHistoryData(mockHistory);\n\n      // Prepare chart data\n      prepareChartData(mockHistory);\n\n      // Calculate statistics\n      calculateStatistics(mockHistory, data.status);\n      setError(null);\n    } catch (err) {\n      console.error('Failed to get actuator details:', err);\n      setError(err.message || 'Failed to get actuator details, please try again later');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchActuatorDetail();\n  }, [id]);\n\n  // Update from Socket data if available\n  useEffect(() => {\n    if (!actuator || Object.keys(actuatorData).length === 0) return;\n\n    // Find matching actuator data\n    Object.values(actuatorData).forEach(socketActuator => {\n      if (socketActuator.type === actuator.type && socketActuator.location.toLowerCase() === actuator.location.toLowerCase()) {\n        setActuator(prev => ({\n          ...prev,\n          status: socketActuator.status,\n          last_control_time: new Date().toISOString()\n        }));\n      }\n    });\n  }, [actuatorData, actuator]);\n\n  // Prepare chart data for visualization\n  const prepareChartData = history => {\n    if (!history || history.length === 0) return;\n\n    // Get the most recent 7 days of data\n    const recentHistory = history.slice(-28);\n\n    // Transform to chart format\n    const formattedData = recentHistory.map(item => ({\n      timestamp: new Date(item.timestamp),\n      date: new Date(item.timestamp).toLocaleDateString(),\n      time: new Date(item.timestamp).toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      }),\n      status: item.status === 'on' ? 1 : 0,\n      ...(item.parameters || {})\n    }));\n    setChartData(formattedData);\n  };\n\n  // Calculate usage statistics\n  const calculateStatistics = (history, currentStatus) => {\n    if (!history || history.length === 0) return;\n\n    // Today's date\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    // Filter logs from today\n    const todayLogs = history.filter(log => {\n      const logDate = new Date(log.timestamp);\n      return logDate >= today;\n    });\n\n    // Count activations today (on to off transitions)\n    let activationsToday = 0;\n    let lastStatus = null;\n    todayLogs.forEach(log => {\n      if (lastStatus === 'off' && log.status === 'on') {\n        activationsToday++;\n      }\n      lastStatus = log.status;\n    });\n\n    // Calculate percentage of time on vs off over the last 7 days\n    const last7days = new Date();\n    last7days.setDate(last7days.getDate() - 7);\n    const last7daysLogs = history.filter(log => {\n      const logDate = new Date(log.timestamp);\n      return logDate >= last7days;\n    });\n    let totalOnMilliseconds = 0;\n    let totalTimeMilliseconds = 0;\n    if (last7daysLogs.length > 0) {\n      // Sort by timestamp\n      const sortedLogs = [...last7daysLogs].sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      let prevLog = null;\n      sortedLogs.forEach(log => {\n        if (prevLog) {\n          const currentTime = new Date(log.timestamp).getTime();\n          const prevTime = new Date(prevLog.timestamp).getTime();\n          const timeDiff = currentTime - prevTime;\n          totalTimeMilliseconds += timeDiff;\n          if (prevLog.status === 'on') {\n            totalOnMilliseconds += timeDiff;\n          }\n        }\n        prevLog = log;\n      });\n    }\n\n    // Calculate on/off percentages\n    const onPercentage = totalTimeMilliseconds > 0 ? Math.round(totalOnMilliseconds / totalTimeMilliseconds * 100) : 0;\n    const offPercentage = 100 - onPercentage;\n\n    // Find the last activation time\n    const lastActivation = history.filter(log => log.status === 'on').sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))[0];\n    setStatistics({\n      onTime: onPercentage,\n      offTime: offPercentage,\n      activationsToday,\n      averageActivationDuration: totalOnMilliseconds > 0 && activationsToday > 0 ? Math.round(totalOnMilliseconds / activationsToday / (1000 * 60)) : 0,\n      lastActivation: (lastActivation === null || lastActivation === void 0 ? void 0 : lastActivation.timestamp) || null\n    });\n  };\n\n  // Control actuator\n  const handleControlActuator = async action => {\n    try {\n      const response = await actuatorAPI.controlActuator(id, {\n        action\n      });\n      if (!response || !response.success) {\n        throw new Error((response === null || response === void 0 ? void 0 : response.message) || 'Failed to control actuator');\n      }\n\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        status: action,\n        last_control_time: new Date().toISOString()\n      }));\n\n      // Show success message briefly\n      setSaveSuccess(true);\n      setTimeout(() => setSaveSuccess(false), 3000);\n\n      // Refresh logs\n      try {\n        const logsResponse = await actuatorAPI.getActuatorLogs(id);\n        if (logsResponse && logsResponse.success) {\n          setLogs(logsResponse.data || []);\n        }\n      } catch (logsErr) {\n        console.error('Failed to refresh logs:', logsErr);\n        // Don't fail for logs refresh\n      }\n    } catch (err) {\n      console.error('Failed to control actuator:', err);\n      setError(err.message || 'Operation failed, please try again later');\n    }\n  };\n  const handleSaveChanges = async () => {\n    setSaveLoading(true);\n    try {\n      const response = await actuatorAPI.updateActuator(id, editData);\n      if (!response || !response.success) {\n        throw new Error((response === null || response === void 0 ? void 0 : response.message) || 'Failed to update actuator');\n      }\n\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        ...editData\n      }));\n      setEditMode(false);\n      setSaveSuccess(true);\n      setTimeout(() => setSaveSuccess(false), 3000);\n    } catch (err) {\n      console.error('Failed to update actuator:', err);\n      setError(err.message || 'Update failed, please try again later');\n    } finally {\n      setSaveLoading(false);\n    }\n  };\n  const handleAddAutoRule = async () => {\n    if (!newRule.sensor_type || !newRule.condition) {\n      setError('Please complete the automatic control rule information');\n      return;\n    }\n    try {\n      const autoRules = {\n        ...(actuator.auto_rules || {})\n      };\n      autoRules[newRule.sensor_type] = {\n        [newRule.condition]: parseFloat(newRule.value),\n        action: newRule.action,\n        parameters: newRule.parameters\n      };\n      await actuatorAPI.updateAutoRules(id, autoRules);\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        auto_rules: autoRules\n      }));\n      setAutoRuleDialogOpen(false);\n      setNewRule({\n        sensor_type: '',\n        condition: 'gt',\n        value: 0,\n        action: 'on',\n        parameters: {}\n      });\n    } catch (err) {\n      console.error('Failed to update automatic control rules:', err);\n      setError('Update rule failed, please try again later');\n    }\n  };\n  const handleRemoveAutoRule = async sensorType => {\n    try {\n      const autoRules = {\n        ...(actuator.auto_rules || {})\n      };\n      delete autoRules[sensorType];\n      await actuatorAPI.updateAutoRules(id, autoRules);\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        auto_rules: autoRules\n      }));\n    } catch (err) {\n      console.error('Failed to remove automatic control rule:', err);\n      setError('Failed to remove rule, please try again later');\n    }\n  };\n  const handleEditParameters = async () => {\n    try {\n      await actuatorAPI.updateParameters(id, parameterEdit);\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        parameters: {\n          ...prev.parameters,\n          ...parameterEdit\n        }\n      }));\n      setParameterEdit({});\n    } catch (err) {\n      console.error('Failed to update parameters:', err);\n      setError('Update parameters failed, please try again later');\n    }\n  };\n  const getParameterFields = () => {\n    if (!actuator || !actuator.parameters) return null;\n    const parameters = actuator.parameters;\n    switch (actuator.type) {\n      case 'fan':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Fan Speed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.speed || parameters.speed || 0,\n              min: 0,\n              max: parameters.max_speed || 5,\n              step: 1,\n              marks: true,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                speed: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Direction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: parameterEdit.direction || parameters.direction || 'forward',\n              onChange: e => setParameterEdit({\n                ...parameterEdit,\n                direction: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"forward\",\n                children: \"Forward\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"reverse\",\n                children: \"Reverse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'lighting':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Brightness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.brightness || parameters.brightness || 0,\n              min: 0,\n              max: 100,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                brightness: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Color Temperature (K)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.color_temp || parameters.color_temp || 3000,\n              min: 2000,\n              max: 6500,\n              step: 100,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                color_temp: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'irrigation':\n      case 'water_pump':\n      case 'pump':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Flow Rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.flow_rate || parameters.flow_rate || 100,\n              min: 10,\n              max: 100,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                flow_rate: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'humidifier':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Humidity Intensity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.intensity || parameters.intensity || 0,\n              min: 0,\n              max: parameters.max_intensity || 10,\n              step: 1,\n              marks: true,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                intensity: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      default:\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"No parameters available for this actuator type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this);\n    }\n  };\n\n  // Get rule parameter fields based on actuator type\n  const getRuleParameterFields = (actuatorType, actionValue) => {\n    switch (actuatorType) {\n      case 'fan':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Fan Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newRule.parameters.speed || '',\n              onChange: e => setNewRule({\n                ...newRule,\n                parameters: {\n                  ...newRule.parameters,\n                  speed: parseInt(e.target.value)\n                }\n              }),\n              children: [0, 1, 2, 3, 4, 5].map(speed => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: speed,\n                children: speed\n              }, speed, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      case 'lighting':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            label: \"Brightness\",\n            type: \"number\",\n            value: newRule.parameters.brightness || '',\n            onChange: e => setNewRule({\n              ...newRule,\n              parameters: {\n                ...newRule.parameters,\n                brightness: parseInt(e.target.value)\n              }\n            }),\n            InputProps: {\n              inputProps: {\n                min: 0,\n                max: 100\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      default:\n        return null;\n    }\n  };\n\n  // Tab switch handling\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  // Render auto rules\n  const renderAutoRules = () => {\n    if (!actuator || !actuator.auto_rules || Object.keys(actuator.auto_rules).length === 0) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"No automatic control rules yet, please add one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 9\n      }, this);\n    }\n    return Object.entries(actuator.auto_rules).map(([sensorType, rule]) => {\n      var _STATUS_STYLES$action;\n      const condition = Object.keys(rule)[0];\n      if (!condition) return null;\n      const value = rule[condition];\n      const action = rule.action;\n      const parameters = rule.parameters || {};\n      return /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: `${SENSOR_TYPE_NAMES[sensorType] || sensorType} ${CONDITION_TYPE_NAMES[condition] || condition} ${value}`,\n          subheader: `Action: ${((_STATUS_STYLES$action = STATUS_STYLES[action]) === null || _STATUS_STYLES$action === void 0 ? void 0 : _STATUS_STYLES$action.label) || action}`,\n          action: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => handleRemoveAutoRule(sensorType),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 11\n        }, this), Object.keys(parameters).length > 0 && /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"Parameter Settings:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: Object.entries(parameters).map(([key, value]) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${key}: ${value}`,\n              size: \"small\",\n              sx: {\n                mr: 1,\n                mb: 1\n              }\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 13\n        }, this)]\n      }, sensorType, true, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  // Render operation logs\n  const renderLogs = () => {\n    if (logs.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"No operation records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this);\n    }\n    return logs.map(log => {\n      var _STATUS_STYLES$log$st, _STATUS_STYLES$log$st2, _STATUS_STYLES$log$pr, _STATUS_STYLES$log$st3;\n      const date = new Date(log.timestamp);\n      const formattedDate = date.toLocaleString();\n      return /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: log.message,\n          subheader: formattedDate,\n          avatar: /*#__PURE__*/_jsxDEV(Chip, {\n            label: ((_STATUS_STYLES$log$st = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st === void 0 ? void 0 : _STATUS_STYLES$log$st.label) || log.status,\n            color: ((_STATUS_STYLES$log$st2 = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st2 === void 0 ? void 0 : _STATUS_STYLES$log$st2.color) || 'default',\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: `Changed from ${((_STATUS_STYLES$log$pr = STATUS_STYLES[log.previous_state]) === null || _STATUS_STYLES$log$pr === void 0 ? void 0 : _STATUS_STYLES$log$pr.label) || log.previous_state} to ${((_STATUS_STYLES$log$st3 = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st3 === void 0 ? void 0 : _STATUS_STYLES$log$st3.label) || log.status}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 13\n          }, this), log.parameters && Object.keys(log.parameters).length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Parameter changes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 17\n            }, this), Object.entries(log.parameters).map(([key, value]) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${key}: ${value}`,\n              size: \"small\",\n              sx: {\n                mr: 1,\n                mt: 1\n              }\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 11\n        }, this)]\n      }, log.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '70vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 24\n          }, this),\n          onClick: () => navigate('/actuators'),\n          sx: {\n            mt: 2\n          },\n          children: \"Back to Actuator List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 7\n    }, this);\n  }\n  if (!actuator) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"warning\",\n          children: \"Actuator information not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 24\n          }, this),\n          onClick: () => navigate('/actuators'),\n          sx: {\n            mt: 2\n          },\n          children: \"Back to Actuator List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 26\n            }, this),\n            onClick: () => navigate('/actuators'),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            children: \"Actuator Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: ((_STATUS_STYLES$actuat = STATUS_STYLES[actuator.status]) === null || _STATUS_STYLES$actuat === void 0 ? void 0 : _STATUS_STYLES$actuat.label) || actuator.status,\n            color: ((_STATUS_STYLES$actuat2 = STATUS_STYLES[actuator.status]) === null || _STATUS_STYLES$actuat2 === void 0 ? void 0 : _STATUS_STYLES$actuat2.color) || 'default',\n            size: \"medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 7\n    }, this), saveSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: \"Saved successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderBottom: 1,\n        borderColor: 'divider'\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        onChange: handleTabChange,\n        \"aria-label\": \"Actuator detail tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Control Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Automatic Rules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Operation History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 0,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mb: 2\n                },\n                children: [getActuatorIcon(actuator.type), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    ml: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    component: \"h2\",\n                    children: actuator.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 900,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: actuator.is_active ? 'Enabled' : 'Disabled',\n                    color: actuator.is_active ? 'success' : 'error',\n                    size: \"small\",\n                    sx: {\n                      mt: 0.5\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 903,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 899,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 916,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: ACTUATOR_TYPE_NAMES[actuator.type] || actuator.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 917,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 915,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Location\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 920,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: actuator.location\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 921,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 919,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 924,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: ((_STATUS_STYLES$actuat3 = STATUS_STYLES[actuator.status]) === null || _STATUS_STYLES$actuat3 === void 0 ? void 0 : _STATUS_STYLES$actuat3.label) || actuator.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 925,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 923,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Mode\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: actuator.mode === 'auto' ? 'Automatic' : 'Manual'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 929,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"MQTT Topic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 932,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    sx: {\n                      wordBreak: 'break-all'\n                    },\n                    children: actuator.mqtt_topic\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 933,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 931,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Quick Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 939,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: allowedStates.map(state => {\n                  var _STATUS_STYLES$state, _STATUS_STYLES$state2;\n                  return /*#__PURE__*/_jsxDEV(Button, {\n                    variant: actuator.status === state ? \"contained\" : \"outlined\",\n                    color: ((_STATUS_STYLES$state = STATUS_STYLES[state]) === null || _STATUS_STYLES$state === void 0 ? void 0 : _STATUS_STYLES$state.color) || 'primary',\n                    onClick: () => handleControlActuator(state),\n                    size: \"small\",\n                    children: ((_STATUS_STYLES$state2 = STATUS_STYLES[state]) === null || _STATUS_STYLES$state2 === void 0 ? void 0 : _STATUS_STYLES$state2.label) || state\n                  }, state, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 942,\n                    columnNumber: 21\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 940,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Technical Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                disablePadding: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  disablePadding: true,\n                  sx: {\n                    py: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Model\",\n                    secondary: actuator.model || `Generic ${ACTUATOR_TYPE_NAMES[actuator.type] || actuator.type}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 967,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 966,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 972,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  disablePadding: true,\n                  sx: {\n                    py: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Manufacturer\",\n                    secondary: actuator.manufacturer || \"Smart Farm Systems\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 975,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 974,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 980,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  disablePadding: true,\n                  sx: {\n                    py: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Installation Date\",\n                    secondary: formatDate(actuator.created_at)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 983,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 988,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  disablePadding: true,\n                  sx: {\n                    py: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Last Maintenance\",\n                    secondary: actuator.maintenance_date ? formatDate(actuator.maintenance_date) : \"Not available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 991,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 996,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  disablePadding: true,\n                  sx: {\n                    py: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Firmware Version\",\n                    secondary: actuator.firmware_version || \"1.0.0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 999,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 998,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1004,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  disablePadding: true,\n                  sx: {\n                    py: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Power Consumption\",\n                    secondary: `${actuator.power_consumption || (actuator.type === 'fan' ? '15-45' : actuator.type === 'lighting' ? '20-100' : '10-30')} watts`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1007,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1006,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Usage Statistics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1021,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      textAlign: 'center',\n                      p: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: \"On Time (Last 7 Days)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1027,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h4\",\n                      color: \"primary\",\n                      children: [statistics.onTime, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1028,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1026,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1025,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      textAlign: 'center',\n                      p: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: \"Off Time (Last 7 Days)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1033,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h4\",\n                      color: \"text.secondary\",\n                      children: [statistics.offTime, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1034,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1032,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1031,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      textAlign: 'center',\n                      p: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: \"Activations Today\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1039,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h4\",\n                      color: \"success.main\",\n                      children: statistics.activationsToday\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1040,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1038,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1037,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      textAlign: 'center',\n                      p: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: \"Avg. Duration\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1045,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h4\",\n                      color: \"info.main\",\n                      children: [statistics.averageActivationDuration, \" min\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1046,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1044,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1024,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1019,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Operation History\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1059,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"View Full History\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      children: /*#__PURE__*/_jsxDEV(HistoryIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1065,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1064,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1063,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Adjust Date Range\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      children: /*#__PURE__*/_jsxDEV(DateRangeIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1070,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1069,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1068,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1062,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 17\n              }, this), chartData.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 350,\n                  width: '100%'\n                },\n                children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  width: \"100%\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(LineChart, {\n                    data: chartData,\n                    margin: {\n                      top: 5,\n                      right: 30,\n                      left: 20,\n                      bottom: 5\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                      strokeDasharray: \"3 3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1088,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                      dataKey: \"timestamp\",\n                      scale: \"time\",\n                      type: \"number\",\n                      domain: ['auto', 'auto'],\n                      tickFormatter: timestamp => {\n                        const date = new Date(timestamp);\n                        return `${date.getMonth() + 1}/${date.getDate()}`;\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1089,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1099,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(RechartsTooltip, {\n                      formatter: (value, name) => {\n                        if (name === 'status') return [value === 1 ? 'On' : 'Off', 'Status'];\n                        return [value, name];\n                      },\n                      labelFormatter: timestamp => new Date(timestamp).toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1100,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1107,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Line, {\n                      type: \"stepAfter\",\n                      dataKey: \"status\",\n                      stroke: \"#2196f3\",\n                      activeDot: {\n                        r: 8\n                      },\n                      name: \"Status\",\n                      strokeWidth: 2\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1108,\n                      columnNumber: 25\n                    }, this), actuator.type === 'fan' && /*#__PURE__*/_jsxDEV(Line, {\n                      type: \"monotone\",\n                      dataKey: \"speed\",\n                      stroke: \"#4caf50\",\n                      name: \"Speed\",\n                      dot: {\n                        r: 3\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1117,\n                      columnNumber: 27\n                    }, this), actuator.type === 'lighting' && /*#__PURE__*/_jsxDEV(Line, {\n                      type: \"monotone\",\n                      dataKey: \"brightness\",\n                      stroke: \"#ff9800\",\n                      name: \"Brightness\",\n                      dot: {\n                        r: 3\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1126,\n                      columnNumber: 27\n                    }, this), (actuator.type === 'pump' || actuator.type === 'irrigation' || actuator.type === 'water_pump') && /*#__PURE__*/_jsxDEV(Line, {\n                      type: \"monotone\",\n                      dataKey: \"flow_rate\",\n                      stroke: \"#9c27b0\",\n                      name: \"Flow Rate\",\n                      dot: {\n                        r: 3\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1135,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1079,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1078,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  textAlign: 'center',\n                  py: 4\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"text.secondary\",\n                  children: \"No historical data available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1148,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1147,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Recent Operations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  size: \"small\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Time\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1167,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1168,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Source\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1169,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Parameters\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1170,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1166,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1165,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: logs.slice(0, 10).map((log, index) => {\n                      var _STATUS_STYLES$log$st4, _STATUS_STYLES$log$st5;\n                      return /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          component: \"th\",\n                          scope: \"row\",\n                          children: new Date(log.timestamp).toLocaleString()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1176,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: /*#__PURE__*/_jsxDEV(Chip, {\n                            label: ((_STATUS_STYLES$log$st4 = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st4 === void 0 ? void 0 : _STATUS_STYLES$log$st4.label) || log.status,\n                            color: ((_STATUS_STYLES$log$st5 = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st5 === void 0 ? void 0 : _STATUS_STYLES$log$st5.color) || 'default',\n                            size: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1180,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1179,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: log.source || 'manual'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1186,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: log.parameters && Object.keys(log.parameters).length > 0 ? Object.entries(log.parameters).map(([key, value]) => /*#__PURE__*/_jsxDEV(Chip, {\n                            label: `${key}: ${value}`,\n                            size: \"small\",\n                            sx: {\n                              mr: 0.5,\n                              mb: 0.5\n                            }\n                          }, key, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1190,\n                            columnNumber: 33\n                          }, this)) : \"-\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1187,\n                          columnNumber: 27\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1175,\n                        columnNumber: 25\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1173,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1163,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Status Control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                mb: 3\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 1,\n                mb: 3\n              },\n              children: allowedStates.map(state => {\n                var _STATUS_STYLES$state3, _STATUS_STYLES$state4;\n                return /*#__PURE__*/_jsxDEV(Button, {\n                  variant: actuator.status === state ? \"contained\" : \"outlined\",\n                  color: ((_STATUS_STYLES$state3 = STATUS_STYLES[state]) === null || _STATUS_STYLES$state3 === void 0 ? void 0 : _STATUS_STYLES$state3.color) || 'primary',\n                  onClick: () => handleControlActuator(state),\n                  sx: {\n                    minWidth: '100px'\n                  },\n                  children: ((_STATUS_STYLES$state4 = STATUS_STYLES[state]) === null || _STATUS_STYLES$state4 === void 0 ? void 0 : _STATUS_STYLES$state4.label) || state\n                }, state, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1222,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Parameter Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                mb: 3\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1239,\n              columnNumber: 15\n            }, this), !actuator.parameters || Object.keys(actuator.parameters).length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"This actuator has no parameter settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [getParameterFields(), Object.keys(parameterEdit).length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  display: 'flex',\n                  justifyContent: 'flex-end'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  onClick: () => setParameterEdit({}),\n                  sx: {\n                    mr: 1\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1251,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: handleEditParameters,\n                  children: \"Apply Parameters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1258,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1250,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 2,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Automatic Control Rules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1280,\n              columnNumber: 26\n            }, this),\n            onClick: () => setAutoRuleDialogOpen(true),\n            children: \"Add Rule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 11\n        }, this), renderAutoRules()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: autoRuleDialogOpen,\n        onClose: () => setAutoRuleDialogOpen(false),\n        maxWidth: \"sm\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Add Automatic Control Rule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Sensor Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newRule.sensor_type || '',\n              onChange: e => setNewRule({\n                ...newRule,\n                sensor_type: e.target.value\n              }),\n              children: Object.entries(SENSOR_TYPE_NAMES).map(([key, value]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: key,\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1302,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Condition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newRule.condition || 'gt',\n              onChange: e => setNewRule({\n                ...newRule,\n                condition: e.target.value\n              }),\n              children: Object.entries(CONDITION_TYPE_NAMES).map(([key, value]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: key,\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1314,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            label: \"Value\",\n            type: \"number\",\n            value: newRule.value || '',\n            onChange: e => setNewRule({\n              ...newRule,\n              value: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newRule.action || '',\n              onChange: e => setNewRule({\n                ...newRule,\n                action: e.target.value\n              }),\n              children: allowedStates.map(state => {\n                var _STATUS_STYLES$state5;\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: state,\n                  children: ((_STATUS_STYLES$state5 = STATUS_STYLES[state]) === null || _STATUS_STYLES$state5 === void 0 ? void 0 : _STATUS_STYLES$state5.label) || state\n                }, state, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1335,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1328,\n            columnNumber: 13\n          }, this), newRule.action && getRuleParameterFields(actuator.type, newRule.action)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setAutoRuleDialogOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddAutoRule,\n            variant: \"contained\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 3,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Operation Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1356,\n          columnNumber: 11\n        }, this), logs.length > 0 ? /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1363,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1364,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1365,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Source\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1366,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Parameters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1367,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1362,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: logs.map((log, index) => {\n                var _STATUS_STYLES$log$st6, _STATUS_STYLES$log$st7;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: new Date(log.timestamp).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1373,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: ((_STATUS_STYLES$log$st6 = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st6 === void 0 ? void 0 : _STATUS_STYLES$log$st6.label) || log.status,\n                      color: ((_STATUS_STYLES$log$st7 = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st7 === void 0 ? void 0 : _STATUS_STYLES$log$st7.color) || 'default',\n                      size: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1375,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1374,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: log.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1381,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: log.source || 'manual'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1382,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: log.parameters && Object.keys(log.parameters).length > 0 ? Object.entries(log.parameters).map(([key, value]) => /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `${key}: ${value}`,\n                      size: \"small\",\n                      sx: {\n                        mr: 0.5,\n                        mb: 0.5\n                      }\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1386,\n                      columnNumber: 29\n                    }, this)) : \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1383,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1372,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1370,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1360,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1359,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"No operation records available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1403,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1354,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        mt: 3,\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1414,\n          columnNumber: 22\n        }, this),\n        children: \"Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(ErrorOutlineIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1420,\n          columnNumber: 22\n        }, this),\n        children: \"Troubleshoot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1426,\n          columnNumber: 22\n        }, this),\n        onClick: () => {\n          setTabValue(0);\n          setEditMode(true);\n        },\n        children: \"Edit Actuator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1424,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1411,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 850,\n    columnNumber: 5\n  }, this);\n};\n_s(ActuatorDetail, \"PUH9+O5lLeNI2ynmAfiXe4vFGMM=\", false, function () {\n  return [useParams, useNavigate, useSocket];\n});\n_c2 = ActuatorDetail;\nexport default ActuatorDetail;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ActuatorDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Box","Container","Typography","Button","Grid","Paper","Divider","TextField","FormControl","InputLabel","Select","MenuItem","Switch","FormControlLabel","Tab","Tabs","CircularProgress","Chip","Card","CardContent","CardHeader","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Alert","Tooltip","Slider","List","ListItem","ListItemText","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","ArrowBack","ArrowBackIcon","Save","SaveIcon","PowerSettingsNew","PowerIcon","History","HistoryIcon","Edit","EditIcon","Add","AddIcon","Delete","DeleteIcon","SettingsBackupRestore","ResetIcon","Check","CheckIcon","Close","CloseIcon","Settings","SettingsIcon","ErrorOutline","ErrorOutlineIcon","DateRange","DateRangeIcon","Opacity","HumidityIcon","Thermostat","TemperatureIcon","Air","FanIcon","WbSunny","LightIcon","WaterDrop","WaterIcon","actuatorAPI","LineChart","Line","XAxis","YAxis","CartesianGrid","RechartsTooltip","ResponsiveContainer","Legend","useSocket","jsxDEV","_jsxDEV","Fragment","_Fragment","ACTUATOR_TYPE_NAMES","STATUS_STYLES","color","label","SENSOR_TYPE_NAMES","CONDITION_TYPE_NAMES","TabPanel","props","children","value","index","other","role","hidden","id","sx","py","fileName","_jsxFileName","lineNumber","columnNumber","_c","getActuatorIcon","type","fontSize","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","generateMockHistory","actuatorType","days","history","now","i","date","setDate","getDate","hour","dataPoint","setHours","isOn","Math","random","parameters","speed","floor","brightness","flow_rate","push","timestamp","toISOString","status","ActuatorDetail","_s","_STATUS_STYLES$actuat","_STATUS_STYLES$actuat2","_STATUS_STYLES$actuat3","navigate","actuator","setActuator","loading","setLoading","error","setError","tabValue","setTabValue","editMode","setEditMode","editData","setEditData","logs","setLogs","allowedStates","setAllowedStates","autoRuleDialogOpen","setAutoRuleDialogOpen","newRule","setNewRule","sensor_type","condition","action","saveLoading","setSaveLoading","saveSuccess","setSaveSuccess","parameterEdit","setParameterEdit","chartData","setChartData","historyData","setHistoryData","statistics","setStatistics","onTime","offTime","activationsToday","averageActivationDuration","lastActivation","actuatorData","fetchActuatorDetail","response","getActuator","success","Error","message","data","console","log","name","location","is_active","mode","mqtt_topic","allowedStatesResponse","getActuatorStatuses","statesErr","logsResponse","getActuatorLogs","logsErr","mockHistory","prepareChartData","calculateStatistics","err","Object","keys","length","values","forEach","socketActuator","toLowerCase","prev","last_control_time","recentHistory","slice","formattedData","map","item","time","toLocaleTimeString","minute","currentStatus","today","todayLogs","filter","logDate","lastStatus","last7days","last7daysLogs","totalOnMilliseconds","totalTimeMilliseconds","sortedLogs","sort","a","b","prevLog","currentTime","getTime","prevTime","timeDiff","onPercentage","round","offPercentage","handleControlActuator","controlActuator","setTimeout","handleSaveChanges","updateActuator","handleAddAutoRule","autoRules","auto_rules","parseFloat","updateAutoRules","handleRemoveAutoRule","sensorType","handleEditParameters","updateParameters","getParameterFields","variant","gutterBottom","px","pb","min","max","max_speed","step","marks","valueLabelDisplay","onChange","_","fullWidth","margin","direction","e","target","color_temp","intensity","max_intensity","getRuleParameterFields","actionValue","parseInt","InputProps","inputProps","handleTabChange","event","newValue","renderAutoRules","entries","rule","_STATUS_STYLES$action","mb","title","subheader","onClick","mt","key","size","mr","renderLogs","_STATUS_STYLES$log$st","_STATUS_STYLES$log$st2","_STATUS_STYLES$log$pr","_STATUS_STYLES$log$st3","formattedDate","toLocaleString","avatar","previous_state","maxWidth","display","justifyContent","alignItems","height","severity","startIcon","container","spacing","xs","component","borderBottom","borderColor","md","ml","my","wordBreak","flexWrap","gap","state","_STATUS_STYLES$state","_STATUS_STYLES$state2","disablePadding","primary","secondary","model","manufacturer","created_at","maintenance_date","firmware_version","power_consumption","sm","textAlign","p","width","top","right","left","bottom","strokeDasharray","dataKey","scale","domain","tickFormatter","getMonth","formatter","labelFormatter","stroke","activeDot","r","strokeWidth","dot","_STATUS_STYLES$log$st4","_STATUS_STYLES$log$st5","scope","source","_STATUS_STYLES$state3","_STATUS_STYLES$state4","minWidth","open","onClose","_STATUS_STYLES$state5","_STATUS_STYLES$log$st6","_STATUS_STYLES$log$st7","_c2","$RefreshReg$"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/src/pages/ActuatorDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { \r\n  Box, \r\n  Container, \r\n  Typography, \r\n  Button, \r\n  Grid, \r\n  Paper, \r\n  Divider, \r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  FormControlLabel,\r\n  Tab,\r\n  Tabs,\r\n  CircularProgress,\r\n  Chip,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Alert,\r\n  Tooltip,\r\n  Slider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow\r\n} from '@mui/material';\r\nimport { \r\n  ArrowBack as ArrowBackIcon,\r\n  Save as SaveIcon,\r\n  PowerSettingsNew as PowerIcon,\r\n  History as HistoryIcon,\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  SettingsBackupRestore as ResetIcon,\r\n  Check as CheckIcon,\r\n  Close as CloseIcon,\r\n  Settings as SettingsIcon,\r\n  ErrorOutline as ErrorOutlineIcon,\r\n  DateRange as DateRangeIcon,\r\n  Opacity as HumidityIcon,\r\n  Thermostat as TemperatureIcon,\r\n  Air as FanIcon,\r\n  WbSunny as LightIcon,\r\n  WaterDrop as WaterIcon\r\n} from '@mui/icons-material';\r\nimport { actuatorAPI } from '../services/api';\r\nimport { \r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, \r\n  Tooltip as RechartsTooltip, ResponsiveContainer, Legend \r\n} from 'recharts';\r\nimport { useSocket } from '../contexts/SocketContext';\r\n\r\n// Actuator type mapping\r\nconst ACTUATOR_TYPE_NAMES = {\r\n  'irrigation': 'Irrigation System',\r\n  'ventilation': 'Ventilation System',\r\n  'lighting': 'Lighting System',\r\n  'heating': 'Heating System',\r\n  'cooling': 'Cooling System', \r\n  'curtain': 'Curtain System',\r\n  'nutrient': 'Nutrient System',\r\n  'water_pump': 'Water Pump',\r\n  'fan': 'Fan',\r\n  'humidifier': 'Humidifier',\r\n  'pump': 'Pump'\r\n};\r\n\r\n// Actuator status styles and labels\r\nconst STATUS_STYLES = {\r\n  'on': { color: 'success', label: 'On' },\r\n  'off': { color: 'default', label: 'Off' },\r\n  'low': { color: 'info', label: 'Low' },\r\n  'medium': { color: 'primary', label: 'Medium' },\r\n  'high': { color: 'warning', label: 'High' },\r\n  'auto': { color: 'secondary', label: 'Auto' },\r\n  'dim': { color: 'info', label: 'Dim' },\r\n  'bright': { color: 'warning', label: 'Bright' },\r\n  'open': { color: 'success', label: 'Open' },\r\n  'closed': { color: 'default', label: 'Closed' },\r\n  'half': { color: 'info', label: 'Half open' },\r\n  'error': { color: 'error', label: 'Error' }\r\n};\r\n\r\n// Sensor type mapping\r\nconst SENSOR_TYPE_NAMES = {\r\n  'temperature': 'Temperature',\r\n  'humidity': 'Humidity',\r\n  'light': 'Light',\r\n  'soil_moisture': 'Soil Moisture',\r\n  'co2': 'CO2',\r\n  'ph': 'pH Value',\r\n  'water_level': 'Water Level'\r\n};\r\n\r\n// Condition type mapping\r\nconst CONDITION_TYPE_NAMES = {\r\n  'gt': 'Greater than',\r\n  'lt': 'Less than',\r\n  'eq': 'Equal to',\r\n  'gte': 'Greater than or equal to',\r\n  'lte': 'Less than or equal to',\r\n  'change': 'Change'\r\n};\r\n\r\n// Tab definition\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`actuator-tabpanel-${index}`}\r\n      aria-labelledby={`actuator-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ py: 3 }}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Get actuator icon based on type\r\nconst getActuatorIcon = (type) => {\r\n  switch(type) {\r\n    case 'fan': return <FanIcon color=\"info\" fontSize=\"large\" />;\r\n    case 'lighting': return <LightIcon color=\"warning\" fontSize=\"large\" />;\r\n    case 'humidifier': return <HumidityIcon color=\"primary\" fontSize=\"large\" />;\r\n    case 'irrigation':\r\n    case 'water_pump':\r\n    case 'pump': return <WaterIcon color=\"primary\" fontSize=\"large\" />;\r\n    case 'heating': return <TemperatureIcon color=\"error\" fontSize=\"large\" />;\r\n    default: return <SettingsIcon color=\"action\" fontSize=\"large\" />;\r\n  }\r\n};\r\n\r\n// Format date string\r\nconst formatDate = (dateString) => {\r\n  const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n  return new Date(dateString).toLocaleDateString(undefined, options);\r\n};\r\n\r\n// Generate mock historical data for demo purposes\r\nconst generateMockHistory = (actuatorType, days) => {\r\n  const history = [];\r\n  const now = new Date();\r\n\r\n  for (let i = days; i >= 0; i--) {\r\n    const date = new Date(now);\r\n    date.setDate(date.getDate() - i);\r\n    \r\n    // Generate history points throughout the day\r\n    for (let hour of [8, 12, 16, 20]) {\r\n      const dataPoint = new Date(date);\r\n      dataPoint.setHours(hour, 0, 0);\r\n      \r\n      // Each day has a 80% chance of being turned on at some point\r\n      const isOn = Math.random() < 0.8;\r\n      \r\n      // For fans, generate speed data\r\n      let parameters = {};\r\n      if (actuatorType === 'fan') {\r\n        parameters.speed = Math.floor(Math.random() * 5) + 1;\r\n      } else if (actuatorType === 'lighting') {\r\n        parameters.brightness = Math.floor(Math.random() * 100);\r\n      } else if (actuatorType === 'irrigation' || actuatorType === 'pump' || actuatorType === 'water_pump') {\r\n        parameters.flow_rate = Math.floor(Math.random() * 90) + 10;\r\n      }\r\n      \r\n      history.push({\r\n        timestamp: dataPoint.toISOString(),\r\n        status: isOn ? 'on' : 'off',\r\n        parameters: parameters\r\n      });\r\n    }\r\n  }\r\n  \r\n  return history;\r\n};\r\n\r\nconst ActuatorDetail = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [actuator, setActuator] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editData, setEditData] = useState({});\r\n  const [logs, setLogs] = useState([]);\r\n  const [allowedStates, setAllowedStates] = useState(['on', 'off']);\r\n  const [autoRuleDialogOpen, setAutoRuleDialogOpen] = useState(false);\r\n  const [newRule, setNewRule] = useState({\r\n    sensor_type: '',\r\n    condition: 'gt',\r\n    value: 0,\r\n    action: 'on',\r\n    parameters: {}\r\n  });\r\n  const [saveLoading, setSaveLoading] = useState(false);\r\n  const [saveSuccess, setSaveSuccess] = useState(false);\r\n  const [parameterEdit, setParameterEdit] = useState({});\r\n  const [chartData, setChartData] = useState([]);\r\n  const [historyData, setHistoryData] = useState([]);\r\n  const [statistics, setStatistics] = useState({\r\n    onTime: 0,\r\n    offTime: 0,\r\n    activationsToday: 0,\r\n    averageActivationDuration: 0,\r\n    lastActivation: null\r\n  });\r\n  const { actuatorData } = useSocket() || { actuatorData: {} };\r\n\r\n  // Get actuator details\r\n  const fetchActuatorDetail = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await actuatorAPI.getActuator(id);\r\n      \r\n      // Check if response is valid\r\n      if (!response || !response.success) {\r\n        throw new Error(response?.message || 'Failed to fetch actuator data');\r\n      }\r\n      \r\n      const data = response.data;\r\n      \r\n      // Verify data is not null or undefined\r\n      if (!data) {\r\n        throw new Error('Actuator data is empty');\r\n      }\r\n      \r\n      console.log('Actuator data loaded:', data);\r\n      \r\n      setActuator(data);\r\n      setEditData({\r\n        name: data.name || '',\r\n        location: data.location || '',\r\n        is_active: data.is_active || false,\r\n        mode: data.mode || 'manual',\r\n        mqtt_topic: data.mqtt_topic || ''\r\n      });\r\n      \r\n      try {\r\n        // Get allowed states\r\n        const allowedStatesResponse = await actuatorAPI.getActuatorStatuses(id);\r\n        if (allowedStatesResponse && allowedStatesResponse.success) {\r\n          setAllowedStates(allowedStatesResponse.data || ['on', 'off']);\r\n        }\r\n      } catch (statesErr) {\r\n        console.error('Failed to get actuator status options:', statesErr);\r\n        // Don't fail - just use defaults\r\n        setAllowedStates(['on', 'off']);\r\n      }\r\n      \r\n      try {\r\n        // Get actuator logs\r\n        const logsResponse = await actuatorAPI.getActuatorLogs(id);\r\n        if (logsResponse && logsResponse.success) {\r\n          setLogs(logsResponse.data || []);\r\n        }\r\n      } catch (logsErr) {\r\n        console.error('Failed to get actuator logs:', logsErr);\r\n        // Don't fail - just use empty logs\r\n        setLogs([]);\r\n      }\r\n      \r\n      // Generate historical data for chart visualization\r\n      const mockHistory = data.history || generateMockHistory(data.type, 30);\r\n      setHistoryData(mockHistory);\r\n      \r\n      // Prepare chart data\r\n      prepareChartData(mockHistory);\r\n      \r\n      // Calculate statistics\r\n      calculateStatistics(mockHistory, data.status);\r\n      \r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Failed to get actuator details:', err);\r\n      setError(err.message || 'Failed to get actuator details, please try again later');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchActuatorDetail();\r\n  }, [id]);\r\n\r\n  // Update from Socket data if available\r\n  useEffect(() => {\r\n    if (!actuator || Object.keys(actuatorData).length === 0) return;\r\n    \r\n    // Find matching actuator data\r\n    Object.values(actuatorData).forEach(socketActuator => {\r\n      if (socketActuator.type === actuator.type && \r\n          socketActuator.location.toLowerCase() === actuator.location.toLowerCase()) {\r\n        \r\n        setActuator(prev => ({\r\n          ...prev,\r\n          status: socketActuator.status,\r\n          last_control_time: new Date().toISOString()\r\n        }));\r\n      }\r\n    });\r\n  }, [actuatorData, actuator]);\r\n\r\n  // Prepare chart data for visualization\r\n  const prepareChartData = (history) => {\r\n    if (!history || history.length === 0) return;\r\n    \r\n    // Get the most recent 7 days of data\r\n    const recentHistory = history.slice(-28);\r\n    \r\n    // Transform to chart format\r\n    const formattedData = recentHistory.map(item => ({\r\n      timestamp: new Date(item.timestamp),\r\n      date: new Date(item.timestamp).toLocaleDateString(),\r\n      time: new Date(item.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}),\r\n      status: item.status === 'on' ? 1 : 0,\r\n      ...(item.parameters || {})\r\n    }));\r\n    \r\n    setChartData(formattedData);\r\n  };\r\n\r\n  // Calculate usage statistics\r\n  const calculateStatistics = (history, currentStatus) => {\r\n    if (!history || history.length === 0) return;\r\n    \r\n    // Today's date\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    // Filter logs from today\r\n    const todayLogs = history.filter(log => {\r\n      const logDate = new Date(log.timestamp);\r\n      return logDate >= today;\r\n    });\r\n    \r\n    // Count activations today (on to off transitions)\r\n    let activationsToday = 0;\r\n    let lastStatus = null;\r\n    todayLogs.forEach(log => {\r\n      if (lastStatus === 'off' && log.status === 'on') {\r\n        activationsToday++;\r\n      }\r\n      lastStatus = log.status;\r\n    });\r\n    \r\n    // Calculate percentage of time on vs off over the last 7 days\r\n    const last7days = new Date();\r\n    last7days.setDate(last7days.getDate() - 7);\r\n    \r\n    const last7daysLogs = history.filter(log => {\r\n      const logDate = new Date(log.timestamp);\r\n      return logDate >= last7days;\r\n    });\r\n    \r\n    let totalOnMilliseconds = 0;\r\n    let totalTimeMilliseconds = 0;\r\n    \r\n    if (last7daysLogs.length > 0) {\r\n      // Sort by timestamp\r\n      const sortedLogs = [...last7daysLogs].sort((a, b) => \r\n        new Date(a.timestamp) - new Date(b.timestamp)\r\n      );\r\n      \r\n      let prevLog = null;\r\n      \r\n      sortedLogs.forEach(log => {\r\n        if (prevLog) {\r\n          const currentTime = new Date(log.timestamp).getTime();\r\n          const prevTime = new Date(prevLog.timestamp).getTime();\r\n          const timeDiff = currentTime - prevTime;\r\n          \r\n          totalTimeMilliseconds += timeDiff;\r\n          if (prevLog.status === 'on') {\r\n            totalOnMilliseconds += timeDiff;\r\n          }\r\n        }\r\n        prevLog = log;\r\n      });\r\n    }\r\n    \r\n    // Calculate on/off percentages\r\n    const onPercentage = totalTimeMilliseconds > 0 \r\n      ? Math.round((totalOnMilliseconds / totalTimeMilliseconds) * 100) \r\n      : 0;\r\n    \r\n    const offPercentage = 100 - onPercentage;\r\n    \r\n    // Find the last activation time\r\n    const lastActivation = history\r\n      .filter(log => log.status === 'on')\r\n      .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))[0];\r\n    \r\n    setStatistics({\r\n      onTime: onPercentage,\r\n      offTime: offPercentage,\r\n      activationsToday,\r\n      averageActivationDuration: totalOnMilliseconds > 0 && activationsToday > 0 \r\n        ? Math.round((totalOnMilliseconds / activationsToday) / (1000 * 60)) \r\n        : 0,\r\n      lastActivation: lastActivation?.timestamp || null\r\n    });\r\n  };\r\n\r\n  // Control actuator\r\n  const handleControlActuator = async (action) => {\r\n    try {\r\n      const response = await actuatorAPI.controlActuator(id, { action });\r\n      \r\n      if (!response || !response.success) {\r\n        throw new Error(response?.message || 'Failed to control actuator');\r\n      }\r\n      \r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev, \r\n        status: action,\r\n        last_control_time: new Date().toISOString()\r\n      }));\r\n      \r\n      // Show success message briefly\r\n      setSaveSuccess(true);\r\n      setTimeout(() => setSaveSuccess(false), 3000);\r\n      \r\n      // Refresh logs\r\n      try {\r\n        const logsResponse = await actuatorAPI.getActuatorLogs(id);\r\n        if (logsResponse && logsResponse.success) {\r\n          setLogs(logsResponse.data || []);\r\n        }\r\n      } catch (logsErr) {\r\n        console.error('Failed to refresh logs:', logsErr);\r\n        // Don't fail for logs refresh\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to control actuator:', err);\r\n      setError(err.message || 'Operation failed, please try again later');\r\n    }\r\n  };\r\n\r\n  const handleSaveChanges = async () => {\r\n    setSaveLoading(true);\r\n    try {\r\n      const response = await actuatorAPI.updateActuator(id, editData);\r\n      \r\n      if (!response || !response.success) {\r\n        throw new Error(response?.message || 'Failed to update actuator');\r\n      }\r\n      \r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev,\r\n        ...editData\r\n      }));\r\n      setEditMode(false);\r\n      setSaveSuccess(true);\r\n      setTimeout(() => setSaveSuccess(false), 3000);\r\n    } catch (err) {\r\n      console.error('Failed to update actuator:', err);\r\n      setError(err.message || 'Update failed, please try again later');\r\n    } finally {\r\n      setSaveLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddAutoRule = async () => {\r\n    if (!newRule.sensor_type || !newRule.condition) {\r\n      setError('Please complete the automatic control rule information');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const autoRules = { ...(actuator.auto_rules || {}) };\r\n      autoRules[newRule.sensor_type] = {\r\n        [newRule.condition]: parseFloat(newRule.value),\r\n        action: newRule.action,\r\n        parameters: newRule.parameters\r\n      };\r\n\r\n      await actuatorAPI.updateAutoRules(id, autoRules);\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev,\r\n        auto_rules: autoRules\r\n      }));\r\n      setAutoRuleDialogOpen(false);\r\n      setNewRule({\r\n        sensor_type: '',\r\n        condition: 'gt',\r\n        value: 0,\r\n        action: 'on',\r\n        parameters: {}\r\n      });\r\n    } catch (err) {\r\n      console.error('Failed to update automatic control rules:', err);\r\n      setError('Update rule failed, please try again later');\r\n    }\r\n  };\r\n\r\n  const handleRemoveAutoRule = async (sensorType) => {\r\n    try {\r\n      const autoRules = { ...(actuator.auto_rules || {}) };\r\n      delete autoRules[sensorType];\r\n      \r\n      await actuatorAPI.updateAutoRules(id, autoRules);\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev,\r\n        auto_rules: autoRules\r\n      }));\r\n    } catch (err) {\r\n      console.error('Failed to remove automatic control rule:', err);\r\n      setError('Failed to remove rule, please try again later');\r\n    }\r\n  };\r\n\r\n  const handleEditParameters = async () => {\r\n    try {\r\n      await actuatorAPI.updateParameters(id, parameterEdit);\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev,\r\n        parameters: {...prev.parameters, ...parameterEdit}\r\n      }));\r\n      setParameterEdit({});\r\n    } catch (err) {\r\n      console.error('Failed to update parameters:', err);\r\n      setError('Update parameters failed, please try again later');\r\n    }\r\n  };\r\n\r\n  const getParameterFields = () => {\r\n    if (!actuator || !actuator.parameters) return null;\r\n    \r\n    const parameters = actuator.parameters;\r\n    \r\n    switch(actuator.type) {\r\n      case 'fan':\r\n        return (\r\n          <>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Fan Speed</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.speed || parameters.speed || 0}\r\n                min={0}\r\n                max={parameters.max_speed || 5}\r\n                step={1}\r\n                marks\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, speed: value})}\r\n              />\r\n            </Box>\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Direction</InputLabel>\r\n              <Select\r\n                value={parameterEdit.direction || parameters.direction || 'forward'}\r\n                onChange={(e) => setParameterEdit({...parameterEdit, direction: e.target.value})}\r\n              >\r\n                <MenuItem value=\"forward\">Forward</MenuItem>\r\n                <MenuItem value=\"reverse\">Reverse</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </>\r\n        );\r\n      case 'lighting':\r\n        return (\r\n          <>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Brightness</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.brightness || parameters.brightness || 0}\r\n                min={0}\r\n                max={100}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, brightness: value})}\r\n              />\r\n            </Box>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Color Temperature (K)</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.color_temp || parameters.color_temp || 3000}\r\n                min={2000}\r\n                max={6500}\r\n                step={100}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, color_temp: value})}\r\n              />\r\n            </Box>\r\n          </>\r\n        );\r\n      case 'irrigation':\r\n      case 'water_pump':\r\n      case 'pump':\r\n        return (\r\n          <>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Flow Rate (%)</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.flow_rate || parameters.flow_rate || 100}\r\n                min={10}\r\n                max={100}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, flow_rate: value})}\r\n              />\r\n            </Box>\r\n          </>\r\n        );\r\n      case 'humidifier':\r\n        return (\r\n          <>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Humidity Intensity</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.intensity || parameters.intensity || 0}\r\n                min={0}\r\n                max={parameters.max_intensity || 10}\r\n                step={1}\r\n                marks\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, intensity: value})}\r\n              />\r\n            </Box>\r\n          </>\r\n        );\r\n      default:\r\n        return (\r\n          <Typography variant=\"body2\">No parameters available for this actuator type</Typography>\r\n        );\r\n    }\r\n  };\r\n\r\n  // Get rule parameter fields based on actuator type\r\n  const getRuleParameterFields = (actuatorType, actionValue) => {\r\n    switch(actuatorType) {\r\n      case 'fan':\r\n        return (\r\n          <>\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Fan Speed</InputLabel>\r\n              <Select\r\n                value={newRule.parameters.speed || ''}\r\n                onChange={(e) => setNewRule({\r\n                  ...newRule, \r\n                  parameters: {...newRule.parameters, speed: parseInt(e.target.value)}\r\n                })}\r\n              >\r\n                {[0, 1, 2, 3, 4, 5].map(speed => (\r\n                  <MenuItem key={speed} value={speed}>{speed}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </>\r\n        );\r\n      case 'lighting':\r\n        return (\r\n          <>\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              label=\"Brightness\"\r\n              type=\"number\"\r\n              value={newRule.parameters.brightness || ''}\r\n              onChange={(e) => setNewRule({\r\n                ...newRule, \r\n                parameters: {...newRule.parameters, brightness: parseInt(e.target.value)}\r\n              })}\r\n              InputProps={{ inputProps: { min: 0, max: 100 } }}\r\n            />\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Tab switch handling\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  // Render auto rules\r\n  const renderAutoRules = () => {\r\n    if (!actuator || !actuator.auto_rules || Object.keys(actuator.auto_rules).length === 0) {\r\n      return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          No automatic control rules yet, please add one\r\n        </Typography>\r\n      );\r\n    }\r\n\r\n    return Object.entries(actuator.auto_rules).map(([sensorType, rule]) => {\r\n      const condition = Object.keys(rule)[0];\r\n      if (!condition) return null;\r\n      \r\n      const value = rule[condition];\r\n      const action = rule.action;\r\n      const parameters = rule.parameters || {};\r\n      \r\n      return (\r\n        <Card key={sensorType} sx={{ mb: 2 }}>\r\n          <CardHeader\r\n            title={`${SENSOR_TYPE_NAMES[sensorType] || sensorType} ${CONDITION_TYPE_NAMES[condition] || condition} ${value}`}\r\n            subheader={`Action: ${STATUS_STYLES[action]?.label || action}`}\r\n            action={\r\n              <IconButton onClick={() => handleRemoveAutoRule(sensorType)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            }\r\n          />\r\n          {Object.keys(parameters).length > 0 && (\r\n            <CardContent>\r\n              <Typography variant=\"body2\">Parameter Settings:</Typography>\r\n              <Box sx={{ mt: 1 }}>\r\n                {Object.entries(parameters).map(([key, value]) => (\r\n                  <Chip \r\n                    key={key} \r\n                    label={`${key}: ${value}`} \r\n                    size=\"small\" \r\n                    sx={{ mr: 1, mb: 1 }} \r\n                  />\r\n                ))}\r\n              </Box>\r\n            </CardContent>\r\n          )}\r\n        </Card>\r\n      );\r\n    });\r\n  };\r\n\r\n  // Render operation logs\r\n  const renderLogs = () => {\r\n    if (logs.length === 0) {\r\n      return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          No operation records\r\n        </Typography>\r\n      );\r\n    }\r\n\r\n    return logs.map(log => {\r\n      const date = new Date(log.timestamp);\r\n      const formattedDate = date.toLocaleString();\r\n      \r\n      return (\r\n        <Card key={log.id} sx={{ mb: 2 }}>\r\n          <CardHeader\r\n            title={log.message}\r\n            subheader={formattedDate}\r\n            avatar={\r\n              <Chip \r\n                label={STATUS_STYLES[log.status]?.label || log.status} \r\n                color={STATUS_STYLES[log.status]?.color || 'default'} \r\n                size=\"small\" \r\n              />\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {`Changed from ${STATUS_STYLES[log.previous_state]?.label || log.previous_state} to ${STATUS_STYLES[log.status]?.label || log.status}`}\r\n            </Typography>\r\n            {log.parameters && Object.keys(log.parameters).length > 0 && (\r\n              <Box sx={{ mt: 1 }}>\r\n                <Typography variant=\"body2\">Parameter changes:</Typography>\r\n                {Object.entries(log.parameters).map(([key, value]) => (\r\n                  <Chip \r\n                    key={key} \r\n                    label={`${key}: ${value}`} \r\n                    size=\"small\" \r\n                    sx={{ mr: 1, mt: 1 }} \r\n                  />\r\n                ))}\r\n              </Box>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '70vh' }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mt: 4 }}>\r\n          <Alert severity=\"error\">{error}</Alert>\r\n          <Button \r\n            variant=\"outlined\" \r\n            startIcon={<ArrowBackIcon />} \r\n            onClick={() => navigate('/actuators')}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Back to Actuator List\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!actuator) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mt: 4 }}>\r\n          <Alert severity=\"warning\">Actuator information not found</Alert>\r\n          <Button \r\n            variant=\"outlined\" \r\n            startIcon={<ArrowBackIcon />} \r\n            onClick={() => navigate('/actuators')}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Back to Actuator List\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box sx={{ mt: 4, mb: 2 }}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item>\r\n            <Button \r\n              variant=\"outlined\" \r\n              startIcon={<ArrowBackIcon />} \r\n              onClick={() => navigate('/actuators')}\r\n            >\r\n              Back\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Typography variant=\"h4\" component=\"h1\">\r\n              Actuator Details\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip \r\n              label={STATUS_STYLES[actuator.status]?.label || actuator.status} \r\n              color={STATUS_STYLES[actuator.status]?.color || 'default'} \r\n              size=\"medium\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      {saveSuccess && (\r\n        <Alert severity=\"success\" sx={{ mb: 2 }}>Saved successfully</Alert>\r\n      )}\r\n\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"Actuator detail tabs\">\r\n          <Tab label=\"Overview\" />\r\n          <Tab label=\"Control Panel\" />\r\n          <Tab label=\"Automatic Rules\" />\r\n          <Tab label=\"Operation History\" />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {/* Overview Tab */}\r\n      <TabPanel value={tabValue} index={0}>\r\n        <Grid container spacing={3}>\r\n          {/* Basic Information Card */}\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                  {getActuatorIcon(actuator.type)}\r\n                  <Box sx={{ ml: 2 }}>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      {actuator.name}\r\n                    </Typography>\r\n                    <Chip \r\n                      label={actuator.is_active ? 'Enabled' : 'Disabled'} \r\n                      color={actuator.is_active ? 'success' : 'error'}\r\n                      size=\"small\"\r\n                      sx={{ mt: 0.5 }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n                \r\n                <Divider sx={{ my: 2 }} />\r\n                \r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">Type</Typography>\r\n                    <Typography variant=\"body1\">{ACTUATOR_TYPE_NAMES[actuator.type] || actuator.type}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">Location</Typography>\r\n                    <Typography variant=\"body1\">{actuator.location}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">Status</Typography>\r\n                    <Typography variant=\"body1\">{STATUS_STYLES[actuator.status]?.label || actuator.status}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">Mode</Typography>\r\n                    <Typography variant=\"body1\">{actuator.mode === 'auto' ? 'Automatic' : 'Manual'}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">MQTT Topic</Typography>\r\n                    <Typography variant=\"body1\" sx={{ wordBreak: 'break-all' }}>{actuator.mqtt_topic}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                \r\n                <Divider sx={{ my: 2 }} />\r\n                \r\n                <Typography variant=\"h6\" gutterBottom>Quick Actions</Typography>\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                  {allowedStates.map(state => (\r\n                    <Button\r\n                      key={state}\r\n                      variant={actuator.status === state ? \"contained\" : \"outlined\"}\r\n                      color={STATUS_STYLES[state]?.color || 'primary'}\r\n                      onClick={() => handleControlActuator(state)}\r\n                      size=\"small\"\r\n                    >\r\n                      {STATUS_STYLES[state]?.label || state}\r\n                    </Button>\r\n                  ))}\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          \r\n          {/* Technical Information Card */}\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Technical Information\r\n                </Typography>\r\n                \r\n                <List disablePadding>\r\n                  <ListItem disablePadding sx={{ py: 1 }}>\r\n                    <ListItemText \r\n                      primary=\"Model\" \r\n                      secondary={actuator.model || `Generic ${ACTUATOR_TYPE_NAMES[actuator.type] || actuator.type}`} \r\n                    />\r\n                  </ListItem>\r\n                  <Divider component=\"li\" />\r\n                  \r\n                  <ListItem disablePadding sx={{ py: 1 }}>\r\n                    <ListItemText \r\n                      primary=\"Manufacturer\" \r\n                      secondary={actuator.manufacturer || \"Smart Farm Systems\"} \r\n                    />\r\n                  </ListItem>\r\n                  <Divider component=\"li\" />\r\n                  \r\n                  <ListItem disablePadding sx={{ py: 1 }}>\r\n                    <ListItemText \r\n                      primary=\"Installation Date\" \r\n                      secondary={formatDate(actuator.created_at)} \r\n                    />\r\n                  </ListItem>\r\n                  <Divider component=\"li\" />\r\n                  \r\n                  <ListItem disablePadding sx={{ py: 1 }}>\r\n                    <ListItemText \r\n                      primary=\"Last Maintenance\" \r\n                      secondary={actuator.maintenance_date ? formatDate(actuator.maintenance_date) : \"Not available\"} \r\n                    />\r\n                  </ListItem>\r\n                  <Divider component=\"li\" />\r\n                  \r\n                  <ListItem disablePadding sx={{ py: 1 }}>\r\n                    <ListItemText \r\n                      primary=\"Firmware Version\" \r\n                      secondary={actuator.firmware_version || \"1.0.0\"} \r\n                    />\r\n                  </ListItem>\r\n                  <Divider component=\"li\" />\r\n                  \r\n                  <ListItem disablePadding sx={{ py: 1 }}>\r\n                    <ListItemText \r\n                      primary=\"Power Consumption\" \r\n                      secondary={`${actuator.power_consumption || (actuator.type === 'fan' ? '15-45' : actuator.type === 'lighting' ? '20-100' : '10-30')} watts`} \r\n                    />\r\n                  </ListItem>\r\n                </List>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          \r\n          {/* Usage Statistics Card */}\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Usage Statistics\r\n                </Typography>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} sm={6} md={3}>\r\n                    <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">On Time (Last 7 Days)</Typography>\r\n                      <Typography variant=\"h4\" color=\"primary\">{statistics.onTime}%</Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={3}>\r\n                    <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">Off Time (Last 7 Days)</Typography>\r\n                      <Typography variant=\"h4\" color=\"text.secondary\">{statistics.offTime}%</Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={3}>\r\n                    <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">Activations Today</Typography>\r\n                      <Typography variant=\"h4\" color=\"success.main\">{statistics.activationsToday}</Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={3}>\r\n                    <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">Avg. Duration</Typography>\r\n                      <Typography variant=\"h4\" color=\"info.main\">{statistics.averageActivationDuration} min</Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          \r\n          {/* Historical data chart */}\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"h6\">\r\n                    Operation History\r\n                  </Typography>\r\n                  <Box>\r\n                    <Tooltip title=\"View Full History\">\r\n                      <IconButton>\r\n                        <HistoryIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Adjust Date Range\">\r\n                      <IconButton>\r\n                        <DateRangeIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Box>\r\n                </Box>\r\n                \r\n                {chartData.length > 0 ? (\r\n                  <Box sx={{ height: 350, width: '100%' }}>\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <LineChart\r\n                        data={chartData}\r\n                        margin={{\r\n                          top: 5,\r\n                          right: 30,\r\n                          left: 20,\r\n                          bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis \r\n                          dataKey=\"timestamp\" \r\n                          scale=\"time\"\r\n                          type=\"number\"\r\n                          domain={['auto', 'auto']}\r\n                          tickFormatter={(timestamp) => {\r\n                            const date = new Date(timestamp);\r\n                            return `${date.getMonth()+1}/${date.getDate()}`;\r\n                          }}\r\n                        />\r\n                        <YAxis />\r\n                        <RechartsTooltip \r\n                          formatter={(value, name) => {\r\n                            if (name === 'status') return [value === 1 ? 'On' : 'Off', 'Status'];\r\n                            return [value, name];\r\n                          }}\r\n                          labelFormatter={(timestamp) => new Date(timestamp).toLocaleString()}\r\n                        />\r\n                        <Legend />\r\n                        <Line \r\n                          type=\"stepAfter\" \r\n                          dataKey=\"status\" \r\n                          stroke=\"#2196f3\" \r\n                          activeDot={{ r: 8 }} \r\n                          name=\"Status\"\r\n                          strokeWidth={2}\r\n                        />\r\n                        {actuator.type === 'fan' && (\r\n                          <Line \r\n                            type=\"monotone\" \r\n                            dataKey=\"speed\" \r\n                            stroke=\"#4caf50\" \r\n                            name=\"Speed\"\r\n                            dot={{ r: 3 }}\r\n                          />\r\n                        )}\r\n                        {actuator.type === 'lighting' && (\r\n                          <Line \r\n                            type=\"monotone\" \r\n                            dataKey=\"brightness\" \r\n                            stroke=\"#ff9800\" \r\n                            name=\"Brightness\"\r\n                            dot={{ r: 3 }}\r\n                          />\r\n                        )}\r\n                        {(actuator.type === 'pump' || actuator.type === 'irrigation' || actuator.type === 'water_pump') && (\r\n                          <Line \r\n                            type=\"monotone\" \r\n                            dataKey=\"flow_rate\" \r\n                            stroke=\"#9c27b0\" \r\n                            name=\"Flow Rate\"\r\n                            dot={{ r: 3 }}\r\n                          />\r\n                        )}\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  </Box>\r\n                ) : (\r\n                  <Box sx={{ textAlign: 'center', py: 4 }}>\r\n                    <Typography color=\"text.secondary\">No historical data available</Typography>\r\n                  </Box>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          \r\n          {/* Recent operations table */}\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Recent Operations\r\n                </Typography>\r\n                \r\n                <TableContainer>\r\n                  <Table size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Time</TableCell>\r\n                        <TableCell>Status</TableCell>\r\n                        <TableCell>Source</TableCell>\r\n                        <TableCell>Parameters</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {logs.slice(0, 10).map((log, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {new Date(log.timestamp).toLocaleString()}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Chip \r\n                              label={STATUS_STYLES[log.status]?.label || log.status} \r\n                              color={STATUS_STYLES[log.status]?.color || 'default'} \r\n                              size=\"small\" \r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{log.source || 'manual'}</TableCell>\r\n                          <TableCell>\r\n                            {log.parameters && Object.keys(log.parameters).length > 0 ? (\r\n                              Object.entries(log.parameters).map(([key, value]) => (\r\n                                <Chip \r\n                                  key={key} \r\n                                  label={`${key}: ${value}`} \r\n                                  size=\"small\" \r\n                                  sx={{ mr: 0.5, mb: 0.5 }} \r\n                                />\r\n                              ))\r\n                            ) : (\r\n                              \"-\"\r\n                            )}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      {/* Control Panel Tab */}\r\n      <TabPanel value={tabValue} index={1}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom>Status Control</Typography>\r\n              <Divider sx={{ mb: 3 }} />\r\n              \r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 3 }}>\r\n                {allowedStates.map(state => (\r\n                  <Button\r\n                    key={state}\r\n                    variant={actuator.status === state ? \"contained\" : \"outlined\"}\r\n                    color={STATUS_STYLES[state]?.color || 'primary'}\r\n                    onClick={() => handleControlActuator(state)}\r\n                    sx={{ minWidth: '100px' }}\r\n                  >\r\n                    {STATUS_STYLES[state]?.label || state}\r\n                  </Button>\r\n                ))}\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={6}>\r\n            <Paper sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom>Parameter Settings</Typography>\r\n              <Divider sx={{ mb: 3 }} />\r\n              \r\n              {!actuator.parameters || Object.keys(actuator.parameters).length === 0 ? (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  This actuator has no parameter settings\r\n                </Typography>\r\n              ) : (\r\n                <>\r\n                  {getParameterFields()}\r\n                  \r\n                  {Object.keys(parameterEdit).length > 0 && (\r\n                    <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n                      <Button \r\n                        variant=\"outlined\" \r\n                        onClick={() => setParameterEdit({})} \r\n                        sx={{ mr: 1 }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                      <Button \r\n                        variant=\"contained\" \r\n                        onClick={handleEditParameters}\r\n                      >\r\n                        Apply Parameters\r\n                      </Button>\r\n                    </Box>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      {/* Automatic Rules Tab */}\r\n      <TabPanel value={tabValue} index={2}>\r\n        <Paper sx={{ p: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n            <Typography variant=\"h6\">Automatic Control Rules</Typography>\r\n            <Button \r\n              variant=\"contained\" \r\n              startIcon={<AddIcon />} \r\n              onClick={() => setAutoRuleDialogOpen(true)}\r\n            >\r\n              Add Rule\r\n            </Button>\r\n          </Box>\r\n          <Divider sx={{ mb: 3 }} />\r\n          \r\n          {renderAutoRules()}\r\n        </Paper>\r\n        \r\n        {/* Add Auto Rule Dialog */}\r\n        <Dialog open={autoRuleDialogOpen} onClose={() => setAutoRuleDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Add Automatic Control Rule</DialogTitle>\r\n          <DialogContent>\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Sensor Type</InputLabel>\r\n              <Select\r\n                value={newRule.sensor_type || ''}\r\n                onChange={(e) => setNewRule({...newRule, sensor_type: e.target.value})}\r\n              >\r\n                {Object.entries(SENSOR_TYPE_NAMES).map(([key, value]) => (\r\n                  <MenuItem key={key} value={key}>{value}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Condition</InputLabel>\r\n              <Select\r\n                value={newRule.condition || 'gt'}\r\n                onChange={(e) => setNewRule({...newRule, condition: e.target.value})}\r\n              >\r\n                {Object.entries(CONDITION_TYPE_NAMES).map(([key, value]) => (\r\n                  <MenuItem key={key} value={key}>{value}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              label=\"Value\"\r\n              type=\"number\"\r\n              value={newRule.value || ''}\r\n              onChange={(e) => setNewRule({...newRule, value: e.target.value})}\r\n            />\r\n            \r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Action</InputLabel>\r\n              <Select\r\n                value={newRule.action || ''}\r\n                onChange={(e) => setNewRule({...newRule, action: e.target.value})}\r\n              >\r\n                {allowedStates.map(state => (\r\n                  <MenuItem key={state} value={state}>\r\n                    {STATUS_STYLES[state]?.label || state}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            {/* Show parameter settings based on actuator type and action */}\r\n            {newRule.action && getRuleParameterFields(actuator.type, newRule.action)}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAutoRuleDialogOpen(false)}>Cancel</Button>\r\n            <Button onClick={handleAddAutoRule} variant=\"contained\">Add</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </TabPanel>\r\n\r\n      {/* Operation Logs Tab */}\r\n      <TabPanel value={tabValue} index={3}>\r\n        <Paper sx={{ p: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>Operation Records</Typography>\r\n          <Divider sx={{ mb: 3 }} />\r\n          \r\n          {logs.length > 0 ? (\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Time</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Message</TableCell>\r\n                    <TableCell>Source</TableCell>\r\n                    <TableCell>Parameters</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {logs.map((log, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell>{new Date(log.timestamp).toLocaleString()}</TableCell>\r\n                      <TableCell>\r\n                        <Chip \r\n                          label={STATUS_STYLES[log.status]?.label || log.status} \r\n                          color={STATUS_STYLES[log.status]?.color || 'default'} \r\n                          size=\"small\" \r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>{log.message}</TableCell>\r\n                      <TableCell>{log.source || 'manual'}</TableCell>\r\n                      <TableCell>\r\n                        {log.parameters && Object.keys(log.parameters).length > 0 ? (\r\n                          Object.entries(log.parameters).map(([key, value]) => (\r\n                            <Chip \r\n                              key={key} \r\n                              label={`${key}: ${value}`} \r\n                              size=\"small\" \r\n                              sx={{ mr: 0.5, mb: 0.5 }} \r\n                            />\r\n                          ))\r\n                        ) : (\r\n                          \"-\"\r\n                        )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          ) : (\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              No operation records available\r\n            </Typography>\r\n          )}\r\n        </Paper>\r\n      </TabPanel>\r\n      \r\n      {/* Action buttons */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 3, gap: 2 }}>\r\n        <Button \r\n          variant=\"outlined\" \r\n          startIcon={<SettingsIcon />}\r\n        >\r\n          Configuration\r\n        </Button>\r\n        <Button \r\n          variant=\"outlined\" \r\n          startIcon={<ErrorOutlineIcon />}\r\n        >\r\n          Troubleshoot\r\n        </Button>\r\n        <Button \r\n          variant=\"contained\" \r\n          startIcon={<EditIcon />}\r\n          onClick={() => {\r\n            setTabValue(0);\r\n            setEditMode(true);\r\n          }}\r\n        >\r\n          Edit Actuator\r\n        </Button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ActuatorDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
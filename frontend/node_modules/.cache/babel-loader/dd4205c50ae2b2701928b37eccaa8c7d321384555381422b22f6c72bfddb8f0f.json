{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.incircle = incircle;\nexports.incirclefast = incirclefast;\nvar _util = require(\"./util.js\");\nconst iccerrboundA = (10 + 96 * _util.epsilon) * _util.epsilon;\nconst iccerrboundB = (4 + 48 * _util.epsilon) * _util.epsilon;\nconst iccerrboundC = (44 + 576 * _util.epsilon) * _util.epsilon * _util.epsilon;\nconst bc = (0, _util.vec)(4);\nconst ca = (0, _util.vec)(4);\nconst ab = (0, _util.vec)(4);\nconst aa = (0, _util.vec)(4);\nconst bb = (0, _util.vec)(4);\nconst cc = (0, _util.vec)(4);\nconst u = (0, _util.vec)(4);\nconst v = (0, _util.vec)(4);\nconst axtbc = (0, _util.vec)(8);\nconst aytbc = (0, _util.vec)(8);\nconst bxtca = (0, _util.vec)(8);\nconst bytca = (0, _util.vec)(8);\nconst cxtab = (0, _util.vec)(8);\nconst cytab = (0, _util.vec)(8);\nconst abt = (0, _util.vec)(8);\nconst bct = (0, _util.vec)(8);\nconst cat = (0, _util.vec)(8);\nconst abtt = (0, _util.vec)(4);\nconst bctt = (0, _util.vec)(4);\nconst catt = (0, _util.vec)(4);\nconst _8 = (0, _util.vec)(8);\nconst _16 = (0, _util.vec)(16);\nconst _16b = (0, _util.vec)(16);\nconst _16c = (0, _util.vec)(16);\nconst _32 = (0, _util.vec)(32);\nconst _32b = (0, _util.vec)(32);\nconst _48 = (0, _util.vec)(48);\nconst _64 = (0, _util.vec)(64);\nlet fin = (0, _util.vec)(1152);\nlet fin2 = (0, _util.vec)(1152);\nfunction finadd(finlen, a, alen) {\n  finlen = (0, _util.sum)(finlen, fin, a, alen, fin2);\n  const tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n  let finlen;\n  let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n  let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n  let abtlen, bctlen, catlen;\n  let abttlen, bcttlen, cattlen;\n  let n1, n0;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  s1 = bdx * cdy;\n  c = _util.splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = _util.splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = _util.splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = _util.splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = _util.splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = _util.splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = _util.splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = _util.splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = _util.splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = _util.splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = _util.splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = _util.splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = (0, _util.sum)((0, _util.sum)((0, _util.sum)((0, _util.scale)((0, _util.scale)(4, bc, adx, _8), _8, adx, _16), _16, (0, _util.scale)((0, _util.scale)(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32, (0, _util.sum)((0, _util.scale)((0, _util.scale)(4, ca, bdx, _8), _8, bdx, _16), _16, (0, _util.scale)((0, _util.scale)(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64, (0, _util.sum)((0, _util.scale)((0, _util.scale)(4, ab, cdx, _8), _8, cdx, _16), _16, (0, _util.scale)((0, _util.scale)(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n  let det = (0, _util.estimate)(finlen, fin);\n  let errbound = iccerrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n    return det;\n  }\n  errbound = iccerrboundC * permanent + _util.resulterrbound * Math.abs(det);\n  det += (adx * adx + ady * ady) * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + 2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx) + ((bdx * bdx + bdy * bdy) * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + 2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) + ((cdx * cdx + cdy * cdy) * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + 2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n    s1 = adx * adx;\n    c = _util.splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = ady * ady;\n    c = _util.splitter * ady;\n    ahi = c - (c - ady);\n    alo = ady - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    aa[3] = u3;\n  }\n  if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n    s1 = bdx * bdx;\n    c = _util.splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = bdy * bdy;\n    c = _util.splitter * bdy;\n    ahi = c - (c - bdy);\n    alo = bdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bb[3] = u3;\n  }\n  if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n    s1 = cdx * cdx;\n    c = _util.splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = cdy * cdy;\n    c = _util.splitter * cdy;\n    ahi = c - (c - cdy);\n    alo = cdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cc[3] = u3;\n  }\n  if (adxtail !== 0) {\n    axtbclen = (0, _util.scale)(4, bc, adxtail, axtbc);\n    finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(axtbclen, axtbc, 2 * adx, _16), _16, (0, _util.scale)((0, _util.scale)(4, cc, adxtail, _8), _8, bdy, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n  }\n  if (adytail !== 0) {\n    aytbclen = (0, _util.scale)(4, bc, adytail, aytbc);\n    finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(aytbclen, aytbc, 2 * ady, _16), _16, (0, _util.scale)((0, _util.scale)(4, bb, adytail, _8), _8, cdx, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n  }\n  if (bdxtail !== 0) {\n    bxtcalen = (0, _util.scale)(4, ca, bdxtail, bxtca);\n    finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(bxtcalen, bxtca, 2 * bdx, _16), _16, (0, _util.scale)((0, _util.scale)(4, aa, bdxtail, _8), _8, cdy, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n  }\n  if (bdytail !== 0) {\n    bytcalen = (0, _util.scale)(4, ca, bdytail, bytca);\n    finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(bytcalen, bytca, 2 * bdy, _16), _16, (0, _util.scale)((0, _util.scale)(4, cc, bdytail, _8), _8, adx, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n  }\n  if (cdxtail !== 0) {\n    cxtablen = (0, _util.scale)(4, ab, cdxtail, cxtab);\n    finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(cxtablen, cxtab, 2 * cdx, _16), _16, (0, _util.scale)((0, _util.scale)(4, bb, cdxtail, _8), _8, ady, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n  }\n  if (cdytail !== 0) {\n    cytablen = (0, _util.scale)(4, ab, cdytail, cytab);\n    finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(cytablen, cytab, 2 * cdy, _16), _16, (0, _util.scale)((0, _util.scale)(4, aa, cdytail, _8), _8, bdx, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n  }\n  if (adxtail !== 0 || adytail !== 0) {\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n      s1 = bdxtail * cdy;\n      c = _util.splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = _util.splitter * cdy;\n      bhi = c - (c - cdy);\n      blo = cdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * cdytail;\n      c = _util.splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = _util.splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      s1 = cdxtail * -bdy;\n      c = _util.splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = _util.splitter * -bdy;\n      bhi = c - (c - -bdy);\n      blo = -bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * -bdytail;\n      c = _util.splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = _util.splitter * -bdytail;\n      bhi = c - (c - -bdytail);\n      blo = -bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      bctlen = (0, _util.sum)(4, u, 4, v, bct);\n      s1 = bdxtail * cdytail;\n      c = _util.splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = _util.splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdxtail * bdytail;\n      c = _util.splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = _util.splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      bctt[3] = u3;\n      bcttlen = 4;\n    } else {\n      bct[0] = 0;\n      bctlen = 1;\n      bctt[0] = 0;\n      bcttlen = 1;\n    }\n    if (adxtail !== 0) {\n      const len = (0, _util.scale)(bctlen, bct, adxtail, _16c);\n      finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(axtbclen, axtbc, adxtail, _16), _16, (0, _util.scale)(len, _16c, 2 * adx, _32), _32, _48), _48);\n      const len2 = (0, _util.scale)(bcttlen, bctt, adxtail, _8);\n      finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * adx, _16), _16, (0, _util.scale)(len2, _8, adxtail, _16b), _16b, (0, _util.scale)(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n      }\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n      }\n    }\n    if (adytail !== 0) {\n      const len = (0, _util.scale)(bctlen, bct, adytail, _16c);\n      finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(aytbclen, aytbc, adytail, _16), _16, (0, _util.scale)(len, _16c, 2 * ady, _32), _32, _48), _48);\n      const len2 = (0, _util.scale)(bcttlen, bctt, adytail, _8);\n      finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * ady, _16), _16, (0, _util.scale)(len2, _8, adytail, _16b), _16b, (0, _util.scale)(len, _16c, adytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  if (bdxtail !== 0 || bdytail !== 0) {\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n      s1 = cdxtail * ady;\n      c = _util.splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = _util.splitter * ady;\n      bhi = c - (c - ady);\n      blo = ady - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * adytail;\n      c = _util.splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = _util.splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -cdy;\n      n0 = -cdytail;\n      s1 = adxtail * n1;\n      c = _util.splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = _util.splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * n0;\n      c = _util.splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = _util.splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      catlen = (0, _util.sum)(4, u, 4, v, cat);\n      s1 = cdxtail * adytail;\n      c = _util.splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = _util.splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adxtail * cdytail;\n      c = _util.splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = _util.splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      catt[3] = u3;\n      cattlen = 4;\n    } else {\n      cat[0] = 0;\n      catlen = 1;\n      catt[0] = 0;\n      cattlen = 1;\n    }\n    if (bdxtail !== 0) {\n      const len = (0, _util.scale)(catlen, cat, bdxtail, _16c);\n      finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(bxtcalen, bxtca, bdxtail, _16), _16, (0, _util.scale)(len, _16c, 2 * bdx, _32), _32, _48), _48);\n      const len2 = (0, _util.scale)(cattlen, catt, bdxtail, _8);\n      finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * bdx, _16), _16, (0, _util.scale)(len2, _8, bdxtail, _16b), _16b, (0, _util.scale)(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n      }\n      if (adytail !== 0) {\n        finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n      }\n    }\n    if (bdytail !== 0) {\n      const len = (0, _util.scale)(catlen, cat, bdytail, _16c);\n      finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(bytcalen, bytca, bdytail, _16), _16, (0, _util.scale)(len, _16c, 2 * bdy, _32), _32, _48), _48);\n      const len2 = (0, _util.scale)(cattlen, catt, bdytail, _8);\n      finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * bdy, _16), _16, (0, _util.scale)(len2, _8, bdytail, _16b), _16b, (0, _util.scale)(len, _16c, bdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  if (cdxtail !== 0 || cdytail !== 0) {\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n      s1 = adxtail * bdy;\n      c = _util.splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = _util.splitter * bdy;\n      bhi = c - (c - bdy);\n      blo = bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * bdytail;\n      c = _util.splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = _util.splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -ady;\n      n0 = -adytail;\n      s1 = bdxtail * n1;\n      c = _util.splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = _util.splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * n0;\n      c = _util.splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = _util.splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      abtlen = (0, _util.sum)(4, u, 4, v, abt);\n      s1 = adxtail * bdytail;\n      c = _util.splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = _util.splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdxtail * adytail;\n      c = _util.splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = _util.splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      abtt[3] = u3;\n      abttlen = 4;\n    } else {\n      abt[0] = 0;\n      abtlen = 1;\n      abtt[0] = 0;\n      abttlen = 1;\n    }\n    if (cdxtail !== 0) {\n      const len = (0, _util.scale)(abtlen, abt, cdxtail, _16c);\n      finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(cxtablen, cxtab, cdxtail, _16), _16, (0, _util.scale)(len, _16c, 2 * cdx, _32), _32, _48), _48);\n      const len2 = (0, _util.scale)(abttlen, abtt, cdxtail, _8);\n      finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * cdx, _16), _16, (0, _util.scale)(len2, _8, cdxtail, _16b), _16b, (0, _util.scale)(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n      if (adytail !== 0) {\n        finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n      }\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n      }\n    }\n    if (cdytail !== 0) {\n      const len = (0, _util.scale)(abtlen, abt, cdytail, _16c);\n      finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(cytablen, cytab, cdytail, _16), _16, (0, _util.scale)(len, _16c, 2 * cdy, _32), _32, _48), _48);\n      const len2 = (0, _util.scale)(abttlen, abtt, cdytail, _8);\n      finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * cdy, _16), _16, (0, _util.scale)(len2, _8, cdytail, _16b), _16b, (0, _util.scale)(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  return fin[finlen - 1];\n}\nfunction incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const bdxcdy = bdx * cdy;\n  const cdxbdy = cdx * bdy;\n  const alift = adx * adx + ady * ady;\n  const cdxady = cdx * ady;\n  const adxcdy = adx * cdy;\n  const blift = bdx * bdx + bdy * bdy;\n  const adxbdy = adx * bdy;\n  const bdxady = bdx * ady;\n  const clift = cdx * cdx + cdy * cdy;\n  const det = alift * (bdxcdy - cdxbdy) + blift * (cdxady - adxcdy) + clift * (adxbdy - bdxady);\n  const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift + (Math.abs(cdxady) + Math.abs(adxcdy)) * blift + (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n  const errbound = iccerrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\nfunction incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n  const adx = ax - dx;\n  const ady = ay - dy;\n  const bdx = bx - dx;\n  const bdy = by - dy;\n  const cdx = cx - dx;\n  const cdy = cy - dy;\n  const abdet = adx * bdy - bdx * ady;\n  const bcdet = bdx * cdy - cdx * bdy;\n  const cadet = cdx * ady - adx * cdy;\n  const alift = adx * adx + ady * ady;\n  const blift = bdx * bdx + bdy * bdy;\n  const clift = cdx * cdx + cdy * cdy;\n  return alift * bcdet + blift * cadet + clift * abdet;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","incircle","incirclefast","_util","require","iccerrboundA","epsilon","iccerrboundB","iccerrboundC","bc","vec","ca","ab","aa","bb","cc","u","v","axtbc","aytbc","bxtca","bytca","cxtab","cytab","abt","bct","cat","abtt","bctt","catt","_8","_16","_16b","_16c","_32","_32b","_48","_64","fin","fin2","finadd","finlen","a","alen","sum","tmp","incircleadapt","ax","ay","bx","by","cx","cy","dx","dy","permanent","adxtail","bdxtail","cdxtail","adytail","bdytail","cdytail","axtbclen","aytbclen","bxtcalen","bytcalen","cxtablen","cytablen","abtlen","bctlen","catlen","abttlen","bcttlen","cattlen","n1","n0","bvirt","c","ahi","alo","bhi","blo","_i","_j","_0","s1","s0","t1","t0","u3","adx","bdx","cdx","ady","bdy","cdy","splitter","scale","det","estimate","errbound","resulterrbound","Math","abs","sum_three","len","len2","bdxcdy","cdxbdy","alift","cdxady","adxcdy","blift","adxbdy","bdxady","clift","abdet","bcdet","cadet"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/node_modules/@mui/x-charts-vendor/lib-vendor/robust-predicates/esm/incircle.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.incircle = incircle;\nexports.incirclefast = incirclefast;\nvar _util = require(\"./util.js\");\nconst iccerrboundA = (10 + 96 * _util.epsilon) * _util.epsilon;\nconst iccerrboundB = (4 + 48 * _util.epsilon) * _util.epsilon;\nconst iccerrboundC = (44 + 576 * _util.epsilon) * _util.epsilon * _util.epsilon;\nconst bc = (0, _util.vec)(4);\nconst ca = (0, _util.vec)(4);\nconst ab = (0, _util.vec)(4);\nconst aa = (0, _util.vec)(4);\nconst bb = (0, _util.vec)(4);\nconst cc = (0, _util.vec)(4);\nconst u = (0, _util.vec)(4);\nconst v = (0, _util.vec)(4);\nconst axtbc = (0, _util.vec)(8);\nconst aytbc = (0, _util.vec)(8);\nconst bxtca = (0, _util.vec)(8);\nconst bytca = (0, _util.vec)(8);\nconst cxtab = (0, _util.vec)(8);\nconst cytab = (0, _util.vec)(8);\nconst abt = (0, _util.vec)(8);\nconst bct = (0, _util.vec)(8);\nconst cat = (0, _util.vec)(8);\nconst abtt = (0, _util.vec)(4);\nconst bctt = (0, _util.vec)(4);\nconst catt = (0, _util.vec)(4);\nconst _8 = (0, _util.vec)(8);\nconst _16 = (0, _util.vec)(16);\nconst _16b = (0, _util.vec)(16);\nconst _16c = (0, _util.vec)(16);\nconst _32 = (0, _util.vec)(32);\nconst _32b = (0, _util.vec)(32);\nconst _48 = (0, _util.vec)(48);\nconst _64 = (0, _util.vec)(64);\nlet fin = (0, _util.vec)(1152);\nlet fin2 = (0, _util.vec)(1152);\nfunction finadd(finlen, a, alen) {\n  finlen = (0, _util.sum)(finlen, fin, a, alen, fin2);\n  const tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n  let finlen;\n  let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n  let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n  let abtlen, bctlen, catlen;\n  let abttlen, bcttlen, cattlen;\n  let n1, n0;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  s1 = bdx * cdy;\n  c = _util.splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = _util.splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = _util.splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = _util.splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = _util.splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = _util.splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = _util.splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = _util.splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = _util.splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = _util.splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = _util.splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = _util.splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = (0, _util.sum)((0, _util.sum)((0, _util.sum)((0, _util.scale)((0, _util.scale)(4, bc, adx, _8), _8, adx, _16), _16, (0, _util.scale)((0, _util.scale)(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32, (0, _util.sum)((0, _util.scale)((0, _util.scale)(4, ca, bdx, _8), _8, bdx, _16), _16, (0, _util.scale)((0, _util.scale)(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64, (0, _util.sum)((0, _util.scale)((0, _util.scale)(4, ab, cdx, _8), _8, cdx, _16), _16, (0, _util.scale)((0, _util.scale)(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n  let det = (0, _util.estimate)(finlen, fin);\n  let errbound = iccerrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n    return det;\n  }\n  errbound = iccerrboundC * permanent + _util.resulterrbound * Math.abs(det);\n  det += (adx * adx + ady * ady) * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + 2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx) + ((bdx * bdx + bdy * bdy) * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + 2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) + ((cdx * cdx + cdy * cdy) * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + 2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n    s1 = adx * adx;\n    c = _util.splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = ady * ady;\n    c = _util.splitter * ady;\n    ahi = c - (c - ady);\n    alo = ady - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    aa[3] = u3;\n  }\n  if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n    s1 = bdx * bdx;\n    c = _util.splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = bdy * bdy;\n    c = _util.splitter * bdy;\n    ahi = c - (c - bdy);\n    alo = bdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bb[3] = u3;\n  }\n  if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n    s1 = cdx * cdx;\n    c = _util.splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = cdy * cdy;\n    c = _util.splitter * cdy;\n    ahi = c - (c - cdy);\n    alo = cdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cc[3] = u3;\n  }\n  if (adxtail !== 0) {\n    axtbclen = (0, _util.scale)(4, bc, adxtail, axtbc);\n    finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(axtbclen, axtbc, 2 * adx, _16), _16, (0, _util.scale)((0, _util.scale)(4, cc, adxtail, _8), _8, bdy, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n  }\n  if (adytail !== 0) {\n    aytbclen = (0, _util.scale)(4, bc, adytail, aytbc);\n    finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(aytbclen, aytbc, 2 * ady, _16), _16, (0, _util.scale)((0, _util.scale)(4, bb, adytail, _8), _8, cdx, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n  }\n  if (bdxtail !== 0) {\n    bxtcalen = (0, _util.scale)(4, ca, bdxtail, bxtca);\n    finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(bxtcalen, bxtca, 2 * bdx, _16), _16, (0, _util.scale)((0, _util.scale)(4, aa, bdxtail, _8), _8, cdy, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n  }\n  if (bdytail !== 0) {\n    bytcalen = (0, _util.scale)(4, ca, bdytail, bytca);\n    finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(bytcalen, bytca, 2 * bdy, _16), _16, (0, _util.scale)((0, _util.scale)(4, cc, bdytail, _8), _8, adx, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n  }\n  if (cdxtail !== 0) {\n    cxtablen = (0, _util.scale)(4, ab, cdxtail, cxtab);\n    finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(cxtablen, cxtab, 2 * cdx, _16), _16, (0, _util.scale)((0, _util.scale)(4, bb, cdxtail, _8), _8, ady, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n  }\n  if (cdytail !== 0) {\n    cytablen = (0, _util.scale)(4, ab, cdytail, cytab);\n    finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(cytablen, cytab, 2 * cdy, _16), _16, (0, _util.scale)((0, _util.scale)(4, aa, cdytail, _8), _8, bdx, _16b), _16b, (0, _util.scale)((0, _util.scale)(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n  }\n  if (adxtail !== 0 || adytail !== 0) {\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n      s1 = bdxtail * cdy;\n      c = _util.splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = _util.splitter * cdy;\n      bhi = c - (c - cdy);\n      blo = cdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * cdytail;\n      c = _util.splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = _util.splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      s1 = cdxtail * -bdy;\n      c = _util.splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = _util.splitter * -bdy;\n      bhi = c - (c - -bdy);\n      blo = -bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * -bdytail;\n      c = _util.splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = _util.splitter * -bdytail;\n      bhi = c - (c - -bdytail);\n      blo = -bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      bctlen = (0, _util.sum)(4, u, 4, v, bct);\n      s1 = bdxtail * cdytail;\n      c = _util.splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = _util.splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdxtail * bdytail;\n      c = _util.splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = _util.splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      bctt[3] = u3;\n      bcttlen = 4;\n    } else {\n      bct[0] = 0;\n      bctlen = 1;\n      bctt[0] = 0;\n      bcttlen = 1;\n    }\n    if (adxtail !== 0) {\n      const len = (0, _util.scale)(bctlen, bct, adxtail, _16c);\n      finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(axtbclen, axtbc, adxtail, _16), _16, (0, _util.scale)(len, _16c, 2 * adx, _32), _32, _48), _48);\n      const len2 = (0, _util.scale)(bcttlen, bctt, adxtail, _8);\n      finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * adx, _16), _16, (0, _util.scale)(len2, _8, adxtail, _16b), _16b, (0, _util.scale)(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n      }\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n      }\n    }\n    if (adytail !== 0) {\n      const len = (0, _util.scale)(bctlen, bct, adytail, _16c);\n      finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(aytbclen, aytbc, adytail, _16), _16, (0, _util.scale)(len, _16c, 2 * ady, _32), _32, _48), _48);\n      const len2 = (0, _util.scale)(bcttlen, bctt, adytail, _8);\n      finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * ady, _16), _16, (0, _util.scale)(len2, _8, adytail, _16b), _16b, (0, _util.scale)(len, _16c, adytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  if (bdxtail !== 0 || bdytail !== 0) {\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n      s1 = cdxtail * ady;\n      c = _util.splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = _util.splitter * ady;\n      bhi = c - (c - ady);\n      blo = ady - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * adytail;\n      c = _util.splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = _util.splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -cdy;\n      n0 = -cdytail;\n      s1 = adxtail * n1;\n      c = _util.splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = _util.splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * n0;\n      c = _util.splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = _util.splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      catlen = (0, _util.sum)(4, u, 4, v, cat);\n      s1 = cdxtail * adytail;\n      c = _util.splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = _util.splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adxtail * cdytail;\n      c = _util.splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = _util.splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      catt[3] = u3;\n      cattlen = 4;\n    } else {\n      cat[0] = 0;\n      catlen = 1;\n      catt[0] = 0;\n      cattlen = 1;\n    }\n    if (bdxtail !== 0) {\n      const len = (0, _util.scale)(catlen, cat, bdxtail, _16c);\n      finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(bxtcalen, bxtca, bdxtail, _16), _16, (0, _util.scale)(len, _16c, 2 * bdx, _32), _32, _48), _48);\n      const len2 = (0, _util.scale)(cattlen, catt, bdxtail, _8);\n      finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * bdx, _16), _16, (0, _util.scale)(len2, _8, bdxtail, _16b), _16b, (0, _util.scale)(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n      }\n      if (adytail !== 0) {\n        finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n      }\n    }\n    if (bdytail !== 0) {\n      const len = (0, _util.scale)(catlen, cat, bdytail, _16c);\n      finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(bytcalen, bytca, bdytail, _16), _16, (0, _util.scale)(len, _16c, 2 * bdy, _32), _32, _48), _48);\n      const len2 = (0, _util.scale)(cattlen, catt, bdytail, _8);\n      finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * bdy, _16), _16, (0, _util.scale)(len2, _8, bdytail, _16b), _16b, (0, _util.scale)(len, _16c, bdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  if (cdxtail !== 0 || cdytail !== 0) {\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n      s1 = adxtail * bdy;\n      c = _util.splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = _util.splitter * bdy;\n      bhi = c - (c - bdy);\n      blo = bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * bdytail;\n      c = _util.splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = _util.splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -ady;\n      n0 = -adytail;\n      s1 = bdxtail * n1;\n      c = _util.splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = _util.splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * n0;\n      c = _util.splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = _util.splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      abtlen = (0, _util.sum)(4, u, 4, v, abt);\n      s1 = adxtail * bdytail;\n      c = _util.splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = _util.splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdxtail * adytail;\n      c = _util.splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = _util.splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      abtt[3] = u3;\n      abttlen = 4;\n    } else {\n      abt[0] = 0;\n      abtlen = 1;\n      abtt[0] = 0;\n      abttlen = 1;\n    }\n    if (cdxtail !== 0) {\n      const len = (0, _util.scale)(abtlen, abt, cdxtail, _16c);\n      finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(cxtablen, cxtab, cdxtail, _16), _16, (0, _util.scale)(len, _16c, 2 * cdx, _32), _32, _48), _48);\n      const len2 = (0, _util.scale)(abttlen, abtt, cdxtail, _8);\n      finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * cdx, _16), _16, (0, _util.scale)(len2, _8, cdxtail, _16b), _16b, (0, _util.scale)(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n      if (adytail !== 0) {\n        finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n      }\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, (0, _util.scale)((0, _util.scale)(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n      }\n    }\n    if (cdytail !== 0) {\n      const len = (0, _util.scale)(abtlen, abt, cdytail, _16c);\n      finlen = finadd(finlen, (0, _util.sum)((0, _util.scale)(cytablen, cytab, cdytail, _16), _16, (0, _util.scale)(len, _16c, 2 * cdy, _32), _32, _48), _48);\n      const len2 = (0, _util.scale)(abttlen, abtt, cdytail, _8);\n      finlen = finadd(finlen, (0, _util.sum_three)((0, _util.scale)(len2, _8, 2 * cdy, _16), _16, (0, _util.scale)(len2, _8, cdytail, _16b), _16b, (0, _util.scale)(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  return fin[finlen - 1];\n}\nfunction incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const bdxcdy = bdx * cdy;\n  const cdxbdy = cdx * bdy;\n  const alift = adx * adx + ady * ady;\n  const cdxady = cdx * ady;\n  const adxcdy = adx * cdy;\n  const blift = bdx * bdx + bdy * bdy;\n  const adxbdy = adx * bdy;\n  const bdxady = bdx * ady;\n  const clift = cdx * cdx + cdy * cdy;\n  const det = alift * (bdxcdy - cdxbdy) + blift * (cdxady - adxcdy) + clift * (adxbdy - bdxady);\n  const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift + (Math.abs(cdxady) + Math.abs(adxcdy)) * blift + (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n  const errbound = iccerrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\nfunction incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n  const adx = ax - dx;\n  const ady = ay - dy;\n  const bdx = bx - dx;\n  const bdy = by - dy;\n  const cdx = cx - dx;\n  const cdy = cy - dy;\n  const abdet = adx * bdy - bdx * ady;\n  const bcdet = bdx * cdy - cdx * bdy;\n  const cadet = cdx * ady - adx * cdy;\n  const alift = adx * adx + ady * ady;\n  const blift = bdx * bdx + bdy * bdy;\n  const clift = cdx * cdx + cdy * cdy;\n  return alift * bcdet + blift * cadet + clift * abdet;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
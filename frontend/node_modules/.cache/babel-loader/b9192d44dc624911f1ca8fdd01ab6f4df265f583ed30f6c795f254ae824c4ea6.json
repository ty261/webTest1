{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIJIN\\\\Desktop\\\\webTest\\\\Bak\\\\webTest\\\\frontend\\\\src\\\\pages\\\\ActuatorDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, Container, Typography, Button, Grid, Paper, Divider, TextField, FormControl, InputLabel, Select, MenuItem, Switch, FormControlLabel, Tab, Tabs, CircularProgress, Chip, Card, CardContent, CardHeader, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Alert, Tooltip, Slider, List, ListItem, ListItemText, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { ArrowBack as ArrowBackIcon, Save as SaveIcon, PowerSettingsNew as PowerIcon, History as HistoryIcon, Edit as EditIcon, Add as AddIcon, Delete as DeleteIcon, SettingsBackupRestore as ResetIcon, Check as CheckIcon, Close as CloseIcon, Settings as SettingsIcon, ErrorOutline as ErrorOutlineIcon, DateRange as DateRangeIcon, Opacity as HumidityIcon, Thermostat as TemperatureIcon, Air as FanIcon, WbSunny as LightIcon, WaterDrop as WaterIcon } from '@mui/icons-material';\nimport { actuatorAPI } from '../services/api';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { useSocket } from '../contexts/SocketContext';\n\n// Actuator type mapping\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ACTUATOR_TYPE_NAMES = {\n  'irrigation': 'Irrigation System',\n  'ventilation': 'Ventilation System',\n  'lighting': 'Lighting System',\n  'heating': 'Heating System',\n  'cooling': 'Cooling System',\n  'curtain': 'Curtain System',\n  'nutrient': 'Nutrient System',\n  'water_pump': 'Water Pump',\n  'fan': 'Fan',\n  'humidifier': 'Humidifier',\n  'pump': 'Pump'\n};\n\n// Actuator status styles and labels\nconst STATUS_STYLES = {\n  'on': {\n    color: 'success',\n    label: 'On'\n  },\n  'off': {\n    color: 'default',\n    label: 'Off'\n  },\n  'low': {\n    color: 'info',\n    label: 'Low'\n  },\n  'medium': {\n    color: 'primary',\n    label: 'Medium'\n  },\n  'high': {\n    color: 'warning',\n    label: 'High'\n  },\n  'auto': {\n    color: 'secondary',\n    label: 'Auto'\n  },\n  'dim': {\n    color: 'info',\n    label: 'Dim'\n  },\n  'bright': {\n    color: 'warning',\n    label: 'Bright'\n  },\n  'open': {\n    color: 'success',\n    label: 'Open'\n  },\n  'closed': {\n    color: 'default',\n    label: 'Closed'\n  },\n  'half': {\n    color: 'info',\n    label: 'Half open'\n  },\n  'error': {\n    color: 'error',\n    label: 'Error'\n  }\n};\n\n// Sensor type mapping\nconst SENSOR_TYPE_NAMES = {\n  'temperature': 'Temperature',\n  'humidity': 'Humidity',\n  'light': 'Light',\n  'soil_moisture': 'Soil Moisture',\n  'co2': 'CO2',\n  'ph': 'pH Value',\n  'water_level': 'Water Level'\n};\n\n// Condition type mapping\nconst CONDITION_TYPE_NAMES = {\n  'gt': 'Greater than',\n  'lt': 'Less than',\n  'eq': 'Equal to',\n  'gte': 'Greater than or equal to',\n  'lte': 'Less than or equal to',\n  'change': 'Change'\n};\n\n// Tab definition\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `actuator-tabpanel-${index}`,\n    \"aria-labelledby\": `actuator-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n// Get actuator icon based on type\n_c = TabPanel;\nconst getActuatorIcon = type => {\n  switch (type) {\n    case 'fan':\n      return /*#__PURE__*/_jsxDEV(FanIcon, {\n        color: \"info\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 24\n      }, this);\n    case 'lighting':\n      return /*#__PURE__*/_jsxDEV(LightIcon, {\n        color: \"warning\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }, this);\n    case 'humidifier':\n      return /*#__PURE__*/_jsxDEV(HumidityIcon, {\n        color: \"primary\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 31\n      }, this);\n    case 'irrigation':\n    case 'water_pump':\n    case 'pump':\n      return /*#__PURE__*/_jsxDEV(WaterIcon, {\n        color: \"primary\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this);\n    case 'heating':\n      return /*#__PURE__*/_jsxDEV(TemperatureIcon, {\n        color: \"error\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 28\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(SettingsIcon, {\n        color: \"action\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this);\n  }\n};\n\n// Format date string\nconst formatDate = dateString => {\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\n// Generate mock historical data for demo purposes\nconst generateMockHistory = (actuatorType, days) => {\n  const history = [];\n  const now = new Date();\n  for (let i = days; i >= 0; i--) {\n    const date = new Date(now);\n    date.setDate(date.getDate() - i);\n\n    // Generate history points throughout the day\n    for (let hour of [8, 12, 16, 20]) {\n      const dataPoint = new Date(date);\n      dataPoint.setHours(hour, 0, 0);\n\n      // Each day has a 80% chance of being turned on at some point\n      const isOn = Math.random() < 0.8;\n\n      // For fans, generate speed data\n      let parameters = {};\n      if (actuatorType === 'fan') {\n        parameters.speed = Math.floor(Math.random() * 5) + 1;\n      } else if (actuatorType === 'lighting') {\n        parameters.brightness = Math.floor(Math.random() * 100);\n      } else if (actuatorType === 'irrigation' || actuatorType === 'pump' || actuatorType === 'water_pump') {\n        parameters.flow_rate = Math.floor(Math.random() * 90) + 10;\n      }\n      history.push({\n        timestamp: dataPoint.toISOString(),\n        status: isOn ? 'on' : 'off',\n        parameters: parameters\n      });\n    }\n  }\n  return history;\n};\nconst ActuatorDetail = () => {\n  _s();\n  var _STATUS_STYLES$actuat, _STATUS_STYLES$actuat2;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [actuator, setActuator] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [tabValue, setTabValue] = useState(0);\n  const [editMode, setEditMode] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [logs, setLogs] = useState([]);\n  const [allowedStates, setAllowedStates] = useState(['on', 'off']);\n  const [autoRuleDialogOpen, setAutoRuleDialogOpen] = useState(false);\n  const [newRule, setNewRule] = useState({\n    sensor_type: '',\n    condition: 'gt',\n    value: 0,\n    action: 'on',\n    parameters: {}\n  });\n  const [saveLoading, setSaveLoading] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n  const [parameterEdit, setParameterEdit] = useState({});\n  const [chartData, setChartData] = useState([]);\n  const [historyData, setHistoryData] = useState([]);\n  const [statistics, setStatistics] = useState({\n    onTime: 0,\n    offTime: 0,\n    activationsToday: 0,\n    averageActivationDuration: 0,\n    lastActivation: null\n  });\n  const {\n    actuatorData\n  } = useSocket() || {\n    actuatorData: {}\n  };\n\n  // Get actuator details\n  const fetchActuatorDetail = async () => {\n    setLoading(true);\n    try {\n      const response = await actuatorAPI.getActuator(id);\n      const data = response.data.data;\n      setActuator(data);\n      setEditData({\n        name: data.name,\n        location: data.location,\n        is_active: data.is_active,\n        mode: data.mode,\n        mqtt_topic: data.mqtt_topic\n      });\n      // Get allowed states\n      const allowedStatesResponse = await actuatorAPI.getActuatorStatuses(id);\n      setAllowedStates(allowedStatesResponse.data.data || ['on', 'off']);\n\n      // Get actuator logs\n      const logsResponse = await actuatorAPI.getActuatorLogs(id);\n      setLogs(logsResponse.data.data || []);\n\n      // Generate historical data for chart visualization\n      const mockHistory = data.history || generateMockHistory(data.type, 30);\n      setHistoryData(mockHistory);\n\n      // Prepare chart data\n      prepareChartData(mockHistory);\n\n      // Calculate statistics\n      calculateStatistics(mockHistory, data.status);\n      setError(null);\n    } catch (err) {\n      console.error('Failed to get actuator details:', err);\n      setError('Failed to get actuator details, please try again later');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchActuatorDetail();\n  }, [id]);\n\n  // Update from Socket data if available\n  useEffect(() => {\n    if (!actuator || Object.keys(actuatorData).length === 0) return;\n\n    // Find matching actuator data\n    Object.values(actuatorData).forEach(socketActuator => {\n      if (socketActuator.type === actuator.type && socketActuator.location.toLowerCase() === actuator.location.toLowerCase()) {\n        setActuator(prev => ({\n          ...prev,\n          status: socketActuator.status,\n          last_control_time: new Date().toISOString()\n        }));\n      }\n    });\n  }, [actuatorData, actuator]);\n\n  // Prepare chart data for visualization\n  const prepareChartData = history => {\n    if (!history || history.length === 0) return;\n\n    // Get the most recent 7 days of data\n    const recentHistory = history.slice(-28);\n\n    // Transform to chart format\n    const formattedData = recentHistory.map(item => ({\n      timestamp: new Date(item.timestamp),\n      date: new Date(item.timestamp).toLocaleDateString(),\n      time: new Date(item.timestamp).toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      }),\n      status: item.status === 'on' ? 1 : 0,\n      ...(item.parameters || {})\n    }));\n    setChartData(formattedData);\n  };\n\n  // Calculate usage statistics\n  const calculateStatistics = (history, currentStatus) => {\n    if (!history || history.length === 0) return;\n\n    // Today's date\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    // Filter logs from today\n    const todayLogs = history.filter(log => {\n      const logDate = new Date(log.timestamp);\n      return logDate >= today;\n    });\n\n    // Count activations today (on to off transitions)\n    let activationsToday = 0;\n    let lastStatus = null;\n    todayLogs.forEach(log => {\n      if (lastStatus === 'off' && log.status === 'on') {\n        activationsToday++;\n      }\n      lastStatus = log.status;\n    });\n\n    // Calculate percentage of time on vs off over the last 7 days\n    const last7days = new Date();\n    last7days.setDate(last7days.getDate() - 7);\n    const last7daysLogs = history.filter(log => {\n      const logDate = new Date(log.timestamp);\n      return logDate >= last7days;\n    });\n    let totalOnMilliseconds = 0;\n    let totalTimeMilliseconds = 0;\n    if (last7daysLogs.length > 0) {\n      // Sort by timestamp\n      const sortedLogs = [...last7daysLogs].sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      let prevLog = null;\n      sortedLogs.forEach(log => {\n        if (prevLog) {\n          const currentTime = new Date(log.timestamp).getTime();\n          const prevTime = new Date(prevLog.timestamp).getTime();\n          const timeDiff = currentTime - prevTime;\n          totalTimeMilliseconds += timeDiff;\n          if (prevLog.status === 'on') {\n            totalOnMilliseconds += timeDiff;\n          }\n        }\n        prevLog = log;\n      });\n    }\n\n    // Calculate on/off percentages\n    const onPercentage = totalTimeMilliseconds > 0 ? Math.round(totalOnMilliseconds / totalTimeMilliseconds * 100) : 0;\n    const offPercentage = 100 - onPercentage;\n\n    // Find the last activation time\n    const lastActivation = history.filter(log => log.status === 'on').sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))[0];\n    setStatistics({\n      onTime: onPercentage,\n      offTime: offPercentage,\n      activationsToday,\n      averageActivationDuration: totalOnMilliseconds > 0 && activationsToday > 0 ? Math.round(totalOnMilliseconds / activationsToday / (1000 * 60)) : 0,\n      lastActivation: (lastActivation === null || lastActivation === void 0 ? void 0 : lastActivation.timestamp) || null\n    });\n  };\n\n  // Control actuator\n  const handleControlActuator = async action => {\n    try {\n      await actuatorAPI.controlActuator(id, {\n        action\n      });\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        status: action,\n        last_control_time: new Date().toISOString()\n      }));\n      // Refresh logs\n      const logsResponse = await actuatorAPI.getActuatorLogs(id);\n      setLogs(logsResponse.data.data || []);\n    } catch (err) {\n      console.error('Failed to control actuator:', err);\n      setError('Operation failed, please try again later');\n    }\n  };\n  const handleSaveChanges = async () => {\n    setSaveLoading(true);\n    try {\n      await actuatorAPI.updateActuator(id, editData);\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        ...editData\n      }));\n      setEditMode(false);\n      setSaveSuccess(true);\n      setTimeout(() => setSaveSuccess(false), 3000);\n    } catch (err) {\n      console.error('Failed to update actuator:', err);\n      setError('Update failed, please try again later');\n    } finally {\n      setSaveLoading(false);\n    }\n  };\n  const handleAddAutoRule = async () => {\n    if (!newRule.sensor_type || !newRule.condition) {\n      setError('Please complete the automatic control rule information');\n      return;\n    }\n    try {\n      const autoRules = {\n        ...(actuator.auto_rules || {})\n      };\n      autoRules[newRule.sensor_type] = {\n        [newRule.condition]: parseFloat(newRule.value),\n        action: newRule.action,\n        parameters: newRule.parameters\n      };\n      await actuatorAPI.updateAutoRules(id, autoRules);\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        auto_rules: autoRules\n      }));\n      setAutoRuleDialogOpen(false);\n      setNewRule({\n        sensor_type: '',\n        condition: 'gt',\n        value: 0,\n        action: 'on',\n        parameters: {}\n      });\n    } catch (err) {\n      console.error('Failed to update automatic control rules:', err);\n      setError('Update rule failed, please try again later');\n    }\n  };\n  const handleRemoveAutoRule = async sensorType => {\n    try {\n      const autoRules = {\n        ...(actuator.auto_rules || {})\n      };\n      delete autoRules[sensorType];\n      await actuatorAPI.updateAutoRules(id, autoRules);\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        auto_rules: autoRules\n      }));\n    } catch (err) {\n      console.error('Failed to remove automatic control rule:', err);\n      setError('Failed to remove rule, please try again later');\n    }\n  };\n  const handleEditParameters = async () => {\n    try {\n      await actuatorAPI.updateParameters(id, parameterEdit);\n      // Update status\n      setActuator(prev => ({\n        ...prev,\n        parameters: {\n          ...prev.parameters,\n          ...parameterEdit\n        }\n      }));\n      setParameterEdit({});\n    } catch (err) {\n      console.error('Failed to update parameters:', err);\n      setError('Update parameters failed, please try again later');\n    }\n  };\n  const getParameterFields = () => {\n    if (!actuator || !actuator.parameters) return null;\n    const parameters = actuator.parameters;\n    switch (actuator.type) {\n      case 'fan':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Fan Speed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.speed || parameters.speed || 0,\n              min: 0,\n              max: parameters.max_speed || 5,\n              step: 1,\n              marks: true,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                speed: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Direction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: parameterEdit.direction || parameters.direction || 'forward',\n              onChange: e => setParameterEdit({\n                ...parameterEdit,\n                direction: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"forward\",\n                children: \"Forward\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"reverse\",\n                children: \"Reverse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'lighting':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Brightness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.brightness || parameters.brightness || 0,\n              min: 0,\n              max: 100,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                brightness: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Color Temperature (K)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.color_temp || parameters.color_temp || 3000,\n              min: 2000,\n              max: 6500,\n              step: 100,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                color_temp: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'irrigation':\n      case 'water_pump':\n      case 'pump':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Flow Rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.flow_rate || parameters.flow_rate || 100,\n              min: 10,\n              max: 100,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                flow_rate: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'humidifier':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Humidity Intensity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              px: 2,\n              pb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: parameterEdit.intensity || parameters.intensity || 0,\n              min: 0,\n              max: parameters.max_intensity || 10,\n              step: 1,\n              marks: true,\n              valueLabelDisplay: \"auto\",\n              onChange: (_, value) => setParameterEdit({\n                ...parameterEdit,\n                intensity: value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      default:\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"No parameters available for this actuator type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this);\n    }\n  };\n\n  // Get rule parameter fields based on actuator type\n  const getRuleParameterFields = (actuatorType, actionValue) => {\n    switch (actuatorType) {\n      case 'fan':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Fan Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newRule.parameters.speed || '',\n              onChange: e => setNewRule({\n                ...newRule,\n                parameters: {\n                  ...newRule.parameters,\n                  speed: parseInt(e.target.value)\n                }\n              }),\n              children: [0, 1, 2, 3, 4, 5].map(speed => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: speed,\n                children: speed\n              }, speed, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      case 'lighting':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            label: \"Brightness\",\n            type: \"number\",\n            value: newRule.parameters.brightness || '',\n            onChange: e => setNewRule({\n              ...newRule,\n              parameters: {\n                ...newRule.parameters,\n                brightness: parseInt(e.target.value)\n              }\n            }),\n            InputProps: {\n              inputProps: {\n                min: 0,\n                max: 100\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      default:\n        return null;\n    }\n  };\n\n  // Tab switch handling\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  // Render auto rules\n  const renderAutoRules = () => {\n    if (!actuator || !actuator.auto_rules || Object.keys(actuator.auto_rules).length === 0) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"No automatic control rules yet, please add one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this);\n    }\n    return Object.entries(actuator.auto_rules).map(([sensorType, rule]) => {\n      var _STATUS_STYLES$action;\n      const condition = Object.keys(rule)[0];\n      if (!condition) return null;\n      const value = rule[condition];\n      const action = rule.action;\n      const parameters = rule.parameters || {};\n      return /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: `${SENSOR_TYPE_NAMES[sensorType] || sensorType} ${CONDITION_TYPE_NAMES[condition] || condition} ${value}`,\n          subheader: `Action: ${((_STATUS_STYLES$action = STATUS_STYLES[action]) === null || _STATUS_STYLES$action === void 0 ? void 0 : _STATUS_STYLES$action.label) || action}`,\n          action: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => handleRemoveAutoRule(sensorType),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this), Object.keys(parameters).length > 0 && /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"Parameter Settings:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: Object.entries(parameters).map(([key, value]) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${key}: ${value}`,\n              size: \"small\",\n              sx: {\n                mr: 1,\n                mb: 1\n              }\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this)]\n      }, sensorType, true, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  // Render operation logs\n  const renderLogs = () => {\n    if (logs.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"No operation records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this);\n    }\n    return logs.map(log => {\n      var _STATUS_STYLES$log$st, _STATUS_STYLES$log$st2, _STATUS_STYLES$log$pr, _STATUS_STYLES$log$st3;\n      const date = new Date(log.timestamp);\n      const formattedDate = date.toLocaleString();\n      return /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: log.message,\n          subheader: formattedDate,\n          avatar: /*#__PURE__*/_jsxDEV(Chip, {\n            label: ((_STATUS_STYLES$log$st = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st === void 0 ? void 0 : _STATUS_STYLES$log$st.label) || log.status,\n            color: ((_STATUS_STYLES$log$st2 = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st2 === void 0 ? void 0 : _STATUS_STYLES$log$st2.color) || 'default',\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: `Changed from ${((_STATUS_STYLES$log$pr = STATUS_STYLES[log.previous_state]) === null || _STATUS_STYLES$log$pr === void 0 ? void 0 : _STATUS_STYLES$log$pr.label) || log.previous_state} to ${((_STATUS_STYLES$log$st3 = STATUS_STYLES[log.status]) === null || _STATUS_STYLES$log$st3 === void 0 ? void 0 : _STATUS_STYLES$log$st3.label) || log.status}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this), log.parameters && Object.keys(log.parameters).length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Parameter changes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 17\n            }, this), Object.entries(log.parameters).map(([key, value]) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${key}: ${value}`,\n              size: \"small\",\n              sx: {\n                mr: 1,\n                mt: 1\n              }\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this)]\n      }, log.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '70vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 24\n          }, this),\n          onClick: () => navigate('/actuators'),\n          sx: {\n            mt: 2\n          },\n          children: \"Back to Actuator List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 7\n    }, this);\n  }\n  if (!actuator) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"warning\",\n          children: \"Actuator information not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 24\n          }, this),\n          onClick: () => navigate('/actuators'),\n          sx: {\n            mt: 2\n          },\n          children: \"Back to Actuator List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 26\n            }, this),\n            onClick: () => navigate('/actuators'),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            children: actuator.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: ((_STATUS_STYLES$actuat = STATUS_STYLES[actuator.status]) === null || _STATUS_STYLES$actuat === void 0 ? void 0 : _STATUS_STYLES$actuat.label) || actuator.status,\n            color: ((_STATUS_STYLES$actuat2 = STATUS_STYLES[actuator.status]) === null || _STATUS_STYLES$actuat2 === void 0 ? void 0 : _STATUS_STYLES$actuat2.color) || 'default'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 7\n    }, this), saveSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: \"Saved successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderBottom: 1,\n        borderColor: 'divider'\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        onChange: handleTabChange,\n        \"aria-label\": \"Actuator detail tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Control Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Automatic Rules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Operation Logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 0,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Basic Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 13\n          }, this), !editMode ? /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 28\n            }, this),\n            onClick: () => setEditMode(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 30\n              }, this),\n              onClick: () => {\n                setEditMode(false);\n                setEditData({\n                  name: actuator.name,\n                  location: actuator.location,\n                  is_active: actuator.is_active,\n                  mode: actuator.mode,\n                  mqtt_topic: actuator.mqtt_topic\n                });\n              },\n              sx: {\n                mr: 1\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 30\n              }, this),\n              variant: \"contained\",\n              onClick: handleSaveChanges,\n              disabled: saveLoading,\n              children: saveLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 34\n              }, this) : 'Save'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: editMode ?\n          /*#__PURE__*/\n          // Edit mode\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Name\",\n                value: editData.name || '',\n                onChange: e => setEditData({\n                  ...editData,\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Location\",\n                value: editData.location || '',\n                onChange: e => setEditData({\n                  ...editData,\n                  location: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Operation Mode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 902,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: editData.mode || 'manual',\n                  onChange: e => setEditData({\n                    ...editData,\n                    mode: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"manual\",\n                    children: \"Manual\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 907,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"auto\",\n                    children: \"Automatic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 908,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"MQTT Topic\",\n                value: editData.mqtt_topic || '',\n                onChange: e => setEditData({\n                  ...editData,\n                  mqtt_topic: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 913,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: editData.is_active,\n                  onChange: e => setEditData({\n                    ...editData,\n                    is_active: e.target.checked\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 923,\n                  columnNumber: 23\n                }, this),\n                label: \"Enable this actuator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) :\n          /*#__PURE__*/\n          // View mode\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 936,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: ACTUATOR_TYPE_NAMES[actuator.type] || actuator.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 940,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: actuator.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: actuator.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"MQTT Topic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 948,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: actuator.mqtt_topic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Operation Mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: actuator.mode === 'auto' ? 'Automatic' : 'Manual'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: actuator.is_active ? 'Enabled' : 'Disabled'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Created At\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: new Date(actuator.created_at).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Last Updated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: new Date(actuator.updated_at).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 969,\n              columnNumber: 17\n            }, this), actuator.last_control_time && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Last Control Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: new Date(actuator.last_control_time).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 978,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Status Control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                mb: 3\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 1,\n                mb: 3\n              },\n              children: allowedStates.map(state => {\n                var _STATUS_STYLES$state, _STATUS_STYLES$state2;\n                return /*#__PURE__*/_jsxDEV(Button, {\n                  variant: actuator.status === state ? \"contained\" : \"outlined\",\n                  color: ((_STATUS_STYLES$state = STATUS_STYLES[state]) === null || _STATUS_STYLES$state === void 0 ? void 0 : _STATUS_STYLES$state.color) || 'primary',\n                  onClick: () => handleControlActuator(state),\n                  sx: {\n                    minWidth: '100px'\n                  },\n                  children: ((_STATUS_STYLES$state2 = STATUS_STYLES[state]) === null || _STATUS_STYLES$state2 === void 0 ? void 0 : _STATUS_STYLES$state2.label) || state\n                }, state, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 999,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Parameter Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                mb: 3\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1016,\n              columnNumber: 15\n            }, this), !actuator.parameters || Object.keys(actuator.parameters).length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"This actuator has no parameter settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [getParameterFields(), Object.keys(parameterEdit).length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  display: 'flex',\n                  justifyContent: 'flex-end'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  onClick: () => setParameterEdit({}),\n                  sx: {\n                    mr: 1\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1028,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: handleEditParameters,\n                  children: \"Apply Parameters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1035,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1027,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 2,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Automatic Control Rules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 26\n            }, this),\n            onClick: () => setAutoRuleDialogOpen(true),\n            children: \"Add Rule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 11\n        }, this), renderAutoRules()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1052,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: autoRuleDialogOpen,\n        onClose: () => setAutoRuleDialogOpen(false),\n        maxWidth: \"sm\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Add Automatic Control Rule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1070,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Sensor Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1073,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newRule.sensor_type || '',\n              onChange: e => setNewRule({\n                ...newRule,\n                sensor_type: e.target.value\n              }),\n              children: Object.entries(SENSOR_TYPE_NAMES).map(([key, value]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: key,\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1074,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Condition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newRule.condition || 'gt',\n              onChange: e => setNewRule({\n                ...newRule,\n                condition: e.target.value\n              }),\n              children: Object.entries(CONDITION_TYPE_NAMES).map(([key, value]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: key,\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1091,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1084,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            label: \"Value\",\n            type: \"number\",\n            value: newRule.value || '',\n            onChange: e => setNewRule({\n              ...newRule,\n              value: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newRule.action || '',\n              onChange: e => setNewRule({\n                ...newRule,\n                action: e.target.value\n              }),\n              children: allowedStates.map(state => {\n                var _STATUS_STYLES$state3;\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: state,\n                  children: ((_STATUS_STYLES$state3 = STATUS_STYLES[state]) === null || _STATUS_STYLES$state3 === void 0 ? void 0 : _STATUS_STYLES$state3.label) || state\n                }, state, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1112,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 13\n          }, this), newRule.action && getRuleParameterFields(actuator.type, newRule.action)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setAutoRuleDialogOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddAutoRule,\n            variant: \"contained\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 3,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Operation Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 11\n        }, this), renderLogs()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 797,\n    columnNumber: 5\n  }, this);\n};\n_s(ActuatorDetail, \"PUH9+O5lLeNI2ynmAfiXe4vFGMM=\", false, function () {\n  return [useParams, useNavigate, useSocket];\n});\n_c2 = ActuatorDetail;\nexport default ActuatorDetail;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ActuatorDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Box","Container","Typography","Button","Grid","Paper","Divider","TextField","FormControl","InputLabel","Select","MenuItem","Switch","FormControlLabel","Tab","Tabs","CircularProgress","Chip","Card","CardContent","CardHeader","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Alert","Tooltip","Slider","List","ListItem","ListItemText","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","ArrowBack","ArrowBackIcon","Save","SaveIcon","PowerSettingsNew","PowerIcon","History","HistoryIcon","Edit","EditIcon","Add","AddIcon","Delete","DeleteIcon","SettingsBackupRestore","ResetIcon","Check","CheckIcon","Close","CloseIcon","Settings","SettingsIcon","ErrorOutline","ErrorOutlineIcon","DateRange","DateRangeIcon","Opacity","HumidityIcon","Thermostat","TemperatureIcon","Air","FanIcon","WbSunny","LightIcon","WaterDrop","WaterIcon","actuatorAPI","LineChart","Line","XAxis","YAxis","CartesianGrid","RechartsTooltip","ResponsiveContainer","Legend","useSocket","jsxDEV","_jsxDEV","Fragment","_Fragment","ACTUATOR_TYPE_NAMES","STATUS_STYLES","color","label","SENSOR_TYPE_NAMES","CONDITION_TYPE_NAMES","TabPanel","props","children","value","index","other","role","hidden","id","sx","py","fileName","_jsxFileName","lineNumber","columnNumber","_c","getActuatorIcon","type","fontSize","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","generateMockHistory","actuatorType","days","history","now","i","date","setDate","getDate","hour","dataPoint","setHours","isOn","Math","random","parameters","speed","floor","brightness","flow_rate","push","timestamp","toISOString","status","ActuatorDetail","_s","_STATUS_STYLES$actuat","_STATUS_STYLES$actuat2","navigate","actuator","setActuator","loading","setLoading","error","setError","tabValue","setTabValue","editMode","setEditMode","editData","setEditData","logs","setLogs","allowedStates","setAllowedStates","autoRuleDialogOpen","setAutoRuleDialogOpen","newRule","setNewRule","sensor_type","condition","action","saveLoading","setSaveLoading","saveSuccess","setSaveSuccess","parameterEdit","setParameterEdit","chartData","setChartData","historyData","setHistoryData","statistics","setStatistics","onTime","offTime","activationsToday","averageActivationDuration","lastActivation","actuatorData","fetchActuatorDetail","response","getActuator","data","name","location","is_active","mode","mqtt_topic","allowedStatesResponse","getActuatorStatuses","logsResponse","getActuatorLogs","mockHistory","prepareChartData","calculateStatistics","err","console","Object","keys","length","values","forEach","socketActuator","toLowerCase","prev","last_control_time","recentHistory","slice","formattedData","map","item","time","toLocaleTimeString","minute","currentStatus","today","todayLogs","filter","log","logDate","lastStatus","last7days","last7daysLogs","totalOnMilliseconds","totalTimeMilliseconds","sortedLogs","sort","a","b","prevLog","currentTime","getTime","prevTime","timeDiff","onPercentage","round","offPercentage","handleControlActuator","controlActuator","handleSaveChanges","updateActuator","setTimeout","handleAddAutoRule","autoRules","auto_rules","parseFloat","updateAutoRules","handleRemoveAutoRule","sensorType","handleEditParameters","updateParameters","getParameterFields","variant","gutterBottom","px","pb","min","max","max_speed","step","marks","valueLabelDisplay","onChange","_","fullWidth","margin","direction","e","target","color_temp","intensity","max_intensity","getRuleParameterFields","actionValue","parseInt","InputProps","inputProps","handleTabChange","event","newValue","renderAutoRules","entries","rule","_STATUS_STYLES$action","mb","title","subheader","onClick","mt","key","size","mr","renderLogs","_STATUS_STYLES$log$st","_STATUS_STYLES$log$st2","_STATUS_STYLES$log$pr","_STATUS_STYLES$log$st3","formattedDate","toLocaleString","message","avatar","previous_state","maxWidth","display","justifyContent","alignItems","height","severity","startIcon","container","spacing","xs","component","borderBottom","borderColor","p","disabled","md","control","checked","created_at","updated_at","flexWrap","gap","state","_STATUS_STYLES$state","_STATUS_STYLES$state2","minWidth","open","onClose","_STATUS_STYLES$state3","_c2","$RefreshReg$"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/src/pages/ActuatorDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { \r\n  Box, \r\n  Container, \r\n  Typography, \r\n  Button, \r\n  Grid, \r\n  Paper, \r\n  Divider, \r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  FormControlLabel,\r\n  Tab,\r\n  Tabs,\r\n  CircularProgress,\r\n  Chip,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Alert,\r\n  Tooltip,\r\n  Slider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow\r\n} from '@mui/material';\r\nimport { \r\n  ArrowBack as ArrowBackIcon,\r\n  Save as SaveIcon,\r\n  PowerSettingsNew as PowerIcon,\r\n  History as HistoryIcon,\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  SettingsBackupRestore as ResetIcon,\r\n  Check as CheckIcon,\r\n  Close as CloseIcon,\r\n  Settings as SettingsIcon,\r\n  ErrorOutline as ErrorOutlineIcon,\r\n  DateRange as DateRangeIcon,\r\n  Opacity as HumidityIcon,\r\n  Thermostat as TemperatureIcon,\r\n  Air as FanIcon,\r\n  WbSunny as LightIcon,\r\n  WaterDrop as WaterIcon\r\n} from '@mui/icons-material';\r\nimport { actuatorAPI } from '../services/api';\r\nimport { \r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, \r\n  Tooltip as RechartsTooltip, ResponsiveContainer, Legend \r\n} from 'recharts';\r\nimport { useSocket } from '../contexts/SocketContext';\r\n\r\n// Actuator type mapping\r\nconst ACTUATOR_TYPE_NAMES = {\r\n  'irrigation': 'Irrigation System',\r\n  'ventilation': 'Ventilation System',\r\n  'lighting': 'Lighting System',\r\n  'heating': 'Heating System',\r\n  'cooling': 'Cooling System', \r\n  'curtain': 'Curtain System',\r\n  'nutrient': 'Nutrient System',\r\n  'water_pump': 'Water Pump',\r\n  'fan': 'Fan',\r\n  'humidifier': 'Humidifier',\r\n  'pump': 'Pump'\r\n};\r\n\r\n// Actuator status styles and labels\r\nconst STATUS_STYLES = {\r\n  'on': { color: 'success', label: 'On' },\r\n  'off': { color: 'default', label: 'Off' },\r\n  'low': { color: 'info', label: 'Low' },\r\n  'medium': { color: 'primary', label: 'Medium' },\r\n  'high': { color: 'warning', label: 'High' },\r\n  'auto': { color: 'secondary', label: 'Auto' },\r\n  'dim': { color: 'info', label: 'Dim' },\r\n  'bright': { color: 'warning', label: 'Bright' },\r\n  'open': { color: 'success', label: 'Open' },\r\n  'closed': { color: 'default', label: 'Closed' },\r\n  'half': { color: 'info', label: 'Half open' },\r\n  'error': { color: 'error', label: 'Error' }\r\n};\r\n\r\n// Sensor type mapping\r\nconst SENSOR_TYPE_NAMES = {\r\n  'temperature': 'Temperature',\r\n  'humidity': 'Humidity',\r\n  'light': 'Light',\r\n  'soil_moisture': 'Soil Moisture',\r\n  'co2': 'CO2',\r\n  'ph': 'pH Value',\r\n  'water_level': 'Water Level'\r\n};\r\n\r\n// Condition type mapping\r\nconst CONDITION_TYPE_NAMES = {\r\n  'gt': 'Greater than',\r\n  'lt': 'Less than',\r\n  'eq': 'Equal to',\r\n  'gte': 'Greater than or equal to',\r\n  'lte': 'Less than or equal to',\r\n  'change': 'Change'\r\n};\r\n\r\n// Tab definition\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`actuator-tabpanel-${index}`}\r\n      aria-labelledby={`actuator-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ py: 3 }}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Get actuator icon based on type\r\nconst getActuatorIcon = (type) => {\r\n  switch(type) {\r\n    case 'fan': return <FanIcon color=\"info\" fontSize=\"large\" />;\r\n    case 'lighting': return <LightIcon color=\"warning\" fontSize=\"large\" />;\r\n    case 'humidifier': return <HumidityIcon color=\"primary\" fontSize=\"large\" />;\r\n    case 'irrigation':\r\n    case 'water_pump':\r\n    case 'pump': return <WaterIcon color=\"primary\" fontSize=\"large\" />;\r\n    case 'heating': return <TemperatureIcon color=\"error\" fontSize=\"large\" />;\r\n    default: return <SettingsIcon color=\"action\" fontSize=\"large\" />;\r\n  }\r\n};\r\n\r\n// Format date string\r\nconst formatDate = (dateString) => {\r\n  const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n  return new Date(dateString).toLocaleDateString(undefined, options);\r\n};\r\n\r\n// Generate mock historical data for demo purposes\r\nconst generateMockHistory = (actuatorType, days) => {\r\n  const history = [];\r\n  const now = new Date();\r\n\r\n  for (let i = days; i >= 0; i--) {\r\n    const date = new Date(now);\r\n    date.setDate(date.getDate() - i);\r\n    \r\n    // Generate history points throughout the day\r\n    for (let hour of [8, 12, 16, 20]) {\r\n      const dataPoint = new Date(date);\r\n      dataPoint.setHours(hour, 0, 0);\r\n      \r\n      // Each day has a 80% chance of being turned on at some point\r\n      const isOn = Math.random() < 0.8;\r\n      \r\n      // For fans, generate speed data\r\n      let parameters = {};\r\n      if (actuatorType === 'fan') {\r\n        parameters.speed = Math.floor(Math.random() * 5) + 1;\r\n      } else if (actuatorType === 'lighting') {\r\n        parameters.brightness = Math.floor(Math.random() * 100);\r\n      } else if (actuatorType === 'irrigation' || actuatorType === 'pump' || actuatorType === 'water_pump') {\r\n        parameters.flow_rate = Math.floor(Math.random() * 90) + 10;\r\n      }\r\n      \r\n      history.push({\r\n        timestamp: dataPoint.toISOString(),\r\n        status: isOn ? 'on' : 'off',\r\n        parameters: parameters\r\n      });\r\n    }\r\n  }\r\n  \r\n  return history;\r\n};\r\n\r\nconst ActuatorDetail = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [actuator, setActuator] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editData, setEditData] = useState({});\r\n  const [logs, setLogs] = useState([]);\r\n  const [allowedStates, setAllowedStates] = useState(['on', 'off']);\r\n  const [autoRuleDialogOpen, setAutoRuleDialogOpen] = useState(false);\r\n  const [newRule, setNewRule] = useState({\r\n    sensor_type: '',\r\n    condition: 'gt',\r\n    value: 0,\r\n    action: 'on',\r\n    parameters: {}\r\n  });\r\n  const [saveLoading, setSaveLoading] = useState(false);\r\n  const [saveSuccess, setSaveSuccess] = useState(false);\r\n  const [parameterEdit, setParameterEdit] = useState({});\r\n  const [chartData, setChartData] = useState([]);\r\n  const [historyData, setHistoryData] = useState([]);\r\n  const [statistics, setStatistics] = useState({\r\n    onTime: 0,\r\n    offTime: 0,\r\n    activationsToday: 0,\r\n    averageActivationDuration: 0,\r\n    lastActivation: null\r\n  });\r\n  const { actuatorData } = useSocket() || { actuatorData: {} };\r\n\r\n  // Get actuator details\r\n  const fetchActuatorDetail = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await actuatorAPI.getActuator(id);\r\n      const data = response.data.data;\r\n      setActuator(data);\r\n      setEditData({\r\n        name: data.name,\r\n        location: data.location,\r\n        is_active: data.is_active,\r\n        mode: data.mode,\r\n        mqtt_topic: data.mqtt_topic\r\n      });\r\n      // Get allowed states\r\n      const allowedStatesResponse = await actuatorAPI.getActuatorStatuses(id);\r\n      setAllowedStates(allowedStatesResponse.data.data || ['on', 'off']);\r\n      \r\n      // Get actuator logs\r\n      const logsResponse = await actuatorAPI.getActuatorLogs(id);\r\n      setLogs(logsResponse.data.data || []);\r\n      \r\n      // Generate historical data for chart visualization\r\n      const mockHistory = data.history || generateMockHistory(data.type, 30);\r\n      setHistoryData(mockHistory);\r\n      \r\n      // Prepare chart data\r\n      prepareChartData(mockHistory);\r\n      \r\n      // Calculate statistics\r\n      calculateStatistics(mockHistory, data.status);\r\n      \r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Failed to get actuator details:', err);\r\n      setError('Failed to get actuator details, please try again later');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchActuatorDetail();\r\n  }, [id]);\r\n\r\n  // Update from Socket data if available\r\n  useEffect(() => {\r\n    if (!actuator || Object.keys(actuatorData).length === 0) return;\r\n    \r\n    // Find matching actuator data\r\n    Object.values(actuatorData).forEach(socketActuator => {\r\n      if (socketActuator.type === actuator.type && \r\n          socketActuator.location.toLowerCase() === actuator.location.toLowerCase()) {\r\n        \r\n        setActuator(prev => ({\r\n          ...prev,\r\n          status: socketActuator.status,\r\n          last_control_time: new Date().toISOString()\r\n        }));\r\n      }\r\n    });\r\n  }, [actuatorData, actuator]);\r\n\r\n  // Prepare chart data for visualization\r\n  const prepareChartData = (history) => {\r\n    if (!history || history.length === 0) return;\r\n    \r\n    // Get the most recent 7 days of data\r\n    const recentHistory = history.slice(-28);\r\n    \r\n    // Transform to chart format\r\n    const formattedData = recentHistory.map(item => ({\r\n      timestamp: new Date(item.timestamp),\r\n      date: new Date(item.timestamp).toLocaleDateString(),\r\n      time: new Date(item.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}),\r\n      status: item.status === 'on' ? 1 : 0,\r\n      ...(item.parameters || {})\r\n    }));\r\n    \r\n    setChartData(formattedData);\r\n  };\r\n\r\n  // Calculate usage statistics\r\n  const calculateStatistics = (history, currentStatus) => {\r\n    if (!history || history.length === 0) return;\r\n    \r\n    // Today's date\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    // Filter logs from today\r\n    const todayLogs = history.filter(log => {\r\n      const logDate = new Date(log.timestamp);\r\n      return logDate >= today;\r\n    });\r\n    \r\n    // Count activations today (on to off transitions)\r\n    let activationsToday = 0;\r\n    let lastStatus = null;\r\n    todayLogs.forEach(log => {\r\n      if (lastStatus === 'off' && log.status === 'on') {\r\n        activationsToday++;\r\n      }\r\n      lastStatus = log.status;\r\n    });\r\n    \r\n    // Calculate percentage of time on vs off over the last 7 days\r\n    const last7days = new Date();\r\n    last7days.setDate(last7days.getDate() - 7);\r\n    \r\n    const last7daysLogs = history.filter(log => {\r\n      const logDate = new Date(log.timestamp);\r\n      return logDate >= last7days;\r\n    });\r\n    \r\n    let totalOnMilliseconds = 0;\r\n    let totalTimeMilliseconds = 0;\r\n    \r\n    if (last7daysLogs.length > 0) {\r\n      // Sort by timestamp\r\n      const sortedLogs = [...last7daysLogs].sort((a, b) => \r\n        new Date(a.timestamp) - new Date(b.timestamp)\r\n      );\r\n      \r\n      let prevLog = null;\r\n      \r\n      sortedLogs.forEach(log => {\r\n        if (prevLog) {\r\n          const currentTime = new Date(log.timestamp).getTime();\r\n          const prevTime = new Date(prevLog.timestamp).getTime();\r\n          const timeDiff = currentTime - prevTime;\r\n          \r\n          totalTimeMilliseconds += timeDiff;\r\n          if (prevLog.status === 'on') {\r\n            totalOnMilliseconds += timeDiff;\r\n          }\r\n        }\r\n        prevLog = log;\r\n      });\r\n    }\r\n    \r\n    // Calculate on/off percentages\r\n    const onPercentage = totalTimeMilliseconds > 0 \r\n      ? Math.round((totalOnMilliseconds / totalTimeMilliseconds) * 100) \r\n      : 0;\r\n    \r\n    const offPercentage = 100 - onPercentage;\r\n    \r\n    // Find the last activation time\r\n    const lastActivation = history\r\n      .filter(log => log.status === 'on')\r\n      .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))[0];\r\n    \r\n    setStatistics({\r\n      onTime: onPercentage,\r\n      offTime: offPercentage,\r\n      activationsToday,\r\n      averageActivationDuration: totalOnMilliseconds > 0 && activationsToday > 0 \r\n        ? Math.round((totalOnMilliseconds / activationsToday) / (1000 * 60)) \r\n        : 0,\r\n      lastActivation: lastActivation?.timestamp || null\r\n    });\r\n  };\r\n\r\n  // Control actuator\r\n  const handleControlActuator = async (action) => {\r\n    try {\r\n      await actuatorAPI.controlActuator(id, { action });\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev, \r\n        status: action,\r\n        last_control_time: new Date().toISOString()\r\n      }));\r\n      // Refresh logs\r\n      const logsResponse = await actuatorAPI.getActuatorLogs(id);\r\n      setLogs(logsResponse.data.data || []);\r\n    } catch (err) {\r\n      console.error('Failed to control actuator:', err);\r\n      setError('Operation failed, please try again later');\r\n    }\r\n  };\r\n\r\n  const handleSaveChanges = async () => {\r\n    setSaveLoading(true);\r\n    try {\r\n      await actuatorAPI.updateActuator(id, editData);\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev,\r\n        ...editData\r\n      }));\r\n      setEditMode(false);\r\n      setSaveSuccess(true);\r\n      setTimeout(() => setSaveSuccess(false), 3000);\r\n    } catch (err) {\r\n      console.error('Failed to update actuator:', err);\r\n      setError('Update failed, please try again later');\r\n    } finally {\r\n      setSaveLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddAutoRule = async () => {\r\n    if (!newRule.sensor_type || !newRule.condition) {\r\n      setError('Please complete the automatic control rule information');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const autoRules = { ...(actuator.auto_rules || {}) };\r\n      autoRules[newRule.sensor_type] = {\r\n        [newRule.condition]: parseFloat(newRule.value),\r\n        action: newRule.action,\r\n        parameters: newRule.parameters\r\n      };\r\n\r\n      await actuatorAPI.updateAutoRules(id, autoRules);\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev,\r\n        auto_rules: autoRules\r\n      }));\r\n      setAutoRuleDialogOpen(false);\r\n      setNewRule({\r\n        sensor_type: '',\r\n        condition: 'gt',\r\n        value: 0,\r\n        action: 'on',\r\n        parameters: {}\r\n      });\r\n    } catch (err) {\r\n      console.error('Failed to update automatic control rules:', err);\r\n      setError('Update rule failed, please try again later');\r\n    }\r\n  };\r\n\r\n  const handleRemoveAutoRule = async (sensorType) => {\r\n    try {\r\n      const autoRules = { ...(actuator.auto_rules || {}) };\r\n      delete autoRules[sensorType];\r\n      \r\n      await actuatorAPI.updateAutoRules(id, autoRules);\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev,\r\n        auto_rules: autoRules\r\n      }));\r\n    } catch (err) {\r\n      console.error('Failed to remove automatic control rule:', err);\r\n      setError('Failed to remove rule, please try again later');\r\n    }\r\n  };\r\n\r\n  const handleEditParameters = async () => {\r\n    try {\r\n      await actuatorAPI.updateParameters(id, parameterEdit);\r\n      // Update status\r\n      setActuator(prev => ({\r\n        ...prev,\r\n        parameters: {...prev.parameters, ...parameterEdit}\r\n      }));\r\n      setParameterEdit({});\r\n    } catch (err) {\r\n      console.error('Failed to update parameters:', err);\r\n      setError('Update parameters failed, please try again later');\r\n    }\r\n  };\r\n\r\n  const getParameterFields = () => {\r\n    if (!actuator || !actuator.parameters) return null;\r\n    \r\n    const parameters = actuator.parameters;\r\n    \r\n    switch(actuator.type) {\r\n      case 'fan':\r\n        return (\r\n          <>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Fan Speed</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.speed || parameters.speed || 0}\r\n                min={0}\r\n                max={parameters.max_speed || 5}\r\n                step={1}\r\n                marks\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, speed: value})}\r\n              />\r\n            </Box>\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Direction</InputLabel>\r\n              <Select\r\n                value={parameterEdit.direction || parameters.direction || 'forward'}\r\n                onChange={(e) => setParameterEdit({...parameterEdit, direction: e.target.value})}\r\n              >\r\n                <MenuItem value=\"forward\">Forward</MenuItem>\r\n                <MenuItem value=\"reverse\">Reverse</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </>\r\n        );\r\n      case 'lighting':\r\n        return (\r\n          <>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Brightness</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.brightness || parameters.brightness || 0}\r\n                min={0}\r\n                max={100}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, brightness: value})}\r\n              />\r\n            </Box>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Color Temperature (K)</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.color_temp || parameters.color_temp || 3000}\r\n                min={2000}\r\n                max={6500}\r\n                step={100}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, color_temp: value})}\r\n              />\r\n            </Box>\r\n          </>\r\n        );\r\n      case 'irrigation':\r\n      case 'water_pump':\r\n      case 'pump':\r\n        return (\r\n          <>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Flow Rate (%)</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.flow_rate || parameters.flow_rate || 100}\r\n                min={10}\r\n                max={100}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, flow_rate: value})}\r\n              />\r\n            </Box>\r\n          </>\r\n        );\r\n      case 'humidifier':\r\n        return (\r\n          <>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Humidity Intensity</Typography>\r\n            <Box sx={{ px: 2, pb: 2 }}>\r\n              <Slider\r\n                value={parameterEdit.intensity || parameters.intensity || 0}\r\n                min={0}\r\n                max={parameters.max_intensity || 10}\r\n                step={1}\r\n                marks\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(_, value) => setParameterEdit({...parameterEdit, intensity: value})}\r\n              />\r\n            </Box>\r\n          </>\r\n        );\r\n      default:\r\n        return (\r\n          <Typography variant=\"body2\">No parameters available for this actuator type</Typography>\r\n        );\r\n    }\r\n  };\r\n\r\n  // Get rule parameter fields based on actuator type\r\n  const getRuleParameterFields = (actuatorType, actionValue) => {\r\n    switch(actuatorType) {\r\n      case 'fan':\r\n        return (\r\n          <>\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Fan Speed</InputLabel>\r\n              <Select\r\n                value={newRule.parameters.speed || ''}\r\n                onChange={(e) => setNewRule({\r\n                  ...newRule, \r\n                  parameters: {...newRule.parameters, speed: parseInt(e.target.value)}\r\n                })}\r\n              >\r\n                {[0, 1, 2, 3, 4, 5].map(speed => (\r\n                  <MenuItem key={speed} value={speed}>{speed}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </>\r\n        );\r\n      case 'lighting':\r\n        return (\r\n          <>\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              label=\"Brightness\"\r\n              type=\"number\"\r\n              value={newRule.parameters.brightness || ''}\r\n              onChange={(e) => setNewRule({\r\n                ...newRule, \r\n                parameters: {...newRule.parameters, brightness: parseInt(e.target.value)}\r\n              })}\r\n              InputProps={{ inputProps: { min: 0, max: 100 } }}\r\n            />\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Tab switch handling\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  // Render auto rules\r\n  const renderAutoRules = () => {\r\n    if (!actuator || !actuator.auto_rules || Object.keys(actuator.auto_rules).length === 0) {\r\n      return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          No automatic control rules yet, please add one\r\n        </Typography>\r\n      );\r\n    }\r\n\r\n    return Object.entries(actuator.auto_rules).map(([sensorType, rule]) => {\r\n      const condition = Object.keys(rule)[0];\r\n      if (!condition) return null;\r\n      \r\n      const value = rule[condition];\r\n      const action = rule.action;\r\n      const parameters = rule.parameters || {};\r\n      \r\n      return (\r\n        <Card key={sensorType} sx={{ mb: 2 }}>\r\n          <CardHeader\r\n            title={`${SENSOR_TYPE_NAMES[sensorType] || sensorType} ${CONDITION_TYPE_NAMES[condition] || condition} ${value}`}\r\n            subheader={`Action: ${STATUS_STYLES[action]?.label || action}`}\r\n            action={\r\n              <IconButton onClick={() => handleRemoveAutoRule(sensorType)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            }\r\n          />\r\n          {Object.keys(parameters).length > 0 && (\r\n            <CardContent>\r\n              <Typography variant=\"body2\">Parameter Settings:</Typography>\r\n              <Box sx={{ mt: 1 }}>\r\n                {Object.entries(parameters).map(([key, value]) => (\r\n                  <Chip \r\n                    key={key} \r\n                    label={`${key}: ${value}`} \r\n                    size=\"small\" \r\n                    sx={{ mr: 1, mb: 1 }} \r\n                  />\r\n                ))}\r\n              </Box>\r\n            </CardContent>\r\n          )}\r\n        </Card>\r\n      );\r\n    });\r\n  };\r\n\r\n  // Render operation logs\r\n  const renderLogs = () => {\r\n    if (logs.length === 0) {\r\n      return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          No operation records\r\n        </Typography>\r\n      );\r\n    }\r\n\r\n    return logs.map(log => {\r\n      const date = new Date(log.timestamp);\r\n      const formattedDate = date.toLocaleString();\r\n      \r\n      return (\r\n        <Card key={log.id} sx={{ mb: 2 }}>\r\n          <CardHeader\r\n            title={log.message}\r\n            subheader={formattedDate}\r\n            avatar={\r\n              <Chip \r\n                label={STATUS_STYLES[log.status]?.label || log.status} \r\n                color={STATUS_STYLES[log.status]?.color || 'default'} \r\n                size=\"small\" \r\n              />\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {`Changed from ${STATUS_STYLES[log.previous_state]?.label || log.previous_state} to ${STATUS_STYLES[log.status]?.label || log.status}`}\r\n            </Typography>\r\n            {log.parameters && Object.keys(log.parameters).length > 0 && (\r\n              <Box sx={{ mt: 1 }}>\r\n                <Typography variant=\"body2\">Parameter changes:</Typography>\r\n                {Object.entries(log.parameters).map(([key, value]) => (\r\n                  <Chip \r\n                    key={key} \r\n                    label={`${key}: ${value}`} \r\n                    size=\"small\" \r\n                    sx={{ mr: 1, mt: 1 }} \r\n                  />\r\n                ))}\r\n              </Box>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '70vh' }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mt: 4 }}>\r\n          <Alert severity=\"error\">{error}</Alert>\r\n          <Button \r\n            variant=\"outlined\" \r\n            startIcon={<ArrowBackIcon />} \r\n            onClick={() => navigate('/actuators')}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Back to Actuator List\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!actuator) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mt: 4 }}>\r\n          <Alert severity=\"warning\">Actuator information not found</Alert>\r\n          <Button \r\n            variant=\"outlined\" \r\n            startIcon={<ArrowBackIcon />} \r\n            onClick={() => navigate('/actuators')}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Back to Actuator List\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box sx={{ mt: 4, mb: 2 }}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item>\r\n            <Button \r\n              variant=\"outlined\" \r\n              startIcon={<ArrowBackIcon />} \r\n              onClick={() => navigate('/actuators')}\r\n            >\r\n              Back\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Typography variant=\"h4\" component=\"h1\">\r\n              {actuator.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip \r\n              label={STATUS_STYLES[actuator.status]?.label || actuator.status} \r\n              color={STATUS_STYLES[actuator.status]?.color || 'default'} \r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      {saveSuccess && (\r\n        <Alert severity=\"success\" sx={{ mb: 2 }}>Saved successfully</Alert>\r\n      )}\r\n\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"Actuator detail tabs\">\r\n          <Tab label=\"Basic Information\" />\r\n          <Tab label=\"Control Panel\" />\r\n          <Tab label=\"Automatic Rules\" />\r\n          <Tab label=\"Operation Logs\" />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {/* Basic Info Tab */}\r\n      <TabPanel value={tabValue} index={0}>\r\n        <Paper sx={{ p: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n            <Typography variant=\"h6\">Basic Information</Typography>\r\n            {!editMode ? (\r\n              <Button \r\n                startIcon={<EditIcon />} \r\n                onClick={() => setEditMode(true)}\r\n              >\r\n                Edit\r\n              </Button>\r\n            ) : (\r\n              <Box>\r\n                <Button \r\n                  startIcon={<CloseIcon />} \r\n                  onClick={() => {\r\n                    setEditMode(false);\r\n                    setEditData({\r\n                      name: actuator.name,\r\n                      location: actuator.location,\r\n                      is_active: actuator.is_active,\r\n                      mode: actuator.mode,\r\n                      mqtt_topic: actuator.mqtt_topic\r\n                    });\r\n                  }}\r\n                  sx={{ mr: 1 }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button \r\n                  startIcon={<SaveIcon />} \r\n                  variant=\"contained\" \r\n                  onClick={handleSaveChanges}\r\n                  disabled={saveLoading}\r\n                >\r\n                  {saveLoading ? <CircularProgress size={24} /> : 'Save'}\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n\r\n          <Divider sx={{ mb: 3 }} />\r\n\r\n          <Grid container spacing={3}>\r\n            {editMode ? (\r\n              // Edit mode\r\n              <>\r\n                <Grid item xs={12} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Name\"\r\n                    value={editData.name || ''}\r\n                    onChange={(e) => setEditData({...editData, name: e.target.value})}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Location\"\r\n                    value={editData.location || ''}\r\n                    onChange={(e) => setEditData({...editData, location: e.target.value})}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Operation Mode</InputLabel>\r\n                    <Select\r\n                      value={editData.mode || 'manual'}\r\n                      onChange={(e) => setEditData({...editData, mode: e.target.value})}\r\n                    >\r\n                      <MenuItem value=\"manual\">Manual</MenuItem>\r\n                      <MenuItem value=\"auto\">Automatic</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"MQTT Topic\"\r\n                    value={editData.mqtt_topic || ''}\r\n                    onChange={(e) => setEditData({...editData, mqtt_topic: e.target.value})}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={editData.is_active}\r\n                        onChange={(e) => setEditData({...editData, is_active: e.target.checked})}\r\n                      />\r\n                    }\r\n                    label=\"Enable this actuator\"\r\n                  />\r\n                </Grid>\r\n              </>\r\n            ) : (\r\n              // View mode\r\n              <>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Type</Typography>\r\n                  <Typography variant=\"body1\">{ACTUATOR_TYPE_NAMES[actuator.type] || actuator.type}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Name</Typography>\r\n                  <Typography variant=\"body1\">{actuator.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Location</Typography>\r\n                  <Typography variant=\"body1\">{actuator.location}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">MQTT Topic</Typography>\r\n                  <Typography variant=\"body1\">{actuator.mqtt_topic}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Operation Mode</Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {actuator.mode === 'auto' ? 'Automatic' : 'Manual'}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Status</Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {actuator.is_active ? 'Enabled' : 'Disabled'}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Created At</Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {new Date(actuator.created_at).toLocaleString()}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Last Updated</Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {new Date(actuator.updated_at).toLocaleString()}\r\n                  </Typography>\r\n                </Grid>\r\n                {actuator.last_control_time && (\r\n                  <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"subtitle2\" color=\"text.secondary\">Last Control Time</Typography>\r\n                    <Typography variant=\"body1\">\r\n                      {new Date(actuator.last_control_time).toLocaleString()}\r\n                    </Typography>\r\n                  </Grid>\r\n                )}\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n      </TabPanel>\r\n\r\n      {/* Control Panel Tab */}\r\n      <TabPanel value={tabValue} index={1}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom>Status Control</Typography>\r\n              <Divider sx={{ mb: 3 }} />\r\n              \r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 3 }}>\r\n                {allowedStates.map(state => (\r\n                  <Button\r\n                    key={state}\r\n                    variant={actuator.status === state ? \"contained\" : \"outlined\"}\r\n                    color={STATUS_STYLES[state]?.color || 'primary'}\r\n                    onClick={() => handleControlActuator(state)}\r\n                    sx={{ minWidth: '100px' }}\r\n                  >\r\n                    {STATUS_STYLES[state]?.label || state}\r\n                  </Button>\r\n                ))}\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={6}>\r\n            <Paper sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom>Parameter Settings</Typography>\r\n              <Divider sx={{ mb: 3 }} />\r\n              \r\n              {!actuator.parameters || Object.keys(actuator.parameters).length === 0 ? (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  This actuator has no parameter settings\r\n                </Typography>\r\n              ) : (\r\n                <>\r\n                  {getParameterFields()}\r\n                  \r\n                  {Object.keys(parameterEdit).length > 0 && (\r\n                    <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n                      <Button \r\n                        variant=\"outlined\" \r\n                        onClick={() => setParameterEdit({})} \r\n                        sx={{ mr: 1 }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                      <Button \r\n                        variant=\"contained\" \r\n                        onClick={handleEditParameters}\r\n                      >\r\n                        Apply Parameters\r\n                      </Button>\r\n                    </Box>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      {/* Automatic Rules Tab */}\r\n      <TabPanel value={tabValue} index={2}>\r\n        <Paper sx={{ p: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n            <Typography variant=\"h6\">Automatic Control Rules</Typography>\r\n            <Button \r\n              variant=\"contained\" \r\n              startIcon={<AddIcon />} \r\n              onClick={() => setAutoRuleDialogOpen(true)}\r\n            >\r\n              Add Rule\r\n            </Button>\r\n          </Box>\r\n          <Divider sx={{ mb: 3 }} />\r\n          \r\n          {renderAutoRules()}\r\n        </Paper>\r\n        \r\n        {/* Add Auto Rule Dialog */}\r\n        <Dialog open={autoRuleDialogOpen} onClose={() => setAutoRuleDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Add Automatic Control Rule</DialogTitle>\r\n          <DialogContent>\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Sensor Type</InputLabel>\r\n              <Select\r\n                value={newRule.sensor_type || ''}\r\n                onChange={(e) => setNewRule({...newRule, sensor_type: e.target.value})}\r\n              >\r\n                {Object.entries(SENSOR_TYPE_NAMES).map(([key, value]) => (\r\n                  <MenuItem key={key} value={key}>{value}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Condition</InputLabel>\r\n              <Select\r\n                value={newRule.condition || 'gt'}\r\n                onChange={(e) => setNewRule({...newRule, condition: e.target.value})}\r\n              >\r\n                {Object.entries(CONDITION_TYPE_NAMES).map(([key, value]) => (\r\n                  <MenuItem key={key} value={key}>{value}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              label=\"Value\"\r\n              type=\"number\"\r\n              value={newRule.value || ''}\r\n              onChange={(e) => setNewRule({...newRule, value: e.target.value})}\r\n            />\r\n            \r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Action</InputLabel>\r\n              <Select\r\n                value={newRule.action || ''}\r\n                onChange={(e) => setNewRule({...newRule, action: e.target.value})}\r\n              >\r\n                {allowedStates.map(state => (\r\n                  <MenuItem key={state} value={state}>\r\n                    {STATUS_STYLES[state]?.label || state}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            {/* Show parameter settings based on actuator type and action */}\r\n            {newRule.action && getRuleParameterFields(actuator.type, newRule.action)}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAutoRuleDialogOpen(false)}>Cancel</Button>\r\n            <Button onClick={handleAddAutoRule} variant=\"contained\">Add</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </TabPanel>\r\n\r\n      {/* Operation Logs Tab */}\r\n      <TabPanel value={tabValue} index={3}>\r\n        <Paper sx={{ p: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>Operation Records</Typography>\r\n          <Divider sx={{ mb: 3 }} />\r\n          \r\n          {renderLogs()}\r\n        </Paper>\r\n      </TabPanel>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ActuatorDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
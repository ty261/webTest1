{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useChartVoronoi = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"@mui/utils/useEnhancedEffect\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _d3Delaunay = require(\"@mui/x-charts-vendor/d3-delaunay\");\nvar _useScale = require(\"../../../../hooks/useScale\");\nvar _getSVGPoint = require(\"../../../getSVGPoint\");\nvar _useSelector = require(\"../../../store/useSelector\");\nvar _useChartCartesianAxis = require(\"../useChartCartesianAxis\");\nvar _useChartSeries = require(\"../../corePlugins/useChartSeries/useChartSeries.selectors\");\nvar _useChartDimensions = require(\"../../corePlugins/useChartDimensions\");\nconst useChartVoronoi = ({\n  svgRef,\n  params,\n  store,\n  instance\n}) => {\n  const {\n    disableVoronoi,\n    voronoiMaxRadius,\n    onItemClick\n  } = params;\n  const drawingArea = (0, _useSelector.useSelector)(store, _useChartDimensions.selectorChartDrawingArea);\n  const {\n    axis: xAxis,\n    axisIds: xAxisIds\n  } = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartXAxis);\n  const {\n    axis: yAxis,\n    axisIds: yAxisIds\n  } = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartYAxis);\n  const zoomIsInteracting = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartZoomIsInteracting);\n  const {\n    series,\n    seriesOrder\n  } = (0, _useSelector.useSelector)(store, _useChartSeries.selectorChartSeriesProcessed)?.scatter ?? {};\n  const voronoiRef = React.useRef({});\n  const delauneyRef = React.useRef(undefined);\n  const lastFind = React.useRef(undefined);\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  (0, _useEnhancedEffect.default)(() => {\n    store.update(prev => prev.voronoi.isVoronoiEnabled === !disableVoronoi ? prev : (0, _extends2.default)({}, prev, {\n      voronoi: {\n        isVoronoiEnabled: !disableVoronoi\n      }\n    }));\n  }, [store, disableVoronoi]);\n  (0, _useEnhancedEffect.default)(() => {\n    // This effect generate and store the Delaunay object that's used to map coordinate to closest point.\n\n    if (zoomIsInteracting || seriesOrder === undefined || series === undefined || disableVoronoi) {\n      // If there is no scatter chart series\n      return;\n    }\n    voronoiRef.current = {};\n    let points = [];\n    seriesOrder.forEach(seriesId => {\n      const {\n        data,\n        xAxisId,\n        yAxisId\n      } = series[seriesId];\n      const xScale = xAxis[xAxisId ?? defaultXAxisId].scale;\n      const yScale = yAxis[yAxisId ?? defaultYAxisId].scale;\n      const getXPosition = (0, _useScale.getValueToPositionMapper)(xScale);\n      const getYPosition = (0, _useScale.getValueToPositionMapper)(yScale);\n      const seriesPoints = data.flatMap(({\n        x,\n        y\n      }) => {\n        const pointX = getXPosition(x);\n        const pointY = getYPosition(y);\n        if (!instance.isPointInside({\n          x: pointX,\n          y: pointY\n        })) {\n          // If the point is not displayed we move them to a trash coordinate.\n          // This avoids managing index mapping before/after filtering.\n          // The trash point is far enough such that any point in the drawing area will be closer to the mouse than the trash coordinate.\n          return [-drawingArea.width, -drawingArea.height];\n        }\n        return [pointX, pointY];\n      });\n      voronoiRef.current[seriesId] = {\n        seriesId,\n        startIndex: points.length,\n        endIndex: points.length + seriesPoints.length\n      };\n      points = points.concat(seriesPoints);\n    });\n    delauneyRef.current = new _d3Delaunay.Delaunay(points);\n    lastFind.current = undefined;\n  }, [zoomIsInteracting, defaultXAxisId, defaultYAxisId, series, seriesOrder, xAxis, yAxis, drawingArea, instance, disableVoronoi]);\n  React.useEffect(() => {\n    if (svgRef.current === null || disableVoronoi) {\n      return undefined;\n    }\n    const element = svgRef.current;\n    function getClosestPoint(event) {\n      // Get mouse coordinate in global SVG space\n      const svgPoint = (0, _getSVGPoint.getSVGPoint)(element, event);\n      if (!instance.isPointInside(svgPoint)) {\n        lastFind.current = undefined;\n        return 'outside-chart';\n      }\n      if (!delauneyRef.current) {\n        return 'no-point-found';\n      }\n      const closestPointIndex = delauneyRef.current.find(svgPoint.x, svgPoint.y, lastFind.current);\n      if (closestPointIndex === undefined) {\n        return 'no-point-found';\n      }\n      lastFind.current = closestPointIndex;\n      const closestSeries = Object.values(voronoiRef.current).find(value => {\n        return 2 * closestPointIndex >= value.startIndex && 2 * closestPointIndex < value.endIndex;\n      });\n      if (closestSeries === undefined) {\n        return 'no-point-found';\n      }\n      const dataIndex = (2 * closestPointIndex - voronoiRef.current[closestSeries.seriesId].startIndex) / 2;\n      if (voronoiMaxRadius !== undefined) {\n        const pointX = delauneyRef.current.points[2 * closestPointIndex];\n        const pointY = delauneyRef.current.points[2 * closestPointIndex + 1];\n        const dist2 = (pointX - svgPoint.x) ** 2 + (pointY - svgPoint.y) ** 2;\n        if (dist2 > voronoiMaxRadius ** 2) {\n          // The closest point is too far to be considered.\n          return 'outside-voronoi-max-radius';\n        }\n      }\n      return {\n        seriesId: closestSeries.seriesId,\n        dataIndex\n      };\n    }\n    const handleMouseLeave = () => {\n      instance.cleanInteraction?.();\n      instance.clearHighlight?.();\n    };\n    const handleMouseMove = event => {\n      const closestPoint = getClosestPoint(event);\n      if (closestPoint === 'outside-chart') {\n        instance.cleanInteraction?.();\n        instance.clearHighlight?.();\n        return;\n      }\n      if (closestPoint === 'outside-voronoi-max-radius' || closestPoint === 'no-point-found') {\n        instance.removeItemInteraction?.();\n        instance.clearHighlight?.();\n        return;\n      }\n      const {\n        seriesId,\n        dataIndex\n      } = closestPoint;\n      instance.setItemInteraction?.({\n        type: 'scatter',\n        seriesId,\n        dataIndex\n      });\n      instance.setHighlight?.({\n        seriesId,\n        dataIndex\n      });\n    };\n    const handleMouseClick = event => {\n      if (!onItemClick) {\n        return;\n      }\n      const closestPoint = getClosestPoint(event);\n      if (typeof closestPoint === 'string') {\n        // No point fond for any reason\n        return;\n      }\n      const {\n        seriesId,\n        dataIndex\n      } = closestPoint;\n      onItemClick(event, {\n        type: 'scatter',\n        seriesId,\n        dataIndex\n      });\n    };\n    element.addEventListener('pointerleave', handleMouseLeave);\n    element.addEventListener('pointermove', handleMouseMove);\n    element.addEventListener('click', handleMouseClick);\n    return () => {\n      element.removeEventListener('pointerleave', handleMouseLeave);\n      element.removeEventListener('pointermove', handleMouseMove);\n      element.removeEventListener('click', handleMouseClick);\n    };\n  }, [svgRef, yAxis, xAxis, voronoiMaxRadius, onItemClick, disableVoronoi, drawingArea, instance]);\n\n  // Instance implementation\n  const enableVoronoiCallback = (0, _useEventCallback.default)(() => {\n    store.update(prev => (0, _extends2.default)({}, prev, {\n      voronoi: (0, _extends2.default)({}, prev.voronoi, {\n        isVoronoiEnabled: true\n      })\n    }));\n  });\n  const disableVoronoiCallback = (0, _useEventCallback.default)(() => {\n    store.update(prev => (0, _extends2.default)({}, prev, {\n      voronoi: (0, _extends2.default)({}, prev.voronoi, {\n        isVoronoiEnabled: false\n      })\n    }));\n  });\n  return {\n    instance: {\n      enableVoronoi: enableVoronoiCallback,\n      disableVoronoi: disableVoronoiCallback\n    }\n  };\n};\nexports.useChartVoronoi = useChartVoronoi;\nuseChartVoronoi.getDefaultizedParams = ({\n  params\n}) => (0, _extends2.default)({}, params, {\n  disableVoronoi: params.disableVoronoi ?? !params.series.some(item => item.type === 'scatter')\n});\nuseChartVoronoi.getInitialState = params => ({\n  voronoi: {\n    isVoronoiEnabled: !params.disableVoronoi\n  }\n});\nuseChartVoronoi.params = {\n  disableVoronoi: true,\n  voronoiMaxRadius: true,\n  onItemClick: true\n};","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","Object","defineProperty","exports","value","useChartVoronoi","_extends2","React","_useEnhancedEffect","_useEventCallback","_d3Delaunay","_useScale","_getSVGPoint","_useSelector","_useChartCartesianAxis","_useChartSeries","_useChartDimensions","svgRef","params","store","instance","disableVoronoi","voronoiMaxRadius","onItemClick","drawingArea","useSelector","selectorChartDrawingArea","axis","xAxis","axisIds","xAxisIds","selectorChartXAxis","yAxis","yAxisIds","selectorChartYAxis","zoomIsInteracting","selectorChartZoomIsInteracting","series","seriesOrder","selectorChartSeriesProcessed","scatter","voronoiRef","useRef","delauneyRef","undefined","lastFind","defaultXAxisId","defaultYAxisId","update","prev","voronoi","isVoronoiEnabled","current","points","forEach","seriesId","data","xAxisId","yAxisId","xScale","scale","yScale","getXPosition","getValueToPositionMapper","getYPosition","seriesPoints","flatMap","x","y","pointX","pointY","isPointInside","width","height","startIndex","length","endIndex","concat","Delaunay","useEffect","element","getClosestPoint","event","svgPoint","getSVGPoint","closestPointIndex","find","closestSeries","values","dataIndex","dist2","handleMouseLeave","cleanInteraction","clearHighlight","handleMouseMove","closestPoint","removeItemInteraction","setItemInteraction","type","setHighlight","handleMouseClick","addEventListener","removeEventListener","enableVoronoiCallback","disableVoronoiCallback","enableVoronoi","getDefaultizedParams","some","item","getInitialState"],"sources":["C:/Users/LIJIN/Desktop/webTest/Bak/webTest/frontend/node_modules/@mui/x-charts/internals/plugins/featurePlugins/useChartVoronoi/useChartVoronoi.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useChartVoronoi = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"@mui/utils/useEnhancedEffect\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _d3Delaunay = require(\"@mui/x-charts-vendor/d3-delaunay\");\nvar _useScale = require(\"../../../../hooks/useScale\");\nvar _getSVGPoint = require(\"../../../getSVGPoint\");\nvar _useSelector = require(\"../../../store/useSelector\");\nvar _useChartCartesianAxis = require(\"../useChartCartesianAxis\");\nvar _useChartSeries = require(\"../../corePlugins/useChartSeries/useChartSeries.selectors\");\nvar _useChartDimensions = require(\"../../corePlugins/useChartDimensions\");\nconst useChartVoronoi = ({\n  svgRef,\n  params,\n  store,\n  instance\n}) => {\n  const {\n    disableVoronoi,\n    voronoiMaxRadius,\n    onItemClick\n  } = params;\n  const drawingArea = (0, _useSelector.useSelector)(store, _useChartDimensions.selectorChartDrawingArea);\n  const {\n    axis: xAxis,\n    axisIds: xAxisIds\n  } = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartXAxis);\n  const {\n    axis: yAxis,\n    axisIds: yAxisIds\n  } = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartYAxis);\n  const zoomIsInteracting = (0, _useSelector.useSelector)(store, _useChartCartesianAxis.selectorChartZoomIsInteracting);\n  const {\n    series,\n    seriesOrder\n  } = (0, _useSelector.useSelector)(store, _useChartSeries.selectorChartSeriesProcessed)?.scatter ?? {};\n  const voronoiRef = React.useRef({});\n  const delauneyRef = React.useRef(undefined);\n  const lastFind = React.useRef(undefined);\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  (0, _useEnhancedEffect.default)(() => {\n    store.update(prev => prev.voronoi.isVoronoiEnabled === !disableVoronoi ? prev : (0, _extends2.default)({}, prev, {\n      voronoi: {\n        isVoronoiEnabled: !disableVoronoi\n      }\n    }));\n  }, [store, disableVoronoi]);\n  (0, _useEnhancedEffect.default)(() => {\n    // This effect generate and store the Delaunay object that's used to map coordinate to closest point.\n\n    if (zoomIsInteracting || seriesOrder === undefined || series === undefined || disableVoronoi) {\n      // If there is no scatter chart series\n      return;\n    }\n    voronoiRef.current = {};\n    let points = [];\n    seriesOrder.forEach(seriesId => {\n      const {\n        data,\n        xAxisId,\n        yAxisId\n      } = series[seriesId];\n      const xScale = xAxis[xAxisId ?? defaultXAxisId].scale;\n      const yScale = yAxis[yAxisId ?? defaultYAxisId].scale;\n      const getXPosition = (0, _useScale.getValueToPositionMapper)(xScale);\n      const getYPosition = (0, _useScale.getValueToPositionMapper)(yScale);\n      const seriesPoints = data.flatMap(({\n        x,\n        y\n      }) => {\n        const pointX = getXPosition(x);\n        const pointY = getYPosition(y);\n        if (!instance.isPointInside({\n          x: pointX,\n          y: pointY\n        })) {\n          // If the point is not displayed we move them to a trash coordinate.\n          // This avoids managing index mapping before/after filtering.\n          // The trash point is far enough such that any point in the drawing area will be closer to the mouse than the trash coordinate.\n          return [-drawingArea.width, -drawingArea.height];\n        }\n        return [pointX, pointY];\n      });\n      voronoiRef.current[seriesId] = {\n        seriesId,\n        startIndex: points.length,\n        endIndex: points.length + seriesPoints.length\n      };\n      points = points.concat(seriesPoints);\n    });\n    delauneyRef.current = new _d3Delaunay.Delaunay(points);\n    lastFind.current = undefined;\n  }, [zoomIsInteracting, defaultXAxisId, defaultYAxisId, series, seriesOrder, xAxis, yAxis, drawingArea, instance, disableVoronoi]);\n  React.useEffect(() => {\n    if (svgRef.current === null || disableVoronoi) {\n      return undefined;\n    }\n    const element = svgRef.current;\n    function getClosestPoint(event) {\n      // Get mouse coordinate in global SVG space\n      const svgPoint = (0, _getSVGPoint.getSVGPoint)(element, event);\n      if (!instance.isPointInside(svgPoint)) {\n        lastFind.current = undefined;\n        return 'outside-chart';\n      }\n      if (!delauneyRef.current) {\n        return 'no-point-found';\n      }\n      const closestPointIndex = delauneyRef.current.find(svgPoint.x, svgPoint.y, lastFind.current);\n      if (closestPointIndex === undefined) {\n        return 'no-point-found';\n      }\n      lastFind.current = closestPointIndex;\n      const closestSeries = Object.values(voronoiRef.current).find(value => {\n        return 2 * closestPointIndex >= value.startIndex && 2 * closestPointIndex < value.endIndex;\n      });\n      if (closestSeries === undefined) {\n        return 'no-point-found';\n      }\n      const dataIndex = (2 * closestPointIndex - voronoiRef.current[closestSeries.seriesId].startIndex) / 2;\n      if (voronoiMaxRadius !== undefined) {\n        const pointX = delauneyRef.current.points[2 * closestPointIndex];\n        const pointY = delauneyRef.current.points[2 * closestPointIndex + 1];\n        const dist2 = (pointX - svgPoint.x) ** 2 + (pointY - svgPoint.y) ** 2;\n        if (dist2 > voronoiMaxRadius ** 2) {\n          // The closest point is too far to be considered.\n          return 'outside-voronoi-max-radius';\n        }\n      }\n      return {\n        seriesId: closestSeries.seriesId,\n        dataIndex\n      };\n    }\n    const handleMouseLeave = () => {\n      instance.cleanInteraction?.();\n      instance.clearHighlight?.();\n    };\n    const handleMouseMove = event => {\n      const closestPoint = getClosestPoint(event);\n      if (closestPoint === 'outside-chart') {\n        instance.cleanInteraction?.();\n        instance.clearHighlight?.();\n        return;\n      }\n      if (closestPoint === 'outside-voronoi-max-radius' || closestPoint === 'no-point-found') {\n        instance.removeItemInteraction?.();\n        instance.clearHighlight?.();\n        return;\n      }\n      const {\n        seriesId,\n        dataIndex\n      } = closestPoint;\n      instance.setItemInteraction?.({\n        type: 'scatter',\n        seriesId,\n        dataIndex\n      });\n      instance.setHighlight?.({\n        seriesId,\n        dataIndex\n      });\n    };\n    const handleMouseClick = event => {\n      if (!onItemClick) {\n        return;\n      }\n      const closestPoint = getClosestPoint(event);\n      if (typeof closestPoint === 'string') {\n        // No point fond for any reason\n        return;\n      }\n      const {\n        seriesId,\n        dataIndex\n      } = closestPoint;\n      onItemClick(event, {\n        type: 'scatter',\n        seriesId,\n        dataIndex\n      });\n    };\n    element.addEventListener('pointerleave', handleMouseLeave);\n    element.addEventListener('pointermove', handleMouseMove);\n    element.addEventListener('click', handleMouseClick);\n    return () => {\n      element.removeEventListener('pointerleave', handleMouseLeave);\n      element.removeEventListener('pointermove', handleMouseMove);\n      element.removeEventListener('click', handleMouseClick);\n    };\n  }, [svgRef, yAxis, xAxis, voronoiMaxRadius, onItemClick, disableVoronoi, drawingArea, instance]);\n\n  // Instance implementation\n  const enableVoronoiCallback = (0, _useEventCallback.default)(() => {\n    store.update(prev => (0, _extends2.default)({}, prev, {\n      voronoi: (0, _extends2.default)({}, prev.voronoi, {\n        isVoronoiEnabled: true\n      })\n    }));\n  });\n  const disableVoronoiCallback = (0, _useEventCallback.default)(() => {\n    store.update(prev => (0, _extends2.default)({}, prev, {\n      voronoi: (0, _extends2.default)({}, prev.voronoi, {\n        isVoronoiEnabled: false\n      })\n    }));\n  });\n  return {\n    instance: {\n      enableVoronoi: enableVoronoiCallback,\n      disableVoronoi: disableVoronoiCallback\n    }\n  };\n};\nexports.useChartVoronoi = useChartVoronoi;\nuseChartVoronoi.getDefaultizedParams = ({\n  params\n}) => (0, _extends2.default)({}, params, {\n  disableVoronoi: params.disableVoronoi ?? !params.series.some(item => item.type === 'scatter')\n});\nuseChartVoronoi.getInitialState = params => ({\n  voronoi: {\n    isVoronoiEnabled: !params.disableVoronoi\n  }\n});\nuseChartVoronoi.params = {\n  disableVoronoi: true,\n  voronoiMaxRadius: true,\n  onItemClick: true\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\\\u684C\\u9762\\\\webTest\\\\frontend\\\\src\\\\pages\\\\Actuators.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Typography, Grid, Card, CardContent, CardActions, Button, Chip, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, Switch, FormControlLabel, CircularProgress } from '@mui/material';\nimport { Add as AddIcon, Refresh as RefreshIcon, Edit as EditIcon, Delete as DeleteIcon, PowerSettingsNew as PowerIcon, FilterList as FilterIcon, Settings as SettingsIcon } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { actuatorAPI } from '../services/api';\nimport { useSocket } from '../contexts/SocketContext';\n\n// Actuator type mapping\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACTUATOR_TYPE_NAMES = {\n  'irrigation': 'Irrigation System',\n  'ventilation': 'Ventilation System',\n  'lighting': 'Lighting System',\n  'heating': 'Heating System',\n  'cooling': 'Cooling System',\n  'curtain': 'Curtain System',\n  'nutrient': 'Nutrient System',\n  'water_pump': 'Water Pump',\n  'fan': 'Fan',\n  'humidifier': 'Humidifier',\n  'pump': 'Pump'\n};\n\n// Actuator status styles and labels\nconst STATUS_STYLES = {\n  'on': {\n    color: 'success',\n    label: 'On'\n  },\n  'off': {\n    color: 'default',\n    label: 'Off'\n  },\n  'low': {\n    color: 'info',\n    label: 'Low'\n  },\n  'medium': {\n    color: 'primary',\n    label: 'Medium'\n  },\n  'high': {\n    color: 'warning',\n    label: 'High'\n  },\n  'auto': {\n    color: 'secondary',\n    label: 'Auto'\n  },\n  'dim': {\n    color: 'info',\n    label: 'Dim'\n  },\n  'bright': {\n    color: 'warning',\n    label: 'Bright'\n  },\n  'open': {\n    color: 'success',\n    label: 'Open'\n  },\n  'closed': {\n    color: 'default',\n    label: 'Closed'\n  },\n  'half': {\n    color: 'info',\n    label: 'Half open'\n  },\n  'error': {\n    color: 'error',\n    label: 'Error'\n  }\n};\n\n// Actuator mode names\nconst MODE_NAMES = {\n  'manual': 'Manual Mode',\n  'automatic': 'Automatic Mode'\n};\nconst Actuators = () => {\n  _s();\n  const navigate = useNavigate();\n  const [actuators, setActuators] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [filters, setFilters] = useState({\n    type: '',\n    location: '',\n    status: '',\n    onlyActive: false\n  });\n  const {\n    actuatorData\n  } = useSocket();\n\n  // Get actuator list\n  const fetchActuators = async () => {\n    setLoading(true);\n    setError(null); // 清除之前的错误\n\n    try {\n      const response = await actuatorAPI.getAllActuators();\n      console.log('获取执行器响应:', response);\n\n      // 检查API响应格式并获取数据\n      if (response && response.success) {\n        // 直接从后端API响应中获取数据数组，response.data不再嵌套\n        const data = response.data || [];\n        console.log('设置执行器数据:', data);\n        console.log('使用模拟数据成功'); // 添加调试日志\n\n        if (data.length === 0) {\n          console.log('没有找到执行器数据');\n        }\n        setActuators(data);\n        setError(null);\n      } else {\n        // 处理API返回的错误信息\n        const errorMsg = response && response.message ? response.message : '获取执行器列表失败';\n        console.error('API错误:', errorMsg);\n        setError(errorMsg);\n        setActuators([]); // 清空执行器列表\n      }\n    } catch (err) {\n      console.error('获取执行器列表失败:', err);\n      setError('获取执行器列表失败，请稍后再试');\n      setActuators([]); // 清空执行器列表\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchActuators();\n  }, []);\n\n  // 使用SocketContext中的执行器数据更新UI\n  useEffect(() => {\n    if (Object.keys(actuatorData).length === 0 || actuators.length === 0) return;\n    let hasUpdates = false;\n    const updatedActuators = [...actuators];\n\n    // 遍历所有Socket执行器数据\n    Object.values(actuatorData).forEach(socketActuator => {\n      // 寻找匹配的执行器\n      const matchingActuators = updatedActuators.filter(actuator => actuator.type === socketActuator.type && actuator.location.toLowerCase() === socketActuator.location.toLowerCase());\n\n      // 更新匹配的执行器状态\n      if (matchingActuators.length > 0) {\n        matchingActuators.forEach(actuator => {\n          actuator.status = socketActuator.state;\n          actuator.last_control_time = new Date(socketActuator.timestamp * 1000).toISOString();\n          actuator.is_active = true; // 收到数据意味着执行器处于活动状态\n          hasUpdates = true;\n        });\n      }\n    });\n\n    // 只有当有更新时才设置状态\n    if (hasUpdates) {\n      setActuators(updatedActuators);\n    }\n  }, [actuatorData, actuators]);\n\n  // Control actuator\n  const handleControlActuator = async (id, action, currentStatus) => {\n    try {\n      await actuatorAPI.controlActuator(id, {\n        action\n      });\n\n      // Update local state to avoid reloading\n      const updatedActuators = actuators.map(a => a.id === id ? {\n        ...a,\n        status: action,\n        last_control_time: new Date().toISOString()\n      } : a);\n\n      // Set the updated actuators in state\n      setActuators(updatedActuators);\n\n      // No need to save to localStorage here as it's already handled in the API\n    } catch (err) {\n      console.error('Failed to control actuator:', err);\n      setError('Operation failed, please try again later');\n    }\n  };\n\n  // Open actuator details page\n  const handleViewDetails = id => {\n    navigate(`/actuators/${id}`);\n  };\n\n  // Apply filters\n  const applyFilters = actuatorsList => {\n    return actuatorsList.filter(actuator => {\n      if (filters.onlyActive && !actuator.is_active) return false;\n      if (filters.type && actuator.type !== filters.type) return false;\n      if (filters.location && actuator.location !== filters.location) return false;\n      if (filters.status && actuator.status !== filters.status) return false;\n      return true;\n    });\n  };\n\n  // Get available locations list (unique)\n  const availableLocations = [...new Set(actuators.map(a => a.location))];\n  // Get available types list (unique)\n  const availableTypes = [...new Set(actuators.map(a => a.type))];\n  // Get available statuses list (unique)\n  const availableStatuses = [...new Set(actuators.map(a => a.status))];\n  const filteredActuators = applyFilters(actuators);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Actuator Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          onClick: () => setFilterOpen(true),\n          sx: {\n            mr: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(FilterIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 24\n          }, this),\n          onClick: fetchActuators,\n          sx: {\n            mr: 1\n          },\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 24\n          }, this),\n          onClick: () => navigate('/actuators/new'),\n          children: \"Add Actuator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2,\n        p: 2,\n        bgcolor: 'error.light',\n        borderRadius: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"300px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this) : filteredActuators.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      py: 5,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No actuators match the current filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: filteredActuators.map(actuator => {\n        var _STATUS_STYLES$actuat, _STATUS_STYLES$actuat2;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                flexGrow: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                mb: 1,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"h2\",\n                  children: actuator.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: ((_STATUS_STYLES$actuat = STATUS_STYLES[actuator.status]) === null || _STATUS_STYLES$actuat === void 0 ? void 0 : _STATUS_STYLES$actuat.label) || actuator.status,\n                  color: ((_STATUS_STYLES$actuat2 = STATUS_STYLES[actuator.status]) === null || _STATUS_STYLES$actuat2 === void 0 ? void 0 : _STATUS_STYLES$actuat2.color) || 'default',\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: ACTUATOR_TYPE_NAMES[actuator.type] || actuator.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                component: \"p\",\n                gutterBottom: true,\n                children: [\"Location: \", actuator.location]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                component: \"p\",\n                gutterBottom: true,\n                children: [\"Mode: \", MODE_NAMES[actuator.mode] || actuator.mode]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), actuator.last_control_time && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                component: \"p\",\n                color: \"textSecondary\",\n                children: [\"Last control: \", new Date(actuator.last_control_time).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: actuator.status === 'on' ? 'contained' : 'outlined',\n                color: actuator.status === 'on' ? 'error' : 'success',\n                startIcon: /*#__PURE__*/_jsxDEV(PowerIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handleControlActuator(actuator.id, actuator.status === 'on' ? 'off' : 'on'),\n                disabled: !actuator.is_active,\n                children: actuator.status === 'on' ? 'Turn Off' : 'Turn On'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                onClick: () => handleViewDetails(actuator.id),\n                endIcon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 30\n                }, this),\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)\n        }, actuator.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: filterOpen,\n      onClose: () => setFilterOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Filter Actuators\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Actuator Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: filters.type,\n            label: \"Actuator Type\",\n            onChange: e => setFilters({\n              ...filters,\n              type: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), availableTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: type,\n              children: ACTUATOR_TYPE_NAMES[type] || type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: filters.location,\n            label: \"Location\",\n            onChange: e => setFilters({\n              ...filters,\n              location: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), availableLocations.map(location => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: location,\n              children: location\n            }, location, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: filters.status,\n            label: \"Status\",\n            onChange: e => setFilters({\n              ...filters,\n              status: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), availableStatuses.map(status => {\n              var _STATUS_STYLES$status;\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: status,\n                children: ((_STATUS_STYLES$status = STATUS_STYLES[status]) === null || _STATUS_STYLES$status === void 0 ? void 0 : _STATUS_STYLES$status.label) || status\n              }, status, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: filters.onlyActive,\n            onChange: e => setFilters({\n              ...filters,\n              onlyActive: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this),\n          label: \"Show only active actuators\",\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setFilters({\n              type: '',\n              location: '',\n              status: '',\n              onlyActive: false\n            });\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setFilterOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(Actuators, \"O8cFMvOq+84DVCLa5uEjOUlCjcA=\", false, function () {\n  return [useNavigate, useSocket];\n});\n_c = Actuators;\nexport default Actuators;\nvar _c;\n$RefreshReg$(_c, \"Actuators\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Typography","Grid","Card","CardContent","CardActions","Button","Chip","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Switch","FormControlLabel","CircularProgress","Add","AddIcon","Refresh","RefreshIcon","Edit","EditIcon","Delete","DeleteIcon","PowerSettingsNew","PowerIcon","FilterList","FilterIcon","Settings","SettingsIcon","useNavigate","actuatorAPI","useSocket","jsxDEV","_jsxDEV","ACTUATOR_TYPE_NAMES","STATUS_STYLES","color","label","MODE_NAMES","Actuators","_s","navigate","actuators","setActuators","loading","setLoading","error","setError","filterOpen","setFilterOpen","filters","setFilters","type","location","status","onlyActive","actuatorData","fetchActuators","response","getAllActuators","console","log","success","data","length","errorMsg","message","err","Object","keys","hasUpdates","updatedActuators","values","forEach","socketActuator","matchingActuators","filter","actuator","toLowerCase","state","last_control_time","Date","timestamp","toISOString","is_active","handleControlActuator","id","action","currentStatus","controlActuator","map","a","handleViewDetails","applyFilters","actuatorsList","availableLocations","Set","availableTypes","availableStatuses","filteredActuators","maxWidth","sx","mt","mb","children","display","justifyContent","alignItems","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mr","startIcon","p","bgcolor","borderRadius","minHeight","textAlign","py","container","spacing","_STATUS_STYLES$actuat","_STATUS_STYLES$actuat2","item","xs","sm","md","height","flexDirection","flexGrow","name","size","gutterBottom","mode","toLocaleString","disabled","endIcon","open","onClose","fullWidth","margin","value","onChange","e","target","_STATUS_STYLES$status","control","checked","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/桌面/webTest/frontend/src/pages/Actuators.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Container, \n  Typography, \n  Grid, \n  Card, \n  CardContent, \n  CardActions,\n  Button, \n  Chip, \n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  FormControlLabel,\n  CircularProgress\n} from '@mui/material';\nimport { \n  Add as AddIcon,\n  Refresh as RefreshIcon, \n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  PowerSettingsNew as PowerIcon,\n  FilterList as FilterIcon,\n  Settings as SettingsIcon\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { actuatorAPI } from '../services/api';\nimport { useSocket } from '../contexts/SocketContext';\n\n// Actuator type mapping\nconst ACTUATOR_TYPE_NAMES = {\n  'irrigation': 'Irrigation System',\n  'ventilation': 'Ventilation System',\n  'lighting': 'Lighting System',\n  'heating': 'Heating System',\n  'cooling': 'Cooling System', \n  'curtain': 'Curtain System',\n  'nutrient': 'Nutrient System',\n  'water_pump': 'Water Pump',\n  'fan': 'Fan',\n  'humidifier': 'Humidifier',\n  'pump': 'Pump'\n};\n\n// Actuator status styles and labels\nconst STATUS_STYLES = {\n  'on': { color: 'success', label: 'On' },\n  'off': { color: 'default', label: 'Off' },\n  'low': { color: 'info', label: 'Low' },\n  'medium': { color: 'primary', label: 'Medium' },\n  'high': { color: 'warning', label: 'High' },\n  'auto': { color: 'secondary', label: 'Auto' },\n  'dim': { color: 'info', label: 'Dim' },\n  'bright': { color: 'warning', label: 'Bright' },\n  'open': { color: 'success', label: 'Open' },\n  'closed': { color: 'default', label: 'Closed' },\n  'half': { color: 'info', label: 'Half open' },\n  'error': { color: 'error', label: 'Error' }\n};\n\n// Actuator mode names\nconst MODE_NAMES = {\n  'manual': 'Manual Mode',\n  'automatic': 'Automatic Mode'\n};\n\nconst Actuators = () => {\n  const navigate = useNavigate();\n  const [actuators, setActuators] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [filters, setFilters] = useState({\n    type: '',\n    location: '',\n    status: '',\n    onlyActive: false\n  });\n  const { actuatorData } = useSocket();\n\n  // Get actuator list\n  const fetchActuators = async () => {\n    setLoading(true);\n    setError(null); // 清除之前的错误\n    \n    try {\n      const response = await actuatorAPI.getAllActuators();\n      console.log('获取执行器响应:', response);\n      \n      // 检查API响应格式并获取数据\n      if (response && response.success) {\n        // 直接从后端API响应中获取数据数组，response.data不再嵌套\n        const data = response.data || [];\n        console.log('设置执行器数据:', data);\n        console.log('使用模拟数据成功'); // 添加调试日志\n        \n        if (data.length === 0) {\n          console.log('没有找到执行器数据');\n        }\n        \n        setActuators(data);\n        setError(null);\n      } else {\n        // 处理API返回的错误信息\n        const errorMsg = (response && response.message) ? response.message : '获取执行器列表失败';\n        console.error('API错误:', errorMsg);\n        setError(errorMsg);\n        setActuators([]); // 清空执行器列表\n      }\n    } catch (err) {\n      console.error('获取执行器列表失败:', err);\n      setError('获取执行器列表失败，请稍后再试');\n      setActuators([]); // 清空执行器列表\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchActuators();\n  }, []);\n  \n  // 使用SocketContext中的执行器数据更新UI\n  useEffect(() => {\n    if (Object.keys(actuatorData).length === 0 || actuators.length === 0) return;\n    \n    let hasUpdates = false;\n    const updatedActuators = [...actuators];\n    \n    // 遍历所有Socket执行器数据\n    Object.values(actuatorData).forEach(socketActuator => {\n      // 寻找匹配的执行器\n      const matchingActuators = updatedActuators.filter(\n        actuator => actuator.type === socketActuator.type && \n                    actuator.location.toLowerCase() === socketActuator.location.toLowerCase()\n      );\n      \n      // 更新匹配的执行器状态\n      if (matchingActuators.length > 0) {\n        matchingActuators.forEach(actuator => {\n          actuator.status = socketActuator.state;\n          actuator.last_control_time = new Date(socketActuator.timestamp * 1000).toISOString();\n          actuator.is_active = true; // 收到数据意味着执行器处于活动状态\n          hasUpdates = true;\n        });\n      }\n    });\n    \n    // 只有当有更新时才设置状态\n    if (hasUpdates) {\n      setActuators(updatedActuators);\n    }\n  }, [actuatorData, actuators]);\n\n  // Control actuator\n  const handleControlActuator = async (id, action, currentStatus) => {\n    try {\n      await actuatorAPI.controlActuator(id, { action });\n      \n      // Update local state to avoid reloading\n      const updatedActuators = actuators.map(a => \n        a.id === id ? {\n          ...a, \n          status: action, \n          last_control_time: new Date().toISOString()\n        } : a\n      );\n      \n      // Set the updated actuators in state\n      setActuators(updatedActuators);\n      \n      // No need to save to localStorage here as it's already handled in the API\n    } catch (err) {\n      console.error('Failed to control actuator:', err);\n      setError('Operation failed, please try again later');\n    }\n  };\n\n  // Open actuator details page\n  const handleViewDetails = (id) => {\n    navigate(`/actuators/${id}`);\n  };\n\n  // Apply filters\n  const applyFilters = (actuatorsList) => {\n    return actuatorsList.filter(actuator => {\n      if (filters.onlyActive && !actuator.is_active) return false;\n      if (filters.type && actuator.type !== filters.type) return false;\n      if (filters.location && actuator.location !== filters.location) return false;\n      if (filters.status && actuator.status !== filters.status) return false;\n      return true;\n    });\n  };\n\n  // Get available locations list (unique)\n  const availableLocations = [...new Set(actuators.map(a => a.location))];\n  // Get available types list (unique)\n  const availableTypes = [...new Set(actuators.map(a => a.type))];\n  // Get available statuses list (unique)\n  const availableStatuses = [...new Set(actuators.map(a => a.status))];\n\n  const filteredActuators = applyFilters(actuators);\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\" component=\"h1\">Actuator Management</Typography>\n        <Box>\n          <IconButton \n            color=\"primary\" \n            onClick={() => setFilterOpen(true)}\n            sx={{ mr: 1 }}\n          >\n            <FilterIcon />\n          </IconButton>\n          <Button \n            variant=\"outlined\" \n            startIcon={<RefreshIcon />}\n            onClick={fetchActuators}\n            sx={{ mr: 1 }}\n          >\n            Refresh\n          </Button>\n          <Button \n            variant=\"contained\" \n            startIcon={<AddIcon />}\n            onClick={() => navigate('/actuators/new')}\n          >\n            Add Actuator\n          </Button>\n        </Box>\n      </Box>\n\n      {error && (\n        <Box sx={{ mb: 2, p: 2, bgcolor: 'error.light', borderRadius: 1 }}>\n          <Typography color=\"error\">{error}</Typography>\n        </Box>\n      )}\n\n      {loading ? (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"300px\">\n          <CircularProgress />\n        </Box>\n      ) : filteredActuators.length === 0 ? (\n        <Box textAlign=\"center\" py={5}>\n          <Typography variant=\"body1\">\n            No actuators match the current filters\n          </Typography>\n        </Box>\n      ) : (\n        <Grid container spacing={3}>\n          {filteredActuators.map((actuator) => (\n            <Grid item xs={12} sm={6} md={4} key={actuator.id}>\n              <Card \n                sx={{ \n                  height: '100%', \n                  display: 'flex', \n                  flexDirection: 'column'\n                }}\n              >\n                <CardContent sx={{ flexGrow: 1 }}>\n                  <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\n                    <Typography variant=\"h6\" component=\"h2\">\n                      {actuator.name}\n                    </Typography>\n                    <Chip \n                      label={STATUS_STYLES[actuator.status]?.label || actuator.status} \n                      color={STATUS_STYLES[actuator.status]?.color || 'default'}\n                      size=\"small\"\n                    />\n                  </Box>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    {ACTUATOR_TYPE_NAMES[actuator.type] || actuator.type}\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                    Location: {actuator.location}\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                    Mode: {MODE_NAMES[actuator.mode] || actuator.mode}\n                  </Typography>\n                  {actuator.last_control_time && (\n                    <Typography variant=\"caption\" component=\"p\" color=\"textSecondary\">\n                      Last control: {new Date(actuator.last_control_time).toLocaleString()}\n                    </Typography>\n                  )}\n                </CardContent>\n                <CardActions>\n                  <Button \n                    size=\"small\" \n                    variant={actuator.status === 'on' ? 'contained' : 'outlined'}\n                    color={actuator.status === 'on' ? 'error' : 'success'}\n                    startIcon={<PowerIcon />}\n                    onClick={() => handleControlActuator(actuator.id, actuator.status === 'on' ? 'off' : 'on')}\n                    disabled={!actuator.is_active}\n                  >\n                    {actuator.status === 'on' ? 'Turn Off' : 'Turn On'}\n                  </Button>\n                  <Button \n                    size=\"small\" \n                    onClick={() => handleViewDetails(actuator.id)}\n                    endIcon={<SettingsIcon />}\n                  >\n                    Details\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      )}\n\n      {/* Filter dialog */}\n      <Dialog open={filterOpen} onClose={() => setFilterOpen(false)}>\n        <DialogTitle>Filter Actuators</DialogTitle>\n        <DialogContent>\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel>Actuator Type</InputLabel>\n            <Select\n              value={filters.type}\n              label=\"Actuator Type\"\n              onChange={(e) => setFilters({...filters, type: e.target.value})}\n            >\n              <MenuItem value=\"\">All</MenuItem>\n              {availableTypes.map(type => (\n                <MenuItem key={type} value={type}>\n                  {ACTUATOR_TYPE_NAMES[type] || type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel>Location</InputLabel>\n            <Select\n              value={filters.location}\n              label=\"Location\"\n              onChange={(e) => setFilters({...filters, location: e.target.value})}\n            >\n              <MenuItem value=\"\">All</MenuItem>\n              {availableLocations.map(location => (\n                <MenuItem key={location} value={location}>{location}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel>Status</InputLabel>\n            <Select\n              value={filters.status}\n              label=\"Status\"\n              onChange={(e) => setFilters({...filters, status: e.target.value})}\n            >\n              <MenuItem value=\"\">All</MenuItem>\n              {availableStatuses.map(status => (\n                <MenuItem key={status} value={status}>\n                  {STATUS_STYLES[status]?.label || status}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControlLabel\n            control={\n              <Switch \n                checked={filters.onlyActive} \n                onChange={(e) => setFilters({...filters, onlyActive: e.target.checked})}\n              />\n            }\n            label=\"Show only active actuators\"\n            margin=\"normal\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {\n            setFilters({\n              type: '',\n              location: '',\n              status: '',\n              onlyActive: false\n            });\n          }}>\n            Reset\n          </Button>\n          <Button onClick={() => setFilterOpen(false)}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default Actuators; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}